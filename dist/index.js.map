{
  "version": 3,
  "sources": ["../tokenize/lib/abbreviations.json", "../tokenize/lib/emojis.json", "../tokenize/lib/contractions.json", "../tokenize/lib/main.js", "../tokenize/lib/index.js", "../expand-acronyms/lib/acronyms.json", "../expand-acronyms/lib/main.js", "../expand-acronyms/lib/index.js", "../expand-contractions/lib/contractions.json", "../expand-contractions/lib/main.js", "../expand-contractions/lib/index.js", "../lda/lib/matrix.js", "../lda/lib/get_thetas.js", "../lda/lib/validate.js", "../lda/lib/get_phis.js", "../lda/lib/init.js", "../lda/lib/avg_matrix.js", "../lda/lib/fit.js", "../lda/lib/main.js", "../lda/lib/index.js", "../ordinalize/lib/validate.js", "../ordinalize/lib/main.js", "../ordinalize/lib/index.js", "../porter-stemmer/lib/main.js", "../porter-stemmer/lib/index.js", "../sentencize/lib/main.js", "../sentencize/lib/index.js", "../lib/index.js"],
  "sourcesContent": ["{\n    \"i.e.\": [\"i.e.\"],\n    \"I.e.\": [\"I.e.\"],\n    \"I.E.\": [\"I.E.\"],\n    \"e.g.\": [\"e.g.\"],\n    \"E.g.\": [\"E.g.\"],\n    \"E.G.\": [\"E.G.\"],\n    \"et al.\": [\"et al.\"],\n    \"etc.\": [\"etc.\"],\n    \"vs.\": [\"vs.\"],\n    \"A.S.A.P\": [\"A.S.A.P\"],\n    \"E.T.A.\": [\"E.T.A.\"],\n    \"D.I.Y\": [\"D.I.Y\"],\n    \"R.S.V.P\": [\"R.S.V.P\"],\n    \"P.S.\": [\"P.S.\"],\n    \"B.Y.O.B\": [\"B.Y.O.B\"],\n    \"Ms.\": [\"Ms.\"],\n    \"Mr.\": [\"Mr.\"],\n    \"Dr.\": [\"Dr.\"],\n    \"Prof.\": [\"Prof.\"],\n    \"Mrs.\": [\"Mrs.\"],\n    \"Messrs.\": [\"Messrs.\"],\n    \"Gov.\": [\"Gov.\"],\n    \"Gen.\": [\"Gen.\"],\n    \"Lt.\": [\"Lt.\"],\n    \"Col.\":[\"Col.\"],\n    \"Mt.\": [\"Mt.\"],\n    \"Bros.\": [\"Bros.\"],\n    \"Corp.\": [\"Corp.\"],\n    \"Co.\": [\"Co.\"],\n    \"co.\": [\"co.\"],\n    \"Inc.\": [\"Inc.\"],\n    \"Ltd.\": [\"Ltd.\"],\n    \"Rep.\": [\"Rep.\"],\n    \"Sen.\": [\"Sen.\"],\n    \"Jr.\": [\"Jr.\"],\n    \"Sr.\": [\"Sr.\"],\n    \"Ph.D.\": [\"Ph.D.\"],\n    \"J.D.\": [\"J.D.\"],\n    \"M.D.\": [\"M.D.\"],\n    \"Rev.\": [\"Rev.\"],\n    \"Adm.\": [\"Adm.\"],\n    \"St.\": [\"St.\"],\n    \"a.m.\": [\"a.m.\"],\n    \"p.m.\": [\"p.m.\"],\n    \"b.c.\": [\"b.c.\"],\n    \"B.C.\": [\"B.C.\"],\n    \"a.d.\": [\"a.d.\"],\n    \"A.D.\": [\"A.D.\"],\n    \"b.c.e.\": [\"b.c.e.\"],\n    \"B.C.E.\": [\"B.C.E.\"],\n    \"Jan.\": [\"Jan.\"],\n    \"Feb.\": [\"Feb.\"],\n    \"Mar.\": [\"Mar.\"],\n    \"Apr.\": [\"Apr.\"],\n    \"May.\": [\"May.\"],\n    \"Jun.\": [\"Jun.\"],\n    \"Jul.\": [\"Jul.\"],\n    \"Aug.\": [\"Aug.\"],\n    \"Sep.\": [\"Sep.\"],\n    \"Sept.\": [\"Sept.\"],\n    \"Oct.\": [\"Oct.\"],\n    \"Nov.\": [\"Nov.\"],\n    \"Dec.\": [\"Dec.\"],\n    \"Ala.\": [\"Ala.\"],\n    \"Ariz.\": [\"Ariz.\"],\n    \"Ark.\": [ \"Ark.\"],\n    \"Calif.\": [\"Calif.\"],\n    \"Colo.\": [\"Colo.\"],\n    \"Conn.\": [\"Conn.\"],\n    \"Del.\": [ \"Del.\"],\n    \"D.C.\": [\"D.C.\"],\n    \"Fla.\": [ \"Fla.\"],\n    \"Ga.\": [\"Ga.\"],\n    \"Ill.\": [\"Ill.\"],\n    \"Ind.\": [\"Ind.\"],\n    \"Kans.\": [\"Kans.\"],\n    \"Kan.\": [\"Kan.\"],\n    \"Ky.\": [\"Ky.\"],\n    \"La.\": [\"La.\"],\n    \"Md.\": [\"Md.\"],\n    \"Mass.\": [\"Mass.\"],\n    \"Mich.\": [\"Mich.\"],\n    \"Minn.\": [\"Minn.\"],\n    \"Miss.\": [\"Miss.\"],\n    \"Mo.\": [\"Mo.\"],\n    \"Mont.\": [\"Mont.\"],\n    \"Nebr.\": [\"Nebr.\"],\n    \"Neb.\": [\"Neb.\"],\n    \"Nev.\": [ \"Nev.\"],\n    \"N.H.\": [\"N.H.\"],\n    \"N.J.\": [\"N.J.\"],\n    \"N.M.\": [\"N.M.\"],\n    \"N.Y.\": [\"N.Y.\"],\n    \"N.C.\": [\"N.C.\"],\n    \"N.D.\": [\"N.D.\"],\n    \"Okla.\": [\"Okla.\"],\n    \"Ore.\": [\"Ore.\"],\n    \"Pa.\": [\"Pa.\"],\n    \"Tenn.\": [\"Tenn.\"],\n    \"Va.\": [\"Va.\"],\n    \"Wash.\": [\"Wash.\"],\n    \"Wis.\": [\"Wis.\"]\n}\n", "{\n    \"^_^\": [\"^_^\"],\n    \"=D\": [\"=D\"],\n    \";-p\": [\";-p\"],\n    \":O\": [\":O\"],\n    \":-/\": [\":-/\"],\n    \"xD\": [\"xD\"],\n    \"V_V\": [\"V_V\"],\n    \";(\": [\";(\"],\n    \"(:\": [\"(:\"],\n    \"\\\")\": [\"\\\")\"],\n    \":Y\": [\":Y\"],\n    \":]\": [\":]\"],\n    \":3\": [\":3\"],\n    \":(\": [\":(\"],\n    \":-)\": [\":-)\"],\n    \"=3\": [\"=3\"],\n    \":))\": [\":))\"],\n    \":>\": [\":>\"],\n    \";p\": [\";p\"],\n    \":p\": [\":p\"],\n    \"=[[\": [\"=[[\"],\n    \"xDD\": [\"xDD\"],\n    \"<333\": [\"<333\"],\n    \"<33\": [\"<33\"],\n    \":P\": [\":P\"],\n    \"o.O\": [\"o.O\"],\n    \"<3\": [\"<3\"],\n    \";-)\": [\";-)\"],\n    \":)\": [\":)\"],\n    \"-_-\": [\"-_-\"],\n    \":')\": [\":')\"],\n    \"o_O\": [\"o_O\"],\n    \";)\": [\";)\"],\n    \"=]\": [\"=]\"],\n    \"(=\": [\"(=\"],\n    \"-__-\": [\"-__-\"],\n    \":/\": [\":/\"],\n    \":0\": [\":0\"],\n    \"(^_^)\": [\"(^_^)\"],\n    \";D\": [\";D\"],\n    \"o_o\": [\"o_o\"],\n    \":((\": [\":((\"],\n    \"=)\": [\"=)\"]\n}\n", "{\n    \"'s\": [\"'s\"],\n    \"'S\": [\"'S\"],\n    \"ain't\": [\"ai\", \"n't\"],\n    \"aint\": [\"ai\", \"nt\"],\n    \"Ain't\": [\"Ai\", \"n't\"],\n    \"aren't\": [\"are\", \"n't\"],\n    \"arent\": [\"are\", \"nt\"],\n    \"Aren't\": [\"Are\", \"n't\"],\n    \"can't\": [\"ca\", \"n't\"],\n    \"cant\": [\"ca\", \"nt\"],\n    \"Can't\": [\"Ca\", \"n't\"],\n    \"can't've\": [\"ca\", \"n't\", \"'ve\"],\n    \"'cause\": [\"'cause'\"],\n    \"cannot\": [\"can\", \"not\"],\n    \"Cannot\": [\"Can\", \"not\"],\n    \"could've\": [\"could\", \"'ve\"],\n    \"couldve\": [\"could\", \"ve\"],\n    \"Could've\": [\"Could\", \"'ve\"],\n    \"couldn't\": [\"could\", \"n't\"],\n    \"couldnt\": [\"could\", \"nt\"],\n    \"Couldn't\": [\"Could\", \"n't\"],\n    \"couldn't've\": [\"could\", \"n't\", \"'ve\"],\n    \"couldntve\": [\"could\", \"nt\", \"ve\"],\n    \"Couldn't've\": [\"Could\", \"n't\", \"'ve\"],\n    \"didn't\": [\"did\", \"n't\"],\n    \"didnt\": [\"did\", \"nt\"],\n    \"Didn't\": [\"Did\", \"n't\"],\n    \"doesn't\": [\"does\", \"n't\"],\n    \"doesnt\": [\"does\", \"nt\"],\n    \"Doesn't\": [\"Does\", \"n't\"],\n    \"don't\": [\"do\", \"n't\"],\n    \"dont\": [\"do\", \"nt\"],\n    \"Don't\": [\"Do\", \"n't\"],\n    \"hadn't\": [\"had\", \"n't\"],\n    \"hadnt\": [\"had\", \"nt\"],\n    \"Hadn't\": [\"Had\", \"n't\"],\n    \"hadn't've\": [\"had\", \"n't\", \"'ve\"],\n    \"hasn't\": [\"has\", \"n't\"],\n    \"hasnt\": [\"has\", \"nt\"],\n    \"haven't\": [\"have\", \"n't\"],\n    \"havent\": [\"have\", \"nt\"],\n    \"he'd\": [\"he\", \"'d\"],\n    \"hed\": [\"he\", \"d\"],\n    \"he'd've\": [\"he\", \"'d\", \"'ve\"],\n    \"hedve\": [\"he\", \"d\", \"ve\"],\n    \"he'll\": [\"he\", \"'ll\"],\n    \"he'll've\": [\"he\", \"'ll\", \"'ve\"],\n    \"he's\": [\"he\", \"'s\"],\n    \"hes\": [\"he\", \"s\"],\n    \"how'd\": [\"how\", \"'d\"],\n    \"howd\": [\"how\", \"d\"],\n    \"how'd'y\": [ \"how\", \"'d\", \"'y\" ],\n    \"how'll\": [\"how\", \"'ll\"],\n    \"howll\": [\"how\", \"ll\"],\n    \"how's\": [\"how\", \"'s\"],\n    \"hows\": [\"how\", \"s\"],\n    \"I'd\": [\"I\", \"'d\"],\n    \"I'd've\": [\"I\", \"'d\", \"'ve\"],\n    \"I'll\": [\"I\", \"'ll\"],\n    \"i'll\": [\"i\", \"'ll\"],\n    \"I'll've\": [\"I\", \"'ll\", \"'ve\"],\n    \"i'll've\": [\"i\", \"'ll\", \"'ve\"],\n    \"I'm\": [\"I\", \"'m\"],\n    \"i'm\": [\"i\", \"'m\"],\n    \"Im\": [\"I\", \"m\"],\n    \"im\": [\"i\", \"m\"],\n    \"I'ma\": [\"I\", \"'ma\"],\n    \"i'ma\": [\"i\", \"'ma\"],\n    \"I've\": [\"I\", \"'ve\"],\n    \"i've\": [\"i\", \"'ve\"],\n    \"isn't\": [\"is\", \"n't\"],\n    \"isnt\": [\"is\", \"nt\"],\n    \"Isn't\": [\"Is\", \"n't\"],\n    \"It'd\": [\"It\", \"'d\"],\n    \"it'd\": [\"it\", \"'d\"],\n    \"it'd've\": [\"it\", \"'d\", \"'ve\"],\n    \"it'll've\": [\"it\", \"'ll\", \"'ve\"],\n    \"it'll\": [\"it\", \"'ll\"],\n    \"itll\": [\"it\", \"ll\"],\n    \"it's\": [\"it\", \"'s\"],\n    \"let's\": [\"let\", \"'s\"],\n    \"lets\": [\"let\", \"s\"],\n    \"ma'am\": [\"ma'am\"],\n    \"mayn't\": [\"may\", \"n't\"],\n    \"mightn't\": [\"might\", \"n't\"],\n    \"mightn't've\": [\"might\", \"n't\", \"'ve\"],\n    \"might've\": [\"might\", \"'ve\"],\n    \"mustn't\": [\"must\", \"n't\"],\n    \"mustn't've\": [\"must\", \"n't\",\"'ve\"],\n    \"must've\": [\"must\", \"'ve\"],\n    \"needn't\": [\"need\", \"n't\"],\n    \"needn't've\": [\"need\", \"n't\", \"'ve\"],\n    \"not've\": [\"not\", \"'ve\"],\n    \"o'clock\": [\"o'clock\"],\n    \"oughtn't\": [\"ought\", \"n't\"],\n    \"oughtn't've\": [\"ought\", \"n't\", \"'ve\"],\n    \"so've\": [\"so\", \"'ve\"],\n    \"so's\": [\"so\", \"'s\"],\n    \"shan't\": [\"sha\", \"n't\"],\n    \"sha'n't\": [\"sha'\", \"n't\"],\n    \"shan't've\": [\"sha\", \"n't\", \"'ve\"],\n    \"she'd\": [\"she\", \"'d\"],\n    \"she'd've\": [\"she\", \"'d\", \"'ve\"],\n    \"she'll\": [\"she\", \"'ll\"],\n    \"she'll've\": [\"she\", \"'ll\", \"'ve\"],\n    \"she's\": [\"she\", \"'s\"],\n    \"should've\": [\"should\", \"'ve\"],\n    \"shouldn't\": [\"should\", \"n't\"],\n    \"shouldn't've\": [\"should\", \"n't\", \"'ve\"],\n    \"that'd\": [\"that\", \"'d\"],\n    \"that'd've\": [\"that\", \"'d\", \"'ve\"],\n    \"that's\": [\"that\", \"'s\"],\n    \"thats\": [\"that\", \"s\"],\n    \"there'd\": [\"there\", \"'d\"],\n    \"there'd've\": [\"there\", \"'d\", \"'ve\"],\n    \"there's\": [\"there\", \"'s\"],\n    \"they'd\": [\"they\", \"'d\"],\n    \"They'd\": [\"They\", \"'d\"],\n    \"they'd've\": [\"they\", \"'d\", \"'ve\"],\n    \"They'd've\": [\"They\", \"'d\", \"'ve\"],\n    \"they'll\": [\"they\", \"'ll\"],\n    \"They'll\": [\"They\", \"'ll\"],\n    \"they'll've\": [\"they\", \"'ll\", \"'ve\"],\n    \"They'll've\": [\"They\", \"'ll\", \"'ve\"],\n    \"they're\": [\"they\", \"'re\"],\n    \"They're\": [\"They\", \"'re\"],\n    \"they've\": [\"they\", \"'ve\"],\n    \"They've\": [\"They\", \"'ve\"],\n    \"to've\": [\"to\", \"'ve\"],\n    \"wasn't\": [\"was\", \"n't\"],\n    \"we'd\": [\"we\", \"'d\"],\n    \"We'd\": [\"We\", \"'d\"],\n    \"we'd've\": [\"we\", \"'d\", \"'ve\"],\n    \"we'll\": [\"we\", \"'ll\"],\n    \"We'll\": [\"We\", \"'ll\"],\n    \"we'll've\": [\"we\", \"'ll\", \"'ve\"],\n    \"We'll've\": [\"We\", \"'ll\", \"'ve\"],\n    \"we're\": [\"we\", \"'re\"],\n    \"We're\": [\"We\", \"'re\"],\n    \"we've\": [\"we\", \"'ve\"],\n    \"We've\": [\"We\", \"'ve\"],\n    \"weren't\": [\"were\", \"n't\"],\n    \"what'll\": [\"what\", \"'ll\"],\n    \"what'll've\": [\"what\", \"'ll\", \"'ve\"],\n    \"what're\": [\"what\", \"'re\"],\n    \"what's\": [\"what\", \"'s\"],\n    \"what've\": [\"what\", \"'ve\"],\n    \"when's\": [\"when\", \"'s\"],\n    \"when've\": [\"when\", \"'ve\"],\n    \"where'd\": [\"where\", \"'d\"],\n    \"where's\": [\"where\", \"'s\"],\n    \"where've\": [\"where\", \"'ve\"],\n    \"who'd\": [\"who\", \"'d\"],\n    \"who'll\": [\"who\", \"'ll\"],\n    \"who'll've\": [\"who\", \"'ll'\", \"'ve'\"],\n    \"who're\": [\"who\", \"'re\"],\n    \"who's\": [\"who\", \"'s\"],\n    \"who've\": [\"who\", \"'ve\"],\n    \"why've\": [\"why\", \"'ve\"],\n    \"why'll\": [\"why\", \"'ll\"],\n    \"why're\": [\"why\", \"'re\"],\n    \"why's\": [\"why\", \"'s\"],\n    \"will've\": [\"will\", \"'ve\"],\n    \"won't\": [\"wo\", \"n't\"],\n    \"wont\": [\"wo\", \"nt\"],\n    \"won't've\": [\"wo\", \"n't\", \"'ve\"],\n    \"would've\": [\"would\", \"'ve\"],\n    \"wouldn't\": [\"would\", \"n't\"],\n    \"wouldn't've\": [\"would\", \"n't\", \"'ve\"],\n    \"y'all\": [\"y'\", \"all\"],\n    \"y'all'd\": [\"y'\", \"all\", \"'d\"],\n    \"y'all'd've\": [\"y'\",\"all\", \"'d\", \"'ve\"],\n    \"y'all're\": [ \"y'\", \"all\", \"'re'\"],\n    \"y'all've\": [ \"y'\", \"all\", \"ve\"],\n    \"you'd\": [\"you\", \"'d\"],\n    \"You'd\": [\"You\", \"'d\"],\n    \"you'd've\": [\"you\", \"'d\", \"'ve\"],\n    \"You'd've\": [\"You\", \"'d\", \"'ve\"],\n    \"you'll\": [\"you\", \"'ll\"],\n    \"You'll\": [\"You\", \"'ll\"],\n    \"you'll've\": [\"you\", \"'ll\", \"'ve\"],\n    \"You'll've\": [\"You\", \"'ll\", \"'ve\"],\n    \"you're\": [\"you\", \"'re\"],\n    \"You're\": [\"You\", \"'re\"],\n    \"you've\": [\"you\", \"'ve\"],\n    \"You've\": [\"You\", \"'ve\"]\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar ABBRS = require( './abbreviations.json' );\nvar EMOJIS = require( './emojis.json' );\nvar CONTRACT = require( './contractions.json' );\n\n\n// VARIABLES //\n\nvar REGEXP_PREFIXES = /^([,([{*<\"\u201C'`\u2018]|\\.{1,3})/gi;\nvar REGEXP_SUFFIXES = /([,.!?%*>:;\"'\u201D`)\\]}]|\\.\\.\\.)$/gi;\n\n\n// FUNCTIONS //\n\n/**\n* Extends an array by the elements of another array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} ext - array to extend `arr` with\n* @returns {Array} mutated input array\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* var out = extend( arr, [ 4, 5 ] );\n* // returns [ 1, 2, 3, 4, 5 ]\n*/\nfunction extend( arr, ext ) {\n\tvar i;\n\tfor ( i = 0; i < ext.length; i++ ) {\n\t\tarr.push( ext[ i ] );\n\t}\n\treturn arr;\n}\n\n/**\n* Tokenizes a substring.\n*\n* @private\n* @param {string} substr - input string\n* @returns {Array} token array\n*\n* @example\n* var str = '(never)';\n* var out = tokenizeSubstring( str );\n* // returns [ '(', 'never', ')' ]\n*/\nfunction tokenizeSubstring( substr ) {\n\tvar prefixes = [];\n\tvar suffixes = [];\n\tvar match;\n\tvar done;\n\tvar res;\n\n\tdo {\n\t\tif (\n\t\t\t!EMOJIS[ substr ] &&\n\t\t\t!ABBRS[ substr ] &&\n\t\t\t!CONTRACT[ substr ]\n\t\t) {\n\t\t\tmatch = substr.split( REGEXP_PREFIXES );\n\t\t\tif ( match.length > 1 ) {\n\t\t\t\tprefixes.push( match[ 1 ] );\n\t\t\t\tsubstr = match[ 2 ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmatch = substr.split( REGEXP_SUFFIXES );\n\t\t\t\tif ( match.length > 1 ) {\n\t\t\t\t\tsubstr = match[ 0 ];\n\t\t\t\t\tsuffixes.unshift( match[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone = true;\n\t\t}\n\t} while ( !done );\n\n\tres = prefixes;\n\tif ( substr ) {\n\t\tres.push( substr );\n\t}\n\n\t// If the last suffix is an ellipsis, move it to the front of the suffix array:\n\tif ( suffixes[ suffixes.length-1 ] === '...' ) {\n\t\tsuffixes.pop();\n\t\tsuffixes.unshift( '...' );\n\t}\n\textend( res, suffixes );\n\treturn res;\n}\n\n\n// MAIN //\n\n/**\n* Tokenize a string.\n*\n* @param {string} str - input string\n* @param {boolean} [keepWhitespace=false] - boolean indicating whether whitespace characters should be returned as part of the token array\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a boolean\n* @returns {Array} array of tokens\n*\n* @example\n* var str = 'Hello World!';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*\n* @example\n* var str = '';\n* var out = tokenize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*/\nfunction tokenize( str, keepWhitespace ) {\n\tvar subtkns;\n\tvar substrs;\n\tvar tokens;\n\tvar substr;\n\tvar cache;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isBoolean( keepWhitespace ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', keepWhitespace ) );\n\t\t}\n\t}\n\tif ( !str ) {\n\t\treturn [];\n\t}\n\n\t// Split on whitespace:\n\tif ( keepWhitespace ) {\n\t\tsubstrs = str.split( /(\\s+)/ );\n\t} else {\n\t\tsubstrs = str.split( /\\s+/ );\n\t}\n\n\t// Set up cache to hold tokens for substring matches:\n\tcache = {};\n\n\t// Initialize token array:\n\ttokens = [];\n\n\tfor ( i = 0; i < substrs.length; i++ ) {\n\t\tsubstr = substrs[ i ];\n\t\tif ( hasOwnProp( cache, substr ) ) {\n\t\t\textend( tokens, cache[ substr ] );\n\t\t}\n\t\telse {\n\t\t\tsubtkns = tokenizeSubstring( substr );\n\t\t\textend( tokens, subtkns );\n\t\t\tcache[ substr ] = subtkns;\n\t\t}\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tokenize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tokenize a string.\n*\n* @module @stdlib/nlp/tokenize\n*\n* @example\n* var tokenize = require( '@stdlib/nlp/tokenize' );\n*\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*\n* str = 'Hello World!';\n* out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "{\n    \"afaik\": \"as far as I know\",\n    \"afk\": \"away from keyboard\",\n    \"ama\": \"ask me anything\",\n    \"asap\": \"as soon as possible\",\n    \"b2b\": \"business to business\",\n    \"bbl\": \"be back later\",\n    \"bbs\": \"be back soon\",\n    \"bday\": \"birthday\",\n    \"brb\": \"be right back\",\n    \"btw\": \"by the way\",\n    \"cc\": \"carbon copy\",\n    \"cmon\": \"come on\",\n    \"cu\": \"see you\",\n    \"cya\": \"see you\",\n    \"cys\": \"check your settings\",\n    \"d2d\": \"direct to direct\",\n    \"dr\": \"doctor\",\n    \"e2e\": \"end to end\",\n    \"faq\": \"frequently asked question\",\n    \"fav\": \"favorite\",\n    \"favs\": \"favorites\",\n    \"ffs\": \"for f*ck's sake\",\n    \"foaf\": \"friend of a friend\",\n    \"ftw\": \"for the win\",\n    \"fyi\": \"for your information\",\n    \"g2g\": \"got to go\",\n    \"g2m\": \"got to meet you\",\n    \"gj\": \"good job\",\n    \"gm\": \"good morning\",\n    \"gmta\": \"great minds think alike\",\n    \"hth\": \"hope this helps\",\n    \"ianal\": \"I am not a lawyer\",\n    \"ianars\": \"I am not a rocket scientist\",\n    \"ic\": \"I see\",\n    \"icymi\": \"in case you missed it\",\n    \"idk\": \"i do not know\",\n    \"iirc\": \"if I recall correctly\",\n    \"ikr\": \"i know right\",\n    \"imho\": \"in my humble opinion\",\n    \"imnsho\": \"in my not so humble opinion\",\n    \"imo\": \"in my opinion\",\n    \"iow\": \"in other words\",\n    \"irl\": \"in real life\",\n    \"jj\": \"just joking\",\n    \"jk\": \"just kidding\",\n    \"jooc\": \"just out of curiosity\",\n    \"kk\": \"okay\",\n    \"l8\": \"late\",\n    \"l8r\": \"later\",\n    \"lmao\": \"laugh my a** off\",\n    \"lol\": \"laughing out loud\",\n    \"mfw\": \"my face when\",\n    \"myob\": \"mind your own business\",\n    \"nm\": \"never mind\",\n    \"noyb\": \"none of your business\",\n    \"np\": \"no problem\",\n    \"nvm\": \"never mind\",\n    \"oic\": \"oh, i see\",\n    \"omfg\": \"oh my f*cking god\",\n    \"omg\": \"oh my god\",\n    \"omw\": \"on my way\",\n    \"ooc\": \"out of character\",\n    \"oof\": \"out of focus\",\n    \"ot\": \"off topic\",\n    \"otoh\": \"on the other hand\",\n    \"p2p\": \"peer to peer\",\n    \"pfo\": \"please f*ck off\",\n    \"pita\": \"pain in the a**\",\n    \"plz\": \"please\",\n    \"pms\": \"personal messages\",\n    \"r8\": \"right\",\n    \"rofl\": \"rolling on the floor laughing\",\n    \"roflmao\": \"rolling on the floor laughing my a** off\",\n    \"rp\": \"reply\",\n    \"rps\": \"rock paper scissors\",\n    \"rpsls\": \"rock paper scissors lizard spock\",\n    \"rtfa\": \"read the f*cking article\",\n    \"rtfm\": \"read the f*cking manual\",\n    \"ru\": \"are you\",\n    \"s2s\": \"same to same\",\n    \"smh\": \"shake my head\",\n    \"tbh\": \"to be honest\",\n    \"thx\": \"thanks\",\n    \"tia\": \"thanks in advance\",\n    \"tldr\": \"too long did not read\",\n    \"ttyl\": \"talk to you later\",\n    \"wtf\": \"what the f*ck\",\n    \"wtg\": \"way to go\",\n    \"wtgp\": \"way to go pal\",\n    \"ymmv\": \"your mileage may vary\"\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar isUppercase = require( '@stdlib/assert/is-uppercase' );\nvar lowercase = require( '@stdlib/string/lowercase' );\nvar tokenize = require( './../../tokenize' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar ACRONYMS = require( './acronyms.json' );\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( ACRONYMS );\n\n\n// MAIN //\n\n/**\n* Expands acronyms in a string.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} string with expanded acronyms\n*\n* @example\n* var str = 'LOL, this is fun. I am ROFL.';\n* var out = expandAcronyms( str );\n* // returns 'laughing out loud, this is fun. I am rolling on the floor laughing.'\n*\n* @example\n* var str = 'brb, I need to check my mail. thx!';\n* var out = expandAcronyms( str );\n* // returns 'be right back, I need to check my mail. thanks!'\n*/\nfunction expandAcronyms( str ) {\n\tvar tokens;\n\tvar token;\n\tvar out;\n\tvar key;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tout = '';\n\ttokens = tokenize( str, true );\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isUppercase( token ) ) {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( lowercase( token ) === key ) {\n\t\t\t\t\ttoken = ACRONYMS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( token === key ) {\n\t\t\t\t\ttoken = ACRONYMS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout += token;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = expandAcronyms;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Expand acronyms.\n*\n* @module @stdlib/nlp/expand-acronyms\n*\n* @example\n* var expandAcronyms = require( '@stdlib/nlp/expand-acronyms' );\n*\n* var str = 'TLDR, the article is too long...';\n* var out = expandAcronyms( str );\n* // returns 'too long did not read, the article is too long...'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "{\n    \"'s\": \"is\",\n    \"'S\": \"Is\",\n    \"aren't\": \"are not\",\n    \"arent\": \"are not\",\n    \"can't\": \"can not\",\n    \"cant\": \"can not\",\n    \"can't've\": \"can not have\",\n    \"'cause\": \"because\",\n    \"cannot\": \"can not\",\n    \"could've\": \"could have\",\n    \"couldve\": \"could have\",\n    \"couldn't\": \"could not\",\n    \"couldnt\": \"could not\",\n    \"couldn't've\": \"could not have\",\n    \"couldntve\": \"could not have\",\n    \"didn't\": \"did not\",\n    \"didnt\": \"did not\",\n    \"doesn't\": \"does not\",\n    \"doesnt\": \"does not\",\n    \"don't\": \"do not\",\n    \"dont\": \"do not\",\n    \"hadn't\": \"had not\",\n    \"hadnt\": \"had not\",\n    \"hadn't've\": \"had not have\",\n    \"hasn't\": \"has not\",\n    \"hasnt\": \"has not\",\n    \"haven't\": \"have not\",\n    \"havent\": \"have not\",\n    \"he'd\": \"he would\",\n    \"hed\": \"he would\",\n    \"he'd've\": \"he would have\",\n    \"hedve\": \"he would have\",\n    \"he'll\": \"he will\",\n    \"he'll've\": \"he will have\",\n    \"he's\": \"he is\",\n    \"hes\": \"he is\",\n    \"how'd\": \"how did\",\n    \"howd\": \"how did\",\n    \"how'd'y\": \"how did you\",\n    \"how'll\": \"how will\",\n    \"howll\": \"how will\",\n    \"how's\": \"how is\",\n    \"hows\": \"how is\",\n    \"i'd\": \"i would\",\n    \"i'd've\": \"i would have\",\n    \"i'll\": \"i will\",\n    \"i'll've\": \"i will have\",\n    \"i'm\": \"i am\",\n    \"im\": \"i am\",\n    \"i'ma\": \"i am going to\",\n    \"i've\": \"i have\",\n    \"isn't\": \"is not\",\n    \"isnt\": \"is not\",\n    \"it'd\": \"it would\",\n    \"it'd've\": \"it would have\",\n    \"it'll've\": \"it will have\",\n    \"it'll\": \"it will\",\n    \"itll\": \"it will\",\n    \"it's\": \"it is\",\n    \"let's\": \"let us\",\n    \"lets\": \"let us\",\n    \"ma'am\": \"madam\",\n    \"mayn't\": \"may not\",\n    \"mightn't\": \"it might not\",\n    \"mightn't've\": \"might not have\",\n    \"might've\": \"might have\",\n    \"mustn't\": \"must not\",\n    \"mustn't've\": \"must not have\",\n    \"must've\": \"must have\",\n    \"needn't\": \"need not\",\n    \"needn't've\": \"need not have\",\n    \"not've\": \"not have\",\n    \"oughtn't\": \"ought not\",\n    \"oughtn't've\": \"ought not to have\",\n    \"so've\": \"so have\",\n    \"so's\": \"so is\",\n    \"shan't\": \"shall not\",\n    \"sha'n't\": \"shall not\",\n    \"shan't've\": \"shall not have\",\n    \"she'd\": \"she would\",\n    \"she'd've\": \"she would have\",\n    \"she'll\": \"she will\",\n    \"she'll've\": \"she will have\",\n    \"she's\": \"she is\",\n    \"should've\": \"should have\",\n    \"shouldn't\": \"should not\",\n    \"shouldn't've\": \"should not have\",\n    \"that'd\": \"that would\",\n    \"that'd've\": \"that would have\",\n    \"that's\": \"that is\",\n    \"thats\": \"that is\",\n    \"there'd\": \"there would\",\n    \"there'd've\": \"there would have\",\n    \"there's\": \"there is\",\n    \"they'd\": \"they would\",\n    \"they'd've\": \"they would have\",\n    \"they'll\": \"they will\",\n    \"they'll've\": \"they will have\",\n    \"they're\": \"they are\",\n    \"they've\": \"they have\",\n    \"to've\": \"to have\",\n    \"wasn't\": \"was not\",\n    \"we'd\": \"we would\",\n    \"we'd've\": \"we would have\",\n    \"we'll\": \"we will\",\n    \"we'll've\": \"we will have\",\n    \"we're\": \"we are\",\n    \"we've\": \"we have\",\n    \"weren't\": \"were not\",\n    \"what'll\": \"what will\",\n    \"what'll've\": \"what will have\",\n    \"what're\": \"what are\",\n    \"what's\": \"what has/is\",\n    \"what've\": \"what have\",\n    \"when's\": \"when is\",\n    \"when've\": \"when have\",\n    \"where'd\": \"where would\",\n    \"where's\": \"where is\",\n    \"where've\": \"where have\",\n    \"who'd\": \"who would\",\n    \"who'll\": \"who will\",\n    \"who'll've\": \"who will have\",\n    \"who're\": \"who are\",\n    \"who's\": \"who is\",\n    \"who've\": \"who have\",\n    \"why've\": \"why have\",\n    \"why'll\": \"why will\",\n    \"why're\": \"why are\",\n    \"why's\": \"why is\",\n    \"will've\": \"will have\",\n    \"won't\": \"will not\",\n    \"wont\": \"will not\",\n    \"won't've\": \"will not have\",\n    \"would've\": \"would have\",\n    \"wouldn't\": \"would not\",\n    \"wouldn't've\": \"would not have\",\n    \"y'all\": \"you all\",\n    \"y'all'd\": \"you all would\",\n    \"y'all'd've\": \"you all would have\",\n    \"y'all're\": \"you all are\",\n    \"y'all've\": \"you all have\",\n    \"you'd\": \"you would\",\n    \"you'd've\": \"you would have\",\n    \"you'll\": \"you will\",\n    \"you'll've\": \"you will have\",\n    \"you're\": \"you are\",\n    \"you've\": \"you have\"\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar isCapitalized = require( '@stdlib/assert/is-capitalized' );\nvar uncapitalize = require( '@stdlib/string/uncapitalize' );\nvar capitalize = require( '@stdlib/string/capitalize' );\nvar tokenize = require( './../../tokenize' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar CONTRACTIONS = require( './contractions.json' );\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( CONTRACTIONS );\n\n\n// MAIN //\n\n/**\n* Expands all contractions to their formal equivalents.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} string with expanded contractions\n*\n* @example\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* @example\n* var str = 'It oughtn\\'t to be my fault, because, you know, I didn\\'t know';\n* var out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\nfunction expandContractions( str ) {\n\tvar tokens;\n\tvar token;\n\tvar out;\n\tvar key;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tout = '';\n\ttokens = tokenize( str, true );\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isCapitalized( token ) ) {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( uncapitalize( token ) === key ) {\n\t\t\t\t\ttoken = capitalize( CONTRACTIONS[ key ] );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( token === key ) {\n\t\t\t\t\ttoken = CONTRACTIONS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout += token;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = expandContractions;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Expand contractions.\n*\n* @module @stdlib/nlp/expand-contractions\n*\n* @example\n* var expandContractions = require( '@stdlib/nlp/expand-contractions' );\n*\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* str = 'It oughtn't to be my fault, because, you know, I didn't know';\n* out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Returns a Matrix instance.\n*\n* @private\n* @constructor\n* @param {NumberArray} shape - matrix dimensions/shape\n* @param {string} [dtype=\"float64\"] - matrix data type\n* @returns {Matrix} Matrix instance\n*/\nfunction matrix() {\n\tvar dtype;\n\tvar ndims;\n\tvar shape;\n\tvar data;\n\tvar len;\n\tvar mat;\n\tvar i;\n\n\tif ( arguments.length === 1 ) {\n\t\tshape = arguments[ 0 ];\n\t}\n\telse if ( arguments.length === 2 ) {\n\t\tshape = arguments[ 0 ];\n\t\tdtype = arguments[ 1 ];\n\t}\n\tndims = shape.length;\n\tlen = 1;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tlen *= shape[ i ];\n\t}\n\t// Initialize a zero-filled typed array...\n\tif ( dtype === 'int32' ) {\n\t\tdata = new Int32Array( len );\n\t}\n\telse {\n\t\tdata = new Float64Array( len );\n\t}\n\n\t// Return a new Matrix instance:\n\tmat = {};\n\tmat.dtype = dtype;\n\tmat.shape = shape;\n\tmat.strides = [ shape[1], 1 ];\n\tmat.offset = 0;\n\tmat.ndims = shape.length;\n\tmat.length = data.length;\n\tmat.nbytes = data.byteLength;\n\tmat.data = data;\n\n\tsetReadOnly( mat, 'get', get );\n\tsetReadOnly( mat, 'set', set );\n\treturn mat;\n\n\t/**\n\t* Returns a matrix element based on the provided row and column indices.\n\t*\n\t* @private\n\t* @param {integer} i - row index\n\t* @param {integer} j - column index\n\t* @returns {(number|undefined)} matrix element\n\t*/\n\tfunction get( i, j ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tvar idx = this.offset + ( i*this.strides[0] ) + ( j*this.strides[1] );\n\t\treturn this.data[ idx ];\n\t}\n\n\t/**\n\t* Sets a matrix element based on the provided row and column indices.\n\t*\n\t* @private\n\t* @param {integer} i - row index\n\t* @param {integer} j - column index\n\t* @param {number} v - value to set\n\t* @returns {Matrix} Matrix instance\n\t*/\n\tfunction set( i, j, v ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\ti = this.offset + ( i*this.strides[0] ) + ( j*this.strides[1] );\n\t\tif ( i >= 0 ) {\n\t\t\tthis.data[ i ] = v;\n\t\t}\n\t\treturn this;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = matrix;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar matrix = require( './matrix.js' );\n\n\n// MAIN //\n\n/**\n* Get theta matrix. Its rows correspond to document distributions over topics.\n*\n* @private\n* @returns {Matrix} theta parameter matrix\n*/\nfunction getThetas() {\n\t/* eslint-disable no-invalid-this */\n\tvar Theta;\n\tvar val;\n\tvar d;\n\tvar k;\n\n\tTheta = matrix( [ this.D, this.K ] );\n\tfor ( d = 0; d < this.D; d++ ) {\n\t\tfor ( k = 0; k < this.K; k++ ) {\n\t\t\tval = ( this.nd.get( d, k ) + this.alpha ) /\n\t\t\t\t( this.ndSum[ d ] + ( this.K*this.alpha ) );\n\t\t\tTheta.set( d, k, val );\n\t\t}\n\t}\n\treturn Theta;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getThetas;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositive = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveNumber} [options.alpha] - Dirichlet hyper-parameter of topic vector theta:\n* @param {PositiveNumber} [options.beta] - Dirichlet hyper-parameter for word vector phi\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isPositive( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'beta' ) ) {\n\t\topts.beta = options.beta;\n\t\tif ( !isPositive( opts.beta ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'beta', opts.beta ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar matrix = require( './matrix.js' );\n\n\n// MAIN //\n\n/**\n* Get the phi matrix. Each row is a topic distribution over words.\n*\n* @private\n* @returns {Matrix} phi parameter matrix\n*/\nfunction getPhis() {\n\t/* eslint-disable no-invalid-this */\n\tvar Phi;\n\tvar val;\n\tvar k;\n\tvar w;\n\n\tPhi = matrix( [ this.K, this.W ] );\n\tfor ( k = 0; k < this.K; k++ ) {\n\t\tfor ( w = 0; w < this.W; w++ ) {\n\t\t\tval = ( this.nw.get( w, k ) + this.beta ) /\n\t\t\t\t( this.nwSum[ k ] + ( this.W*this.beta ) );\n\t\t\tPhi.set( k, w, val );\n\t\t}\n\t}\n\treturn Phi;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPhis;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar randu = require( '@stdlib/random/base/randu' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Randomly assign topics to words and keep track of the counts.\n*\n* @private\n*/\nfunction init() {\n\t/* eslint-disable no-invalid-this */\n\tvar topic;\n\tvar newz;\n\tvar len;\n\tvar wt;\n\tvar d;\n\tvar i;\n\n\tthis.z = [];\n\tfor ( d = 0; d < this.D; d++ ) {\n\t\tthis.z.push( [] );\n\t\tlen = this.w[ d ].length;\n\n\t\t// Initialize random topics...\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tnewz = floor( randu() * this.K );\n\t\t\tthis.z[ d ].push( newz );\n\t\t}\n\t\tthis.ndSum[ d ] = len;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\twt = this.w[ d ][ i ];\n\t\t\ttopic = this.z[ d ][ i ];\n\n\t\t\t// Number of instances of word i assigned to topic j:\n\t\t\tthis.nw.set( wt, topic, this.nw.get( wt, topic ) + 1 );\n\n\t\t\t// Number of words in document i assigned to topic j:\n\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) + 1 );\n\n\t\t\t// Total number of words assigned to topic j:\n\t\t\tthis.nwSum[ topic ] = this.nwSum[ topic ] + 1;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = init;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar matrix = require( './matrix.js' );\n\n\n// MAIN //\n\n/**\n* Calculate weighted average of two matrices.\n*\n* @private\n* @param {Matrix} A - first matrix\n* @param {Matrix} B - second matrix\n* @param {PositiveInteger} weight - relative weight of matrix A\n* @returns {Matrix} averaged matrix\n*/\nfunction avgMatrix( A, B, weight ) {\n\tvar propA;\n\tvar propB;\n\tvar nrow;\n\tvar ncol;\n\tvar val;\n\tvar C;\n\tvar i;\n\tvar j;\n\n\tnrow = A.shape[ 0 ];\n\tncol = A.shape[ 1 ];\n\tC = matrix( [ nrow, ncol ] );\n\tpropA = ( weight - 1.0 ) / weight;\n\tpropB = 1.0 / weight;\n\n\tfor ( i = 0; i < nrow; i++ ) {\n\t\tfor ( j = 0; j < ncol; j++ ) {\n\t\t\tval = (propA * A.get(i, j)) + (propB * B.get(i, j));\n\t\t\tC.set( i, j, val );\n\t\t}\n\t}\n\treturn C;\n}\n\n\n// EXPORTS //\n\nmodule.exports = avgMatrix;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar format = require( '@stdlib/string/format' );\nvar randu = require( '@stdlib/random/base/randu' );\nvar avgMatrix = require( './avg_matrix.js' );\n\n\n// MAIN //\n\n/**\n* Fit model using collapsed Gibbs sampling.\n*\n* @private\n* @param {PositiveInteger} iter - number of sampling iterations\n* @param {PositiveInteger} burnin - number of estimates to be thrown away at beginning\n* @param {PositiveInteger} thin - number of discarded in-between iterations\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a positive integer\n*/\nfunction fit( iter, burnin, thin ) {\n\t/* eslint-disable no-invalid-this */\n\tvar kalpha;\n\tvar wbeta;\n\tvar topic;\n\tvar theta;\n\tvar prob;\n\tvar word;\n\tvar phi;\n\tvar len;\n\tvar nt;\n\tvar d;\n\tvar i;\n\tvar j;\n\tvar u;\n\tvar w;\n\n\tif ( !isPositiveInteger( iter ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', iter ) );\n\t}\n\tif ( !isPositiveInteger( burnin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', burnin ) );\n\t}\n\tif ( !isPositiveInteger( thin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a positive integer. Value: `%s`.', thin ) );\n\t}\n\n\twbeta = this.W * this.beta;\n\tkalpha = this.K * this.alpha;\n\n\tfor ( i = 0; i < iter; i++ ) {\n\t\tfor ( d = 0; d < this.D; d++ ) {\n\t\t\tfor ( w = 0; w < this.ndSum[ d ]; w++ ) {\n\t\t\t\tword = this.w[ d ][ w ];\n\t\t\t\ttopic = this.z[ d ][ w ];\n\n\t\t\t\tthis.nw.set( word, topic, this.nw.get( word, topic ) - 1 );\n\t\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) - 1 );\n\t\t\t\tthis.ndSum[ d ] -= 1;\n\t\t\t\tthis.nwSum[ topic ] -= 1;\n\n\t\t\t\tprob = [];\n\t\t\t\tfor ( j = 0; j < this.K; j++ ) {\n\t\t\t\t\tprob.push( ( this.nw.get( word, j ) + this.beta ) /\n\t\t\t\t\t\t( this.nwSum[ j ] + wbeta ) *\n\t\t\t\t\t\t( this.nd.get( d, j ) + this.alpha ) /\n\t\t\t\t\t\t( this.ndSum[ d ] + kalpha ) );\n\t\t\t\t}\n\t\t\t\tfor ( j = 1; j < this.K; j++ ) {\n\t\t\t\t\tprob[ j ] += prob[ j - 1 ];\n\t\t\t\t}\n\t\t\t\tu = prob[ this.K - 1 ] * randu();\n\t\t\t\ttopic = 0;\n\t\t\t\tfor ( nt = 0; nt < this.K; nt++ ) {\n\t\t\t\t\tif ( prob[ nt ] > u ) {\n\t\t\t\t\t\ttopic = nt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Assign new z_i to counts...\n\t\t\t\tthis.nw.set( word, topic, this.nw.get( word, topic ) + 1 );\n\t\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) + 1 );\n\t\t\t\tthis.nwSum[ topic ] += 1;\n\t\t\t\tthis.ndSum[ d ] += 1;\n\n\t\t\t\tthis.z[ d ][ w ] = topic;\n\t\t\t}\n\t\t}\n\n\t\tif ( i % thin === 0 && i > burnin ) {\n\t\t\tphi = this.getPhis();\n\t\t\ttheta = this.getThetas();\n\n\t\t\tthis.phiList.push( phi );\n\t\t\tthis.thetaList.push( theta );\n\n\t\t\tlen = this.phiList.length;\n\t\t\tif ( len === 1 ) {\n\t\t\t\tthis.avgPhi = phi;\n\t\t\t} else {\n\t\t\t\tthis.avgPhi = avgMatrix( this.avgPhi, phi, len );\n\t\t\t}\n\t\t\tlen = this.thetaList.length;\n\t\t\tif ( len === 1 ) {\n\t\t\t\tthis.avgTheta = theta;\n\t\t\t} else {\n\t\t\t\tthis.avgTheta = avgMatrix( this.avgTheta, theta, len );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = fit;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isStringArray = require( '@stdlib/assert/is-string-array' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar contains = require( '@stdlib/assert/contains' );\nvar tokenize = require( './../../tokenize' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar format = require( '@stdlib/string/format' );\nvar matrix = require( './matrix.js' );\nvar getThetas = require( './get_thetas.js' );\nvar validate = require( './validate.js' );\nvar getPhis = require( './get_phis.js' );\nvar init = require( './init.js' );\nvar fit = require( './fit.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Find index of the value in vocabulary equal to the supplied search value.\n*\n* @private\n* @param {Array} vocab - vocabulary\n* @param {string} searchVal - search value\n* @returns {integer} index in vocab if search value is found, -1 otherwise\n*/\nfunction findIndex( vocab, searchVal ) {\n\tvar i;\n\tfor ( i = 0; i < vocab.length; i++ ) {\n\t\tif ( vocab[ i ] === searchVal ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// MAIN //\n\n/**\n* Latent Dirichlet Allocation via collapsed Gibbs sampling.\n*\n* @param {StringArray} documents - document corpus\n* @param {PositiveInteger} K - number of topics\n* @param {Options} [options] - options object\n* @param {PositiveNumber} [options.alpha=50/K] - Dirichlet hyper-parameter of topic vector theta:\n* @param {PositiveNumber} [options.beta=0.1] - Dirichlet hyper-parameter for word vector phi\n* @throws {TypeError} first argument must be an array of strings\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} must provide valid options\n* @returns {Object} model object\n*/\nfunction lda( documents, K, options ) {\n\tvar target;\n\tvar vocab;\n\tvar model;\n\tvar alpha;\n\tvar beta;\n\tvar opts;\n\tvar err;\n\tvar pos;\n\tvar nd;\n\tvar it;\n\tvar wd;\n\tvar D;\n\tvar d;\n\tvar i;\n\tvar j;\n\tvar W;\n\tvar w;\n\n\tif ( !isStringArray( documents ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of strings. Value: `%s`.', documents ) );\n\t}\n\tif ( !isPositiveInteger( K ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Number of topics must be a positive integer. Value: `%s`.', K ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t// Number of documents:\n\tD = documents.length;\n\n\t// Hyper-parameter for Dirichlet distribution of topic vector theta:\n\talpha = opts.alpha || 50 / K;\n\n\t// Hyper-parameter of Dirichlet distribution of phi:\n\tbeta = opts.beta || 0.1;\n\n\t// Extract words & construct vocabulary:s\n\tvocab = [];\n\tw = [];\n\tpos = 0;\n\tfor ( d = 0; d < D; d++ ) {\n\t\tw.push( [] );\n\t\twd = tokenize( documents[ d ] );\n\t\tnd = wd.length;\n\t\tfor ( i = 0; i < nd; i++ ) {\n\t\t\ttarget = wd[ i ];\n\t\t\tit = findIndex( vocab, target );\n\t\t\tif ( it === -1 ) {\n\t\t\t\tvocab.push( target );\n\t\t\t\tw[ d ].push( pos );\n\t\t\t\tpos += 1;\n\t\t\t} else {\n\t\t\t\tw[ d ].push( it );\n\t\t\t}\n\t\t}\n\t}\n\t// Size of vocabulary:\n\tW = vocab.length;\n\n\tmodel = {};\n\n\t// Attach read-only properties:\n\tsetReadOnly( model, 'K', K );\n\tsetReadOnly( model, 'D', D );\n\tsetReadOnly( model, 'W', W );\n\tsetReadOnly( model, 'alpha', alpha );\n\tsetReadOnly( model, 'beta', beta );\n\n\t// Attach methods:\n\tsetReadOnly( model, 'init', init );\n\tsetReadOnly( model, 'fit', fit );\n\tsetReadOnly( model, 'getPhis', getPhis );\n\tsetReadOnly( model, 'getThetas', getThetas );\n\tsetReadOnly( model, 'getTerms', getTerms );\n\n\tmodel.nwSum = new Int32Array( K );\n\tmodel.ndSum = new Int32Array( D );\n\tmodel.nw = matrix( [ W, K ], 'int32' );\n\tmodel.nd = matrix( [ D, K ], 'int32' );\n\n\tmodel.phiList = [];\n\tmodel.thetaList = [];\n\n\tmodel.w = w;\n\tmodel.init();\n\n\treturn model;\n\n\t/**\n\t* Get top terms for the specified topic.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} k - topic\n\t* @param {PositiveInteger} [no=10] - number of terms\n\t* @throws {TypeError} first argument must be a nonnegative integer smaller than the total number of topics\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @returns {Array} word probability array\n\t*/\n\tfunction getTerms( k, no ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tvar skip;\n\t\tvar phi;\n\t\tvar ret;\n\t\tvar max;\n\t\tvar mid;\n\t\tvar i;\n\n\t\tif ( !isNonNegativeInteger( k ) || k >= K ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer which is less than the total number of topics. Value: `%s`.', k ) );\n\t\t}\n\t\tif ( no ) {\n\t\t\tif ( !isPositiveInteger( no ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', no ) );\n\t\t\t}\n\t\t} else {\n\t\t\tno = 10;\n\t\t}\n\n\t\tret = [];\n\t\tskip = [];\n\t\tfor ( i = 0; i < no; i++ ) {\n\t\t\tmax = 0;\n\t\t\tfor ( j = 0; j < this.W; j++ ) {\n\t\t\t\tphi = this.avgPhi.get( k, j );\n\t\t\t\tif ( phi > max && !contains( skip, j ) ) {\n\t\t\t\t\tmax = phi;\n\t\t\t\t\tmid = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskip.push( mid );\n\t\t\tret.push({\n\t\t\t\t'word': vocab[ mid ],\n\t\t\t\t'prob': max\n\t\t\t});\n\t\t}\n\t\treturn ret;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = lda;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Latent Dirichlet Allocation via collapsed Gibbs sampling.\n*\n* @module @stdlib/nlp/lda\n*\n* @example\n* var lda = require( '@stdlib/nlp/lda' );\n*\n* var words;\n* var model;\n* var docs;\n*\n* docs = [\n*     'I loved you first',\n*     'For one is both and both are one in love',\n*     'You never see my pain',\n*     'My love is such that rivers cannot quench',\n*     'See a lot of pain, a lot of tears'\n* ];\n*\n* model = lda( docs, 2 );\n* // returns {}\n*\n* model.fit( 1000, 100, 10 );\n*\n* words = getTerms( 0, 3 );\n* // e.g., returns [ { word: 'both', prob: ~0.0632 }, { word: 'pain', prob: ~0.0552 }, ... ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar indexOf = require( '@stdlib/utils/index-of' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar LANGUAGE_CODES = [ 'en', 'es', 'fin', 'fr', 'de', 'it', 'pt', 'swe' ];\nvar GRAMMATICAL_GENDERS = [ 'masculine', 'feminine' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.lang] - language code\n* @param {boolean} [options.suffixOnly] - boolean indicating whether to only return the suffix\n* @param {string} [options.gender] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'lang': 'es'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'lang' ) ) {\n\t\topts.lang = options.lang;\n\t\tif ( indexOf( LANGUAGE_CODES, opts.lang ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'lang', LANGUAGE_CODES.join( '\", \"' ), opts.lang ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'suffixOnly' ) ) {\n\t\topts.suffixOnly = options.suffixOnly;\n\t\tif ( !isBoolean( opts.suffixOnly ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'suffixOnly', opts.suffixOnly ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'gender' ) ) {\n\t\topts.gender = options.gender;\n\t\tif ( indexOf( GRAMMATICAL_GENDERS, opts.gender ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'gender', GRAMMATICAL_GENDERS.join( '\", \"' ), opts.gender ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Converts an integer to an ordinal string (e.g., `1st`, `2nd`, etc.).\n*\n* @param {(string|integer)} value - string or number to convert\n* @param {Object} [options] - options\n* @param {boolean} [options.suffixOnly=false] - boolean indicating whether to return only the suffix\n* @param {string} [options.lang='en'] - language code\n* @param {string} [options.gender='masculine'] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @throws {TypeError} must provide a string or integer\n* @returns {string} ordinal string or suffix\n*\n* @example\n* var out = ordinalize( '1' );\n* // returns '1st'\n*\n* @example\n* var out = ordinalize( '2' );\n* // returns '2nd'\n*\n* @example\n* var out = ordinalize( '21' );\n* // returns '21st'\n*\n* @example\n* var out = ordinalize( '1', { 'lang': 'de' } );\n* // returns '1.'\n*\n* @example\n* var out = ordinalize( '7', { 'lang': 'es' } );\n* // returns '7\u00BA'\n*/\nfunction ordinalize( value, options ) {\n\tvar suffix;\n\tvar last2;\n\tvar last;\n\tvar opts;\n\tvar err;\n\n\tif ( !isString( value ) && !isInteger( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or integer. Value: `%s`.', value ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tvalue = String( value );\n\tlast = value[ value.length-1 ];\n\tlast2 = value.slice( -2 );\n\n\tswitch ( opts.lang ) {\n\tcase 'fr':\n\t\tif ( value === '1' ) {\n\t\t\tsuffix = ( opts.gender === 'feminine' ) ? 're' : 'er';\n\t\t} else {\n\t\t\tsuffix = 'e';\n\t\t}\n\t\tbreak;\n\tcase 'de':\n\tcase 'fin':\n\t\tsuffix = '.';\n\t\tbreak;\n\tcase 'it':\n\tcase 'pt':\n\tcase 'es':\n\t\tif ( opts.gender === 'feminine' ) {\n\t\t\tsuffix = '\u00AA';\n\t\t} else {\n\t\t\tsuffix = '\u00BA';\n\t\t}\n\t\tbreak;\n\tcase 'swe':\n\t\tif ( ( last2 !== '11' && last === '1' ) || ( last2 !== '12' && last === '2' ) ) {\n\t\t\tsuffix = ':a';\n\t\t} else {\n\t\t\tsuffix = ':e';\n\t\t}\n\t\tbreak;\n\tcase 'en':\n\tdefault:\n\t\tif ( last2 !== '11' && last === '1' ) {\n\t\t\tsuffix = 'st';\n\t\t} else if ( last2 !== '12' && last === '2' ) {\n\t\t\tsuffix = 'nd';\n\t\t} else if ( last2 !== '13' && last === '3' ) {\n\t\t\tsuffix = 'rd';\n\t\t} else {\n\t\t\tsuffix = 'th';\n\t\t}\n\t}\n\tif ( opts.suffixOnly ) {\n\t\treturn suffix;\n\t}\n\treturn value + suffix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ordinalize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an integer to an ordinal string (e.g., `1st`, `2nd`, etc.).\n*\n* @module @stdlib/nlp/ordinalize\n*\n* @example\n* var ordinalize = require( '@stdlib/nlp/ordinalize' );\n*\n* var out = ordinalize( '2' );\n* // returns '2nd'\n*\n* out = ordinalize( '12' );\n* // returns '12th'\n*\n* out = ordinalize( '7', {\n*     'suffixOnly': true\n* });\n* // returns 'th'\n*\n* out = ordinalize( '3', {\n*     'lang': 'de'\n* });\n* // returns '3.'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* This code is a modification of an existing JavaScript implementation of their [Porter stemming algorithm]{@link https://tartarus.org/martin/PorterStemmer/}.\n*\n* ```text\n* Release 1 be 'andargor', Jul 2004\n* Release 2 (substantially revised) by Christopher McKenzie, Aug 2009\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar endsWith = require( '@stdlib/string/base/ends-with' );\nvar lowercase = require( '@stdlib/string/base/lowercase' );\nvar replace = require( '@stdlib/string/base/replace' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar step2list = {\n\t'ational': 'ate',\n\t'tional': 'tion',\n\t'enci': 'ence',\n\t'anci': 'ance',\n\t'izer': 'ize',\n\t'bli': 'ble',\n\t'alli': 'al',\n\t'entli': 'ent',\n\t'eli': 'e',\n\t'ousli': 'ous',\n\t'ization': 'ize',\n\t'ation': 'ate',\n\t'ator': 'ate',\n\t'alism': 'al',\n\t'iveness': 'ive',\n\t'fulness': 'ful',\n\t'ousness': 'ous',\n\t'aliti': 'al',\n\t'iviti': 'ive',\n\t'biliti': 'ble',\n\t'logi': 'log'\n};\nvar step3list = {\n\t'icate': 'ic',\n\t'ative': '',\n\t'alize': 'al',\n\t'iciti': 'ic',\n\t'ical': 'ic',\n\t'ful': '',\n\t'ness': ''\n};\nvar c = '[^aeiou]'; // consonant\nvar v = '[aeiouy]'; // vowel\nvar C = c + '[^aeiouy]*'; // consonant sequence\nvar V = v + '[aeiou]*'; // vowel sequence\nvar RE_CV = new RegExp( '^' + C + v + '[^aeiouwxy]$' );\nvar mgr0 = '^(' + C + ')?' + V + C; // [C]VC... is m>0\nvar RE_MGR0 = new RegExp( mgr0 );\nvar meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$'; // [C]VC[V] is m=1\nvar RE_MEQ1 = new RegExp( meq1 );\nvar mgr1 = '^(' + C + ')?' + V + C + V + C; // [C]VCVC... is m>1\nvar RE_MGR1 = new RegExp( mgr1 );\nvar sV = '^(' + C + ')?' + v; // vowel in stem\nvar RE_SV = new RegExp( sV );\nvar RE_STEP1A = /^(.+?)(ss|i)es$/;\nvar RE2_STEP1A = /^(.+?)([^s])s$/;\nvar RE_STEP1B = /^(.+?)eed$/;\nvar RE2_STEP1B = /^(.+?)(ed|ing)$/;\nvar RE_STEP1C = /^(.+?)y$/;\nvar RE_STEP2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\nvar RE_STEP3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\nvar RE_STEP4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\nvar RE2_STEP4 = /^(.+?)(s|t)(ion)$/;\nvar RE_STEP5 = /^(.+?)e$/;\nvar RE_LAST = /.$/;\nvar RE_ATBLIZ = /(at|bl|iz)$/;\nvar RE_DOUBLE = new RegExp( '([^aeiouylsz])\\\\1$' ); // eslint-disable-line prefer-regex-literals\n\n\n// MAIN //\n\n/**\n* Extracts the stem of a given word using the Porter stemming algorithm.\n*\n* ## References\n*\n* -   Porter, Michael F. 1980. \"An algorithm for suffix stripping.\" _Program_ 13 (3): 130\u201337. doi:[10.1108/eb046814][@porter:1980].\n*\n* [@porter:1980]: https://doi.org/10.1108/eb046814\n*\n* @param {string} word - input word\n* @throws {TypeError} first argument must be a string\n* @returns {string} word stem\n*\n* @example\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walks' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'worldwide' );\n* // returns 'worldwid'\n*\n* @example\n* var out = porterStemmer( '' );\n* // returns ''\n*/\nfunction porterStemmer( word ) {\n\tvar firstch;\n\tvar suffix;\n\tvar stem;\n\tvar fp;\n\n\tif ( !isString( word ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', word ) );\n\t}\n\tif ( word.length < 3 ) {\n\t\treturn word;\n\t}\n\tword = lowercase( word );\n\tfirstch = word[ 0 ];\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toUpperCase() + word.substr( 1 );\n\t}\n\n\t// Step 1a:\n\tif ( RE_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE_STEP1A, '$1$2' );\n\t} else if ( RE2_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE2_STEP1A, '$1$2' );\n\t}\n\n\t// Step 1b:\n\tif ( RE_STEP1B.test( word ) ) {\n\t\tfp = RE_STEP1B.exec( word );\n\t\tif ( RE_MGR0.test( fp[ 1 ] ) ) {\n\t\t\tword = replace( word, RE_LAST, '' );\n\t\t}\n\t} else if ( RE2_STEP1B.test( word ) ) {\n\t\tfp = RE2_STEP1B.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem;\n\t\t\tif ( RE_ATBLIZ.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t} else if ( RE_DOUBLE.test( word ) ) {\n\t\t\t\tword = replace( word, RE_LAST, '' );\n\t\t\t} else if ( RE_CV.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t}\n\t\t}\n\t}\n\n\t// Step 1c:\n\tif ( RE_STEP1C.test( word ) ) {\n\t\tfp = RE_STEP1C.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem + 'i';\n\t\t}\n\t}\n\n\t// Step 2:\n\tif ( RE_STEP2.test( word ) ) {\n\t\tfp = RE_STEP2.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step2list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 3:\n\tif ( RE_STEP3.test( word ) ) {\n\t\tfp = RE_STEP3.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step3list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 4:\n\tif ( RE_STEP4.test( word ) ) {\n\t\tfp = RE_STEP4.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t} else if ( RE2_STEP4.test( word ) ) {\n\t\tfp = RE2_STEP4.exec( word );\n\t\tstem = fp[ 1 ] + fp[ 2 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\n\t// Step 5:\n\tif ( RE_STEP5.test( word ) ) {\n\t\tfp = RE_STEP5.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif (\n\t\t\tRE_MGR1.test( stem ) ||\n\t\t\t( RE_MEQ1.test( stem ) && !( RE_CV.test( stem ) ) )\n\t\t) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\tif ( endsWith( word, 'll', word.length ) && RE_MGR1.test( word ) ) {\n\t\tword = replace( word, RE_LAST, '' );\n\t}\n\n\t// Turn initial Y back to y:\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toLowerCase() + word.substr( 1 );\n\t}\n\treturn word;\n}\n\n\n// EXPORTS //\n\nmodule.exports = porterStemmer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Extract the stem of a given word.\n*\n* @module @stdlib/nlp/porter-stemmer\n*\n* @example\n* var porterStemmer = require( '@stdlib/nlp/porter-stemmer' );\n*\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walks' );\n* // returns 'walk'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar tokenize = require( './../../tokenize' );\nvar trim = require( '@stdlib/string/base/trim' );\n\n\n// VARIABLES //\n\nvar RE_CAPITALIZED = /^[A-Z][a-z]{0,4}$/;\nvar RE_CAPITALIZED_PERIOD = /^([A-Z]\\.)*[A-Z]$/;\nvar RE_NUMBER = /^[0-9]$/;\nvar RE_PREFIXES = /^[{[(<:;\"'\u201D`]/;\nvar RE_SUFFIXES = /[})\\]>:;\"'\u201D`]$/;\n\n\n// FUNCTIONS //\n\n/**\n* Checks whether the token at a specified index is an end-of-sentence token.\n*\n* ## Notes\n*\n* -   The function uses a set of heuristics to determine whether a token is an end-of-sentence token.\n* -   Periods (`.`), exclamation points (`!`), and question marks (`?`). are treated as possible end-of-sentence tokens.\n* -   The function expects that the input array of tokens has been tokenized using the `@stdlib/nlp/tokenize` function, which tokenizes a string into an array of tokens and handles titles (`Dr.`, etc.), abbreviations such as `e.g.`, and the like, keeping them as single tokens. For example, the string `Dr. Smith is a professor at MIT.` is tokenized as `['Dr.', 'Smith', 'is', 'a', 'professor', 'at', 'MIT', '.']`. This function henceforth only considers standalone characters as possible end-of-sentence tokens, and does not consider them as end-of-sentence tokens if they are part of a larger token.\n*\n* @private\n* @param {StringArray} tokens - array of tokens\n* @param {NonNegativeInteger} i - index\n* @returns {boolean} boolean indicating whether the token at a specified index is an end-of-sentence token\n*/\nfunction isEndOfSentence( tokens, i ) {\n\tvar token;\n\tvar im1 = i - 1;\n\tvar ip1 = i + 1;\n\ttoken = tokens[ i ];\n\tif (\n\t\ttoken === '.' &&\n\t\t!RE_CAPITALIZED.test( tokens[ im1 ] ) && // for other short abbreviations and bullet points\n\t\t!RE_CAPITALIZED_PERIOD.test( tokens[ im1 ] ) && // acronyms of the form A.B.C.\n\t\t!RE_NUMBER.test( tokens[ im1 ] ) && // numbered list items\n\t\t!RE_PREFIXES.test( tokens[ im1 ] ) &&\n\t\t!RE_SUFFIXES.test( tokens[ ip1 ] )\n\t) {\n\t\treturn true;\n\t}\n\tif (\n\t\t( token === '!' || token === '?' ) &&\n\t\t!RE_PREFIXES.test( tokens[ im1 ] ) &&\n\t\t!RE_SUFFIXES.test( tokens[ ip1 ] )\n\t) {\n\t\treturn true;\n\t}\n\tif (\n\t\tRE_SUFFIXES.test( token ) &&\n\t\t( tokens[ im1 ] === '.' || tokens[ im1 ] === '!' || tokens[ im1 ] === '?' )\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Splits a string into an array of sentences.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {StringArray} array of sentences\n*\n* @example\n* var str = 'Hello World! How are you?';\n* var out = sentencize( str );\n* // returns [ 'Hello World!', 'How are you?' ]\n*\n* @example\n* var str = '';\n* var out = sentencize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = sentencize( str );\n* // returns [ 'Hello Mrs. Maple, could you call me back?' ]\n*/\nfunction sentencize( str ) {\n\tvar current;\n\tvar tokens;\n\tvar out;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a string. Value: `' + str + '`.' );\n\t}\n\ttokens = tokenize( str, true );\n\tcurrent = '';\n\tout = [];\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\tcurrent += tokens[ i ];\n\t\tif ( isEndOfSentence( tokens, i ) ) {\n\t\t\tout.push( trim( current ) );\n\t\t\tcurrent = '';\n\t\t}\n\t}\n\tif ( current !== '' ) {\n\t\tout.push( trim( current ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sentencize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a string into an array of sentences.\n*\n* @module @stdlib/nlp/sentencize\n*\n* @example\n* var sentencize = require( '@stdlib/nlp/sentencize' );\n*\n* var str = 'Hello Mrs. Maple, could you call me back? I need to talk to you about something.';\n* var out = sentencize( str );\n* // returns [ 'Hello Mrs. Maple, could you call me back?', 'I need to talk to you about something.' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace nlp\n*/\nvar nlp = {};\n\n/**\n* @name expandAcronyms\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/expand-acronyms}\n*/\nsetReadOnly( nlp, 'expandAcronyms', require( './../expand-acronyms' ) );\n\n/**\n* @name expandContractions\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/expand-contractions}\n*/\nsetReadOnly( nlp, 'expandContractions', require( './../expand-contractions' ) );\n\n/**\n* @name lda\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/lda}\n*/\nsetReadOnly( nlp, 'lda', require( './../lda' ) );\n\n/**\n* @name ordinalize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/ordinalize}\n*/\nsetReadOnly( nlp, 'ordinalize', require( './../ordinalize' ) );\n\n/**\n* @name porterStemmer\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/porter-stemmer}\n*/\nsetReadOnly( nlp, 'porterStemmer', require( './../porter-stemmer' ) );\n\n/**\n* @name sentencize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/sentencize}\n*/\nsetReadOnly( nlp, 'sentencize', require( './../sentencize' ) );\n\n/**\n* @name tokenize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/tokenize}\n*/\nsetReadOnly( nlp, 'tokenize', require( './../tokenize' ) );\n\n\n// EXPORTS //\n\nmodule.exports = nlp;\n"],
  "mappings": "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",
  "names": ["require_abbreviations", "__commonJSMin", "exports", "module", "require_emojis", "__commonJSMin", "exports", "module", "require_contractions", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "isBoolean", "isString", "hasOwnProp", "format", "ABBRS", "EMOJIS", "CONTRACT", "REGEXP_PREFIXES", "REGEXP_SUFFIXES", "extend", "arr", "ext", "i", "tokenizeSubstring", "substr", "prefixes", "suffixes", "match", "done", "res", "tokenize", "str", "keepWhitespace", "subtkns", "substrs", "tokens", "cache", "require_lib", "__commonJSMin", "exports", "module", "main", "require_acronyms", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "objectKeys", "isUppercase", "lowercase", "tokenize", "isString", "format", "ACRONYMS", "KEYS", "expandAcronyms", "str", "tokens", "token", "out", "key", "i", "j", "require_lib", "__commonJSMin", "exports", "module", "main", "require_contractions", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "objectKeys", "isCapitalized", "uncapitalize", "capitalize", "tokenize", "isString", "format", "CONTRACTIONS", "KEYS", "expandContractions", "str", "tokens", "token", "out", "key", "i", "j", "require_lib", "__commonJSMin", "exports", "module", "main", "require_matrix", "__commonJSMin", "exports", "module", "Int32Array", "Float64Array", "setReadOnly", "matrix", "dtype", "ndims", "shape", "data", "len", "mat", "i", "get", "set", "j", "idx", "v", "require_get_thetas", "__commonJSMin", "exports", "module", "matrix", "getThetas", "Theta", "val", "d", "k", "require_validate", "__commonJSMin", "exports", "module", "isPositive", "isObject", "hasOwnProp", "format", "validate", "opts", "options", "require_get_phis", "__commonJSMin", "exports", "module", "matrix", "getPhis", "Phi", "val", "k", "w", "require_init", "__commonJSMin", "exports", "module", "randu", "floor", "init", "topic", "newz", "len", "wt", "d", "i", "require_avg_matrix", "__commonJSMin", "exports", "module", "matrix", "avgMatrix", "A", "B", "weight", "propA", "propB", "nrow", "ncol", "val", "C", "i", "j", "require_fit", "__commonJSMin", "exports", "module", "isPositiveInteger", "format", "randu", "avgMatrix", "fit", "iter", "burnin", "thin", "kalpha", "wbeta", "topic", "theta", "prob", "word", "phi", "len", "nt", "d", "i", "j", "u", "w", "require_main", "__commonJSMin", "exports", "module", "isNonNegativeInteger", "isPositiveInteger", "isStringArray", "setReadOnly", "contains", "tokenize", "Int32Array", "format", "matrix", "getThetas", "validate", "getPhis", "init", "fit", "findIndex", "vocab", "searchVal", "i", "lda", "documents", "K", "options", "target", "model", "alpha", "beta", "opts", "err", "pos", "nd", "it", "wd", "D", "d", "j", "W", "w", "getTerms", "k", "no", "skip", "phi", "ret", "max", "mid", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isBoolean", "indexOf", "format", "LANGUAGE_CODES", "GRAMMATICAL_GENDERS", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "isInteger", "isString", "format", "validate", "ordinalize", "value", "options", "suffix", "last2", "last", "opts", "err", "require_lib", "__commonJSMin", "exports", "module", "main", "require_main", "__commonJSMin", "exports", "module", "isString", "endsWith", "lowercase", "replace", "format", "step2list", "step3list", "c", "v", "C", "V", "RE_CV", "mgr0", "RE_MGR0", "meq1", "RE_MEQ1", "mgr1", "RE_MGR1", "sV", "RE_SV", "RE_STEP1A", "RE2_STEP1A", "RE_STEP1B", "RE2_STEP1B", "RE_STEP1C", "RE_STEP2", "RE_STEP3", "RE_STEP4", "RE2_STEP4", "RE_STEP5", "RE_LAST", "RE_ATBLIZ", "RE_DOUBLE", "porterStemmer", "word", "firstch", "suffix", "stem", "fp", "require_lib", "__commonJSMin", "exports", "module", "main", "require_main", "__commonJSMin", "exports", "module", "isString", "tokenize", "trim", "RE_CAPITALIZED", "RE_CAPITALIZED_PERIOD", "RE_NUMBER", "RE_PREFIXES", "RE_SUFFIXES", "isEndOfSentence", "tokens", "i", "token", "im1", "ip1", "sentencize", "str", "current", "out", "require_lib", "__commonJSMin", "exports", "module", "main", "setReadOnly", "nlp"]
}
