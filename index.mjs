// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-capitalized@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-uncapitalize@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-capitalize@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/array-int32@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-randu@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/string-ends-with@esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/string-lowercase@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/string-replace@esm/index.mjs";var S={"^_^":["^_^"],"=D":["=D"],";-p":[";-p"],":O":[":O"],":-/":[":-/"],xD:["xD"],V_V:["V_V"],";(":[";("],"(:":["(:"],'")':['")'],":Y":[":Y"],":]":[":]"],":3":[":3"],":(":[":("],":-)":[":-)"],"=3":["=3"],":))":[":))"],":>":[":>"],";p":[";p"],":p":[":p"],"=[[":["=[["],xDD:["xDD"],"<333":["<333"],"<33":["<33"],":P":[":P"],"o.O":["o.O"],"<3":["<3"],";-)":[";-)"],":)":[":)"],"-_-":["-_-"],":')":[":')"],o_O:["o_O"],";)":[";)"],"=]":["=]"],"(=":["(="],"-__-":["-__-"],":/":[":/"],":0":[":0"],"(^_^)":["(^_^)"],";D":[";D"],o_o:["o_o"],":((":[":(("],"=)":["=)"]},E={"'s":["'s"],"'S":["'S"],"ain't":["ai","n't"],aint:["ai","nt"],"Ain't":["Ai","n't"],"aren't":["are","n't"],arent:["are","nt"],"Aren't":["Are","n't"],"can't":["ca","n't"],cant:["ca","nt"],"Can't":["Ca","n't"],"can't've":["ca","n't","'ve"],"'cause":["'cause'"],cannot:["can","not"],Cannot:["Can","not"],"could've":["could","'ve"],couldve:["could","ve"],"Could've":["Could","'ve"],"couldn't":["could","n't"],couldnt:["could","nt"],"Couldn't":["Could","n't"],"couldn't've":["could","n't","'ve"],couldntve:["could","nt","ve"],"Couldn't've":["Could","n't","'ve"],"didn't":["did","n't"],didnt:["did","nt"],"Didn't":["Did","n't"],"doesn't":["does","n't"],doesnt:["does","nt"],"Doesn't":["Does","n't"],"don't":["do","n't"],dont:["do","nt"],"Don't":["Do","n't"],"hadn't":["had","n't"],hadnt:["had","nt"],"Hadn't":["Had","n't"],"hadn't've":["had","n't","'ve"],"hasn't":["has","n't"],hasnt:["has","nt"],"haven't":["have","n't"],havent:["have","nt"],"he'd":["he","'d"],hed:["he","d"],"he'd've":["he","'d","'ve"],hedve:["he","d","ve"],"he'll":["he","'ll"],"he'll've":["he","'ll","'ve"],"he's":["he","'s"],hes:["he","s"],"how'd":["how","'d"],howd:["how","d"],"how'd'y":["how","'d","'y"],"how'll":["how","'ll"],howll:["how","ll"],"how's":["how","'s"],hows:["how","s"],"I'd":["I","'d"],"I'd've":["I","'d","'ve"],"I'll":["I","'ll"],"i'll":["i","'ll"],"I'll've":["I","'ll","'ve"],"i'll've":["i","'ll","'ve"],"I'm":["I","'m"],"i'm":["i","'m"],Im:["I","m"],im:["i","m"],"I'ma":["I","'ma"],"i'ma":["i","'ma"],"I've":["I","'ve"],"i've":["i","'ve"],"isn't":["is","n't"],isnt:["is","nt"],"Isn't":["Is","n't"],"It'd":["It","'d"],"it'd":["it","'d"],"it'd've":["it","'d","'ve"],"it'll've":["it","'ll","'ve"],"it'll":["it","'ll"],itll:["it","ll"],"it's":["it","'s"],"let's":["let","'s"],lets:["let","s"],"ma'am":["ma'am"],"mayn't":["may","n't"],"mightn't":["might","n't"],"mightn't've":["might","n't","'ve"],"might've":["might","'ve"],"mustn't":["must","n't"],"mustn't've":["must","n't","'ve"],"must've":["must","'ve"],"needn't":["need","n't"],"needn't've":["need","n't","'ve"],"not've":["not","'ve"],"o'clock":["o'clock"],"oughtn't":["ought","n't"],"oughtn't've":["ought","n't","'ve"],"so've":["so","'ve"],"so's":["so","'s"],"shan't":["sha","n't"],"sha'n't":["sha'","n't"],"shan't've":["sha","n't","'ve"],"she'd":["she","'d"],"she'd've":["she","'d","'ve"],"she'll":["she","'ll"],"she'll've":["she","'ll","'ve"],"she's":["she","'s"],"should've":["should","'ve"],"shouldn't":["should","n't"],"shouldn't've":["should","n't","'ve"],"that'd":["that","'d"],"that'd've":["that","'d","'ve"],"that's":["that","'s"],thats:["that","s"],"there'd":["there","'d"],"there'd've":["there","'d","'ve"],"there's":["there","'s"],"they'd":["they","'d"],"They'd":["They","'d"],"they'd've":["they","'d","'ve"],"They'd've":["They","'d","'ve"],"they'll":["they","'ll"],"They'll":["They","'ll"],"they'll've":["they","'ll","'ve"],"They'll've":["They","'ll","'ve"],"they're":["they","'re"],"They're":["They","'re"],"they've":["they","'ve"],"They've":["They","'ve"],"to've":["to","'ve"],"wasn't":["was","n't"],"we'd":["we","'d"],"We'd":["We","'d"],"we'd've":["we","'d","'ve"],"we'll":["we","'ll"],"We'll":["We","'ll"],"we'll've":["we","'ll","'ve"],"We'll've":["We","'ll","'ve"],"we're":["we","'re"],"We're":["We","'re"],"we've":["we","'ve"],"We've":["We","'ve"],"weren't":["were","n't"],"what'll":["what","'ll"],"what'll've":["what","'ll","'ve"],"what're":["what","'re"],"what's":["what","'s"],"what've":["what","'ve"],"when's":["when","'s"],"when've":["when","'ve"],"where'd":["where","'d"],"where's":["where","'s"],"where've":["where","'ve"],"who'd":["who","'d"],"who'll":["who","'ll"],"who'll've":["who","'ll'","'ve'"],"who're":["who","'re"],"who's":["who","'s"],"who've":["who","'ve"],"why've":["why","'ve"],"why'll":["why","'ll"],"why're":["why","'re"],"why's":["why","'s"],"will've":["will","'ve"],"won't":["wo","n't"],wont:["wo","nt"],"won't've":["wo","n't","'ve"],"would've":["would","'ve"],"wouldn't":["would","n't"],"wouldn't've":["would","n't","'ve"],"y'all":["y'","all"],"y'all'd":["y'","all","'d"],"y'all'd've":["y'","all","'d","'ve"],"y'all're":["y'","all","'re'"],"y'all've":["y'","all","ve"],"you'd":["you","'d"],"You'd":["You","'d"],"you'd've":["you","'d","'ve"],"You'd've":["You","'d","'ve"],"you'll":["you","'ll"],"You'll":["You","'ll"],"you'll've":["you","'ll","'ve"],"You'll've":["You","'ll","'ve"],"you're":["you","'re"],"You're":["You","'re"],"you've":["you","'ve"],"You've":["You","'ve"]},C=l.isPrimitive,I=o.isPrimitive,M=h,z=a,O={"i.e.":["i.e."],"I.e.":["I.e."],"I.E.":["I.E."],"e.g.":["e.g."],"E.g.":["E.g."],"E.G.":["E.G."],"et al.":["et al."],"etc.":["etc."],"vs.":["vs."],"A.S.A.P":["A.S.A.P"],"E.T.A.":["E.T.A."],"D.I.Y":["D.I.Y"],"R.S.V.P":["R.S.V.P"],"P.S.":["P.S."],"B.Y.O.B":["B.Y.O.B"],"Ms.":["Ms."],"Mr.":["Mr."],"Dr.":["Dr."],"Prof.":["Prof."],"Mrs.":["Mrs."],"Messrs.":["Messrs."],"Gov.":["Gov."],"Gen.":["Gen."],"Lt.":["Lt."],"Col.":["Col."],"Mt.":["Mt."],"Bros.":["Bros."],"Corp.":["Corp."],"Co.":["Co."],"co.":["co."],"Inc.":["Inc."],"Ltd.":["Ltd."],"Rep.":["Rep."],"Sen.":["Sen."],"Jr.":["Jr."],"Sr.":["Sr."],"Ph.D.":["Ph.D."],"J.D.":["J.D."],"M.D.":["M.D."],"Rev.":["Rev."],"Adm.":["Adm."],"St.":["St."],"a.m.":["a.m."],"p.m.":["p.m."],"b.c.":["b.c."],"B.C.":["B.C."],"a.d.":["a.d."],"A.D.":["A.D."],"b.c.e.":["b.c.e."],"B.C.E.":["B.C.E."],"Jan.":["Jan."],"Feb.":["Feb."],"Mar.":["Mar."],"Apr.":["Apr."],"May.":["May."],"Jun.":["Jun."],"Jul.":["Jul."],"Aug.":["Aug."],"Sep.":["Sep."],"Sept.":["Sept."],"Oct.":["Oct."],"Nov.":["Nov."],"Dec.":["Dec."],"Ala.":["Ala."],"Ariz.":["Ariz."],"Ark.":["Ark."],"Calif.":["Calif."],"Colo.":["Colo."],"Conn.":["Conn."],"Del.":["Del."],"D.C.":["D.C."],"Fla.":["Fla."],"Ga.":["Ga."],"Ill.":["Ill."],"Ind.":["Ind."],"Kans.":["Kans."],"Kan.":["Kan."],"Ky.":["Ky."],"La.":["La."],"Md.":["Md."],"Mass.":["Mass."],"Mich.":["Mich."],"Minn.":["Minn."],"Miss.":["Miss."],"Mo.":["Mo."],"Mont.":["Mont."],"Nebr.":["Nebr."],"Neb.":["Neb."],"Nev.":["Nev."],"N.H.":["N.H."],"N.J.":["N.J."],"N.M.":["N.M."],"N.Y.":["N.Y."],"N.C.":["N.C."],"N.D.":["N.D."],"Okla.":["Okla."],"Ore.":["Ore."],"Pa.":["Pa."],"Tenn.":["Tenn."],"Va.":["Va."],"Wash.":["Wash."],"Wis.":["Wis."]},P=S,A=E,V=/^([,([{*<"“'`‘.])/gi,N=/([,.!?%*>:;"'”`)\]}])$/gi;function W(e,t){var s;for(s=0;s<t.length;s++)e.push(t[s]);return e}function Y(e){var t,s,i,n=[],l=[];do{P[e]||O[e]||A[e]?s=!0:(t=e.split(V)).length>1?(n.push(t[1]),e=t[2]):(t=e.split(N)).length>1?(e=t[0],l.push(t[1])):s=!0}while(!s);return(i=n).push(e),W(i,l),i}var $=function(e,t){var s,i,n,l,o,h;if(!I(e))throw new TypeError(z("invalid argument. First argument must be a string. Value: `%s`.",e));if(arguments.length>1&&!C(t))throw new TypeError(z("invalid argument. Second argument must be a boolean. Value: `%s`.",t));if(!e)return[];for(i=t?e.split(/(\s+)/):e.split(/\s+/),o={},n=[],h=0;h<i.length;h++)l=i[h],M(o,l)?W(n,o[l]):(W(n,s=Y(l)),o[l]=s);return n},K={"'s":"is","'S":"Is","aren't":"are not",arent:"are not","can't":"can not",cant:"can not","can't've":"can not have","'cause":"because",cannot:"can not","could've":"could have",couldve:"could have","couldn't":"could not",couldnt:"could not","couldn't've":"could not have",couldntve:"could not have","didn't":"did not",didnt:"did not","doesn't":"does not",doesnt:"does not","don't":"do not",dont:"do not","hadn't":"had not",hadnt:"had not","hadn't've":"had not have","hasn't":"has not",hasnt:"has not","haven't":"have not",havent:"have not","he'd":"he would",hed:"he would","he'd've":"he would have",hedve:"he would have","he'll":"he will","he'll've":"he will have","he's":"he is",hes:"he is","how'd":"how did",howd:"how did","how'd'y":"how did you","how'll":"how will",howll:"how will","how's":"how is",hows:"how is","i'd":"i would","i'd've":"i would have","i'll":"i will","i'll've":"i will have","i'm":"i am",im:"i am","i'ma":"i am going to","i've":"i have","isn't":"is not",isnt:"is not","it'd":"it would","it'd've":"it would have","it'll've":"it will have","it'll":"it will",itll:"it will","it's":"it is","let's":"let us",lets:"let us","ma'am":"madam","mayn't":"may not","mightn't":"it might not","mightn't've":"might not have","might've":"might have","mustn't":"must not","mustn't've":"must not have","must've":"must have","needn't":"need not","needn't've":"need not have","not've":"not have","oughtn't":"ought not","oughtn't've":"ought not to have","so've":"so have","so's":"so is","shan't":"shall not","sha'n't":"shall not","shan't've":"shall not have","she'd":"she would","she'd've":"she would have","she'll":"she will","she'll've":"she will have","she's":"she is","should've":"should have","shouldn't":"should not","shouldn't've":"should not have","that'd":"that would","that'd've":"that would have","that's":"that is",thats:"that is","there'd":"there would","there'd've":"there would have","there's":"there is","they'd":"they would","they'd've":"they would have","they'll":"they will","they'll've":"they will have","they're":"they are","they've":"they have","to've":"to have","wasn't":"was not","we'd":"we would","we'd've":"we would have","we'll":"we will","we'll've":"we will have","we're":"we are","we've":"we have","weren't":"were not","what'll":"what will","what'll've":"what will have","what're":"what are","what's":"what has/is","what've":"what have","when's":"when is","when've":"when have","where'd":"where would","where's":"where is","where've":"where have","who'd":"who would","who'll":"who will","who'll've":"who will have","who're":"who are","who's":"who is","who've":"who have","why've":"why have","why'll":"why will","why're":"why are","why's":"why is","will've":"will have","won't":"will not",wont:"will not","won't've":"will not have","would've":"would have","wouldn't":"would not","wouldn't've":"would not have","y'all":"you all","y'all'd":"you all would","y'all'd've":"you all would have","y'all're":"you all are","y'all've":"you all have","you'd":"you would","you'd've":"you would have","you'll":"you will","you'll've":"you will have","you're":"you are","you've":"you have"},k=t,_=s,L=i,J=n,R=$,B=o.isPrimitive,F=a,G=K,H=k(G);var U=function(e){var t,s,i,n,l,o;if(!B(e))throw new TypeError(F("invalid argument. Must provide a string. Value: `%s`.",e));for(i="",t=R(e,!0),l=0;l<t.length;l++){if(s=t[l],_(s)){for(o=0;o<H.length;o++)if(n=H[o],L(s)===n){s=J(G[n]);break}}else for(o=0;o<H.length;o++)if(s===(n=H[o])){s=G[n];break}i+=s}return i},q=w,Q=m,X=g;var Z=function(){var e,t,s,i,n,l,o;for(1===arguments.length?s=arguments[0]:2===arguments.length&&(s=arguments[0],e=arguments[1]),t=s.length,n=1,o=0;o<t;o++)n*=s[o];return i="int32"===e?new q(n):new Q(n),(l={}).dtype=e,l.shape=s,l.strides=[s[1],1],l.offset=0,l.ndims=s.length,l.length=i.length,l.nbytes=i.byteLength,l.data=i,X(l,"get",h),X(l,"set",a),l;function h(e,t){var s=this.offset+e*this.strides[0]+t*this.strides[1];return this.data[s]}function a(e,t,s){return(e=this.offset+e*this.strides[0]+t*this.strides[1])>=0&&(this.data[e]=s),this}},ee=Z;var te=function(){var e,t,s,i;for(e=ee([this.D,this.K]),s=0;s<this.D;s++)for(i=0;i<this.K;i++)t=(this.nd.get(s,i)+this.alpha)/(this.ndSum[s]+this.K*this.alpha),e.set(s,i,t);return e},se=p.isPrimitive,ie=y,ne=h,le=a;var oe=Z;var he=c,ae=f;var re=Z;var de=function(e,t,s){var i,n,l,o,h,a,r,d;for(l=e.shape[0],o=e.shape[1],a=re([l,o]),i=(s-1)/s,n=1/s,r=0;r<l;r++)for(d=0;d<o;d++)h=i*e.get(r,d)+n*t.get(r,d),a.set(r,d,h);return a},ve=d,ue=a,we=c,me=de;var ge=r,pe=d,ye=v,ce=e,fe=u,be=$,je=w,xe=a,De=Z,Te=te,Se=function(e,t){return ie(t)?ne(t,"alpha")&&(e.alpha=t.alpha,!se(e.alpha))?new TypeError(le("invalid option. `%s` option must be a positive number. Option: `%s`.","alpha",e.alpha)):ne(t,"beta")&&(e.beta=t.beta,!se(e.beta))?new TypeError(le("invalid option. `%s` option must be a positive number. Option: `%s`.","beta",e.beta)):null:new TypeError(le("invalid argument. Options argument must be an object. Value: `%s`.",t))},Ee=function(){var e,t,s,i;for(e=oe([this.K,this.W]),s=0;s<this.K;s++)for(i=0;i<this.W;i++)t=(this.nw.get(i,s)+this.beta)/(this.nwSum[s]+this.W*this.beta),e.set(s,i,t);return e},Ce=function(){var e,t,s,i,n,l;for(this.z=[],n=0;n<this.D;n++){for(this.z.push([]),s=this.w[n].length,l=0;l<s;l++)t=ae(he()*this.K),this.z[n].push(t);for(this.ndSum[n]=s,l=0;l<s;l++)i=this.w[n][l],e=this.z[n][l],this.nw.set(i,e,this.nw.get(i,e)+1),this.nd.set(n,e,this.nd.get(n,e)+1),this.nwSum[e]=this.nwSum[e]+1}},Ie=function(e,t,s){var i,n,l,o,h,a,r,d,v,u,w,m,g,p;if(!ve(e))throw new TypeError(ue("invalid argument. First argument must be a positive integer. Value: `%s`.",e));if(!ve(t))throw new TypeError(ue("invalid argument. Second argument must be a positive integer. Value: `%s`.",t));if(!ve(s))throw new TypeError(ue("invalid argument. Third argument must be a positive integer. Value: `%s`.",s));for(n=this.W*this.beta,i=this.K*this.alpha,w=0;w<e;w++){for(u=0;u<this.D;u++)for(p=0;p<this.ndSum[u];p++){for(a=this.w[u][p],l=this.z[u][p],this.nw.set(a,l,this.nw.get(a,l)-1),this.nd.set(u,l,this.nd.get(u,l)-1),this.ndSum[u]-=1,this.nwSum[l]-=1,h=[],m=0;m<this.K;m++)h.push((this.nw.get(a,m)+this.beta)/(this.nwSum[m]+n)*(this.nd.get(u,m)+this.alpha)/(this.ndSum[u]+i));for(m=1;m<this.K;m++)h[m]+=h[m-1];for(g=h[this.K-1]*we(),l=0,v=0;v<this.K;v++)if(h[v]>g){l=v;break}this.nw.set(a,l,this.nw.get(a,l)+1),this.nd.set(u,l,this.nd.get(u,l)+1),this.nwSum[l]+=1,this.ndSum[u]+=1,this.z[u][p]=l}w%s==0&&w>t&&(r=this.getPhis(),o=this.getThetas(),this.phiList.push(r),this.thetaList.push(o),d=this.phiList.length,this.avgPhi=1===d?r:me(this.avgPhi,r,d),d=this.thetaList.length,this.avgTheta=1===d?o:me(this.avgTheta,o,d))}};function Me(e,t){var s;for(s=0;s<e.length;s++)if(e[s]===t)return s;return-1}var ze=function(e,t,s){var i,n,l,o,h,a,r,d,v,u,w,m,g,p,y,c,f;if(!ye(e))throw new TypeError(xe("invalid argument. First argument must be an array of strings. Value: `%s`.",e));if(!pe(t))throw new TypeError(xe("invalid argument. Number of topics must be a positive integer. Value: `%s`.",t));if(a={},arguments.length>2&&(r=Se(a,s)))throw r;for(m=e.length,o=a.alpha||50/t,h=a.beta||.1,n=[],f=[],d=0,g=0;g<m;g++)for(f.push([]),v=(w=be(e[g])).length,p=0;p<v;p++)i=w[p],-1===(u=Me(n,i))?(n.push(i),f[g].push(d),d+=1):f[g].push(u);return c=n.length,ce(l={},"K",t),ce(l,"D",m),ce(l,"W",c),ce(l,"alpha",o),ce(l,"beta",h),ce(l,"init",Ce),ce(l,"fit",Ie),ce(l,"getPhis",Ee),ce(l,"getThetas",Te),ce(l,"getTerms",b),l.nwSum=new je(t),l.ndSum=new je(m),l.nw=De([c,t],"int32"),l.nd=De([m,t],"int32"),l.phiList=[],l.thetaList=[],l.w=f,l.init(),l;function b(e,s){var i,l,o,h,a,r;if(!ge(e)||e>=t)throw new TypeError(xe("invalid argument. First argument must be a nonnegative integer which is less than the total number of topics. Value: `%s`.",e));if(s){if(!pe(s))throw new TypeError(xe("invalid argument. Second argument must be a positive integer. Value: `%s`.",s))}else s=10;for(o=[],i=[],r=0;r<s;r++){for(h=0,y=0;y<this.W;y++)(l=this.avgPhi.get(e,y))>h&&!fe(i,y)&&(h=l,a=y);i.push(a),o.push({word:n[a],prob:h})}return o}},Oe=y,Pe=h,Ae=l.isPrimitive,Ve=j,Ne=a,We=["en","es","fin","fr","de","it","pt","swe"],Ye=["masculine","feminine"];var $e=function(e,t){return Oe(t)?Pe(t,"lang")&&(e.lang=t.lang,-1===Ve(We,e.lang))?new TypeError(Ne('invalid option. `%s` option must be one of the following: "%s". Value: `%s`.',"lang",We.join('", "'),e.lang)):Pe(t,"suffixOnly")&&(e.suffixOnly=t.suffixOnly,!Ae(e.suffixOnly))?new TypeError(Ne("invalid option. `%s` option must be a boolean. Option: `%s`.","suffixOnly",e.suffixOnly)):Pe(t,"gender")&&(e.gender=t.gender,-1===Ve(Ye,e.gender))?new TypeError(Ne('invalid option. `%s` option must be one of the following: "%s". Value: `%s`.',"gender",Ye.join('", "'),e.gender)):null:new TypeError(Ne("invalid argument. Options argument must be an object. Value: `%s`.",t))},Ke=o.isPrimitive,ke=a,_e=b,Le=$e;var Je=function(e,t){var s,i,n,l,o;if(!Ke(e)&&!_e(e))throw new TypeError(ke("invalid argument. First argument must be a string or integer. Value: %s.",e));if(l={},arguments.length>1&&(o=Le(l,t)))throw o;switch(i=(e=String(e))[e.length-1],s=e.slice(-2),l.lang){case"fr":n="1"===e?"feminine"===l.gender?"re":"er":"e";break;case"de":case"fin":n=".";break;case"it":case"pt":case"es":n="feminine"===l.gender?"ª":"º";break;case"swe":n="11"!==s&&"1"===i||"12"!==s&&"2"===i?":a":":e";break;default:n="11"!==s&&"1"===i?"st":"12"!==s&&"2"===i?"nd":"13"!==s&&"3"===i?"rd":"th"}return l.suffixOnly?n:e+n},Re=o.isPrimitive,Be=x,Fe=D,Ge=T,He=a,Ue={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},qe={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},Qe="[aeiouy]",Xe="[^aeiou][^aeiouy]*",Ze=new RegExp("^"+Xe+Qe+"[^aeiouwxy]$"),et=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),tt=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$"),st=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),it=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy]"),nt=/^(.+?)(ss|i)es$/,lt=/^(.+?)([^s])s$/,ot=/^(.+?)eed$/,ht=/^(.+?)(ed|ing)$/,at=/^(.+?)y$/,rt=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,dt=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,vt=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,ut=/^(.+?)(s|t)(ion)$/,wt=/^(.+?)e$/,mt=/.$/,gt=/(at|bl|iz)$/,pt=new RegExp("([^aeiouylsz])\\1$");var yt=function(e){var t,s,i,n;if(!Re(e))throw new TypeError(He("invalid argument. First argument must be a string. Value: `%s`.",e));return e.length<3||("y"===(t=(e=Fe(e))[0])&&(e=t.toUpperCase()+e.substr(1)),nt.test(e)?e=Ge(e,nt,"$1$2"):lt.test(e)&&(e=Ge(e,lt,"$1$2")),ot.test(e)?(n=ot.exec(e),et.test(n[1])&&(e=Ge(e,mt,""))):ht.test(e)&&(i=(n=ht.exec(e))[1],it.test(i)&&(e=i,gt.test(e)?e+="e":pt.test(e)?e=Ge(e,mt,""):Ze.test(e)&&(e+="e"))),at.test(e)&&(i=(n=at.exec(e))[1],it.test(i)&&(e=i+"i")),rt.test(e)&&(i=(n=rt.exec(e))[1],s=n[2],et.test(i)&&(e=i+Ue[s])),dt.test(e)&&(i=(n=dt.exec(e))[1],s=n[2],et.test(i)&&(e=i+qe[s])),vt.test(e)?(i=(n=vt.exec(e))[1],st.test(i)&&(e=i)):ut.test(e)&&(i=(n=ut.exec(e))[1]+n[2],st.test(i)&&(e=i)),wt.test(e)&&(i=(n=wt.exec(e))[1],(st.test(i)||tt.test(i)&&!Ze.test(i))&&(e=i)),Be(e,"ll")&&st.test(e)&&(e=Ge(e,mt,"")),"y"===t&&(e=t.toLowerCase()+e.substr(1))),e},ct=e,ft={};ct(ft,"expandContractions",U),ct(ft,"lda",ze),ct(ft,"ordinalize",Je),ct(ft,"porterStemmer",yt),ct(ft,"tokenize",$);var bt=ft;export{bt as default,U as expandContractions,ze as lda,Je as ordinalize,yt as porterStemmer,$ as tokenize};
//# sourceMappingURL=index.mjs.map
