// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uppercase@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-lowercase@v0.1.1-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import{isPrimitive as o}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-capitalized@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-uncapitalize@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-capitalize@v0.1.1-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/array-int32@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@v0.1.1-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import{isPrimitive as y}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-randu@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.1.1-esm/index.mjs";import{isPrimitive as x}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@v0.1.0-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@v0.1.0-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-ends-with@v0.1.1-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-lowercase@v0.2.1-esm/index.mjs";import I from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-replace@v0.1.1-esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-trim@v0.1.1-esm/index.mjs";var E={"i.e.":["i.e."],"I.e.":["I.e."],"I.E.":["I.E."],"e.g.":["e.g."],"E.g.":["E.g."],"E.G.":["E.G."],"et al.":["et al."],"etc.":["etc."],"vs.":["vs."],"A.S.A.P":["A.S.A.P"],"E.T.A.":["E.T.A."],"D.I.Y":["D.I.Y"],"R.S.V.P":["R.S.V.P"],"P.S.":["P.S."],"B.Y.O.B":["B.Y.O.B"],"Ms.":["Ms."],"Mr.":["Mr."],"Dr.":["Dr."],"Prof.":["Prof."],"Mrs.":["Mrs."],"Messrs.":["Messrs."],"Gov.":["Gov."],"Gen.":["Gen."],"Lt.":["Lt."],"Col.":["Col."],"Mt.":["Mt."],"Bros.":["Bros."],"Corp.":["Corp."],"Co.":["Co."],"co.":["co."],"Inc.":["Inc."],"Ltd.":["Ltd."],"Rep.":["Rep."],"Sen.":["Sen."],"Jr.":["Jr."],"Sr.":["Sr."],"Ph.D.":["Ph.D."],"J.D.":["J.D."],"M.D.":["M.D."],"Rev.":["Rev."],"Adm.":["Adm."],"St.":["St."],"a.m.":["a.m."],"p.m.":["p.m."],"b.c.":["b.c."],"B.C.":["B.C."],"a.d.":["a.d."],"A.D.":["A.D."],"b.c.e.":["b.c.e."],"B.C.E.":["B.C.E."],"Jan.":["Jan."],"Feb.":["Feb."],"Mar.":["Mar."],"Apr.":["Apr."],"May.":["May."],"Jun.":["Jun."],"Jul.":["Jul."],"Aug.":["Aug."],"Sep.":["Sep."],"Sept.":["Sept."],"Oct.":["Oct."],"Nov.":["Nov."],"Dec.":["Dec."],"Ala.":["Ala."],"Ariz.":["Ariz."],"Ark.":["Ark."],"Calif.":["Calif."],"Colo.":["Colo."],"Conn.":["Conn."],"Del.":["Del."],"D.C.":["D.C."],"Fla.":["Fla."],"Ga.":["Ga."],"Ill.":["Ill."],"Ind.":["Ind."],"Kans.":["Kans."],"Kan.":["Kan."],"Ky.":["Ky."],"La.":["La."],"Md.":["Md."],"Mass.":["Mass."],"Mich.":["Mich."],"Minn.":["Minn."],"Miss.":["Miss."],"Mo.":["Mo."],"Mont.":["Mont."],"Nebr.":["Nebr."],"Neb.":["Neb."],"Nev.":["Nev."],"N.H.":["N.H."],"N.J.":["N.J."],"N.M.":["N.M."],"N.Y.":["N.Y."],"N.C.":["N.C."],"N.D.":["N.D."],"Okla.":["Okla."],"Ore.":["Ore."],"Pa.":["Pa."],"Tenn.":["Tenn."],"Va.":["Va."],"Wash.":["Wash."],"Wis.":["Wis."]},M={"^_^":["^_^"],"=D":["=D"],";-p":[";-p"],":O":[":O"],":-/":[":-/"],xD:["xD"],V_V:["V_V"],";(":[";("],"(:":["(:"],'")':['")'],":Y":[":Y"],":]":[":]"],":3":[":3"],":(":[":("],":-)":[":-)"],"=3":["=3"],":))":[":))"],":>":[":>"],";p":[";p"],":p":[":p"],"=[[":["=[["],xDD:["xDD"],"<333":["<333"],"<33":["<33"],":P":[":P"],"o.O":["o.O"],"<3":["<3"],";-)":[";-)"],":)":[":)"],"-_-":["-_-"],":')":[":')"],o_O:["o_O"],";)":[";)"],"=]":["=]"],"(=":["(="],"-__-":["-__-"],":/":[":/"],":0":[":0"],"(^_^)":["(^_^)"],";D":[";D"],o_o:["o_o"],":((":[":(("],"=)":["=)"]},C={"'s":["'s"],"'S":["'S"],"ain't":["ai","n't"],aint:["ai","nt"],"Ain't":["Ai","n't"],"aren't":["are","n't"],arent:["are","nt"],"Aren't":["Are","n't"],"can't":["ca","n't"],cant:["ca","nt"],"Can't":["Ca","n't"],"can't've":["ca","n't","'ve"],"'cause":["'cause'"],cannot:["can","not"],Cannot:["Can","not"],"could've":["could","'ve"],couldve:["could","ve"],"Could've":["Could","'ve"],"couldn't":["could","n't"],couldnt:["could","nt"],"Couldn't":["Could","n't"],"couldn't've":["could","n't","'ve"],couldntve:["could","nt","ve"],"Couldn't've":["Could","n't","'ve"],"didn't":["did","n't"],didnt:["did","nt"],"Didn't":["Did","n't"],"doesn't":["does","n't"],doesnt:["does","nt"],"Doesn't":["Does","n't"],"don't":["do","n't"],dont:["do","nt"],"Don't":["Do","n't"],"hadn't":["had","n't"],hadnt:["had","nt"],"Hadn't":["Had","n't"],"hadn't've":["had","n't","'ve"],"hasn't":["has","n't"],hasnt:["has","nt"],"haven't":["have","n't"],havent:["have","nt"],"he'd":["he","'d"],hed:["he","d"],"he'd've":["he","'d","'ve"],hedve:["he","d","ve"],"he'll":["he","'ll"],"he'll've":["he","'ll","'ve"],"he's":["he","'s"],hes:["he","s"],"how'd":["how","'d"],howd:["how","d"],"how'd'y":["how","'d","'y"],"how'll":["how","'ll"],howll:["how","ll"],"how's":["how","'s"],hows:["how","s"],"I'd":["I","'d"],"I'd've":["I","'d","'ve"],"I'll":["I","'ll"],"i'll":["i","'ll"],"I'll've":["I","'ll","'ve"],"i'll've":["i","'ll","'ve"],"I'm":["I","'m"],"i'm":["i","'m"],Im:["I","m"],im:["i","m"],"I'ma":["I","'ma"],"i'ma":["i","'ma"],"I've":["I","'ve"],"i've":["i","'ve"],"isn't":["is","n't"],isnt:["is","nt"],"Isn't":["Is","n't"],"It'd":["It","'d"],"it'd":["it","'d"],"it'd've":["it","'d","'ve"],"it'll've":["it","'ll","'ve"],"it'll":["it","'ll"],itll:["it","ll"],"it's":["it","'s"],"let's":["let","'s"],lets:["let","s"],"ma'am":["ma'am"],"mayn't":["may","n't"],"mightn't":["might","n't"],"mightn't've":["might","n't","'ve"],"might've":["might","'ve"],"mustn't":["must","n't"],"mustn't've":["must","n't","'ve"],"must've":["must","'ve"],"needn't":["need","n't"],"needn't've":["need","n't","'ve"],"not've":["not","'ve"],"o'clock":["o'clock"],"oughtn't":["ought","n't"],"oughtn't've":["ought","n't","'ve"],"so've":["so","'ve"],"so's":["so","'s"],"shan't":["sha","n't"],"sha'n't":["sha'","n't"],"shan't've":["sha","n't","'ve"],"she'd":["she","'d"],"she'd've":["she","'d","'ve"],"she'll":["she","'ll"],"she'll've":["she","'ll","'ve"],"she's":["she","'s"],"should've":["should","'ve"],"shouldn't":["should","n't"],"shouldn't've":["should","n't","'ve"],"that'd":["that","'d"],"that'd've":["that","'d","'ve"],"that's":["that","'s"],thats:["that","s"],"there'd":["there","'d"],"there'd've":["there","'d","'ve"],"there's":["there","'s"],"they'd":["they","'d"],"They'd":["They","'d"],"they'd've":["they","'d","'ve"],"They'd've":["They","'d","'ve"],"they'll":["they","'ll"],"They'll":["They","'ll"],"they'll've":["they","'ll","'ve"],"They'll've":["They","'ll","'ve"],"they're":["they","'re"],"They're":["They","'re"],"they've":["they","'ve"],"They've":["They","'ve"],"to've":["to","'ve"],"wasn't":["was","n't"],"we'd":["we","'d"],"We'd":["We","'d"],"we'd've":["we","'d","'ve"],"we'll":["we","'ll"],"We'll":["We","'ll"],"we'll've":["we","'ll","'ve"],"We'll've":["We","'ll","'ve"],"we're":["we","'re"],"We're":["We","'re"],"we've":["we","'ve"],"We've":["We","'ve"],"weren't":["were","n't"],"what'll":["what","'ll"],"what'll've":["what","'ll","'ve"],"what're":["what","'re"],"what's":["what","'s"],"what've":["what","'ve"],"when's":["when","'s"],"when've":["when","'ve"],"where'd":["where","'d"],"where's":["where","'s"],"where've":["where","'ve"],"who'd":["who","'d"],"who'll":["who","'ll"],"who'll've":["who","'ll'","'ve'"],"who're":["who","'re"],"who's":["who","'s"],"who've":["who","'ve"],"why've":["why","'ve"],"why'll":["why","'ll"],"why're":["why","'re"],"why's":["why","'s"],"will've":["will","'ve"],"won't":["wo","n't"],wont:["wo","nt"],"won't've":["wo","n't","'ve"],"would've":["would","'ve"],"wouldn't":["would","n't"],"wouldn't've":["would","n't","'ve"],"y'all":["y'","all"],"y'all'd":["y'","all","'d"],"y'all'd've":["y'","all","'d","'ve"],"y'all're":["y'","all","'re'"],"y'all've":["y'","all","ve"],"you'd":["you","'d"],"You'd":["You","'d"],"you'd've":["you","'d","'ve"],"You'd've":["You","'d","'ve"],"you'll":["you","'ll"],"You'll":["You","'ll"],"you'll've":["you","'ll","'ve"],"You'll've":["You","'ll","'ve"],"you're":["you","'re"],"You're":["You","'re"],"you've":["you","'ve"],"You've":["You","'ve"]},z=/^([,([{*<"“'`‘]|\.{1,3})/gi,A=/([,.!?%*>:;"'”`)\]}]|\.\.\.)$/gi;function O(e,t){var s;for(s=0;s<t.length;s++)e.push(t[s]);return e}function V(e){var t,s,i,n=[],o=[];do{M[e]||E[e]||C[e]?s=!0:(t=e.split(z)).length>1?(n.push(t[1]),e=t[2]):(t=e.split(A)).length>1?(e=t[0],o.unshift(t[1])):s=!0}while(!s);return i=n,e&&i.push(e),"..."===o[o.length-1]&&(o.pop(),o.unshift("...")),O(i,o),i}function $(e,t){var s,i,h,r,d,u;if(!o(e))throw new TypeError(l("invalid argument. First argument must be a string. Value: `%s`.",e));if(arguments.length>1&&!n(t))throw new TypeError(l("invalid argument. Second argument must be a boolean. Value: `%s`.",t));if(!e)return[];for(i=t?e.split(/(\s+)/):e.split(/\s+/),d={},h=[],u=0;u<i.length;u++)r=i[u],a(d,r)?O(h,d[r]):(O(h,s=V(r)),d[r]=s);return h}var P={afaik:"as far as I know",afk:"away from keyboard",ama:"ask me anything",asap:"as soon as possible",b2b:"business to business",bbl:"be back later",bbs:"be back soon",bday:"birthday",brb:"be right back",btw:"by the way",cc:"carbon copy",cmon:"come on",cu:"see you",cya:"see you",cys:"check your settings",d2d:"direct to direct",dr:"doctor",e2e:"end to end",faq:"frequently asked question",fav:"favorite",favs:"favorites",ffs:"for f*ck's sake",foaf:"friend of a friend",ftw:"for the win",fyi:"for your information",g2g:"got to go",g2m:"got to meet you",gj:"good job",gm:"good morning",gmta:"great minds think alike",hth:"hope this helps",ianal:"I am not a lawyer",ianars:"I am not a rocket scientist",ic:"I see",icymi:"in case you missed it",idk:"i do not know",iirc:"if I recall correctly",ikr:"i know right",imho:"in my humble opinion",imnsho:"in my not so humble opinion",imo:"in my opinion",iow:"in other words",irl:"in real life",jj:"just joking",jk:"just kidding",jooc:"just out of curiosity",kk:"okay",l8:"late",l8r:"later",lmao:"laugh my a** off",lol:"laughing out loud",mfw:"my face when",myob:"mind your own business",nm:"never mind",noyb:"none of your business",np:"no problem",nvm:"never mind",oic:"oh, i see",omfg:"oh my f*cking god",omg:"oh my god",omw:"on my way",ooc:"out of character",oof:"out of focus",ot:"off topic",otoh:"on the other hand",p2p:"peer to peer",pfo:"please f*ck off",pita:"pain in the a**",plz:"please",pms:"personal messages",r8:"right",rofl:"rolling on the floor laughing",roflmao:"rolling on the floor laughing my a** off",rp:"reply",rps:"rock paper scissors",rpsls:"rock paper scissors lizard spock",rtfa:"read the f*cking article",rtfm:"read the f*cking manual",ru:"are you",s2s:"same to same",smh:"shake my head",tbh:"to be honest",thx:"thanks",tia:"thanks in advance",tldr:"too long did not read",ttyl:"talk to you later",wtf:"what the f*ck",wtg:"way to go",wtgp:"way to go pal",ymmv:"your mileage may vary"},N=t(P);function W(e){var t,n,a,h,r,d;if(!o(e))throw new TypeError(l("invalid argument. Must provide a string. Value: `%s`.",e));for(a="",t=$(e,!0),r=0;r<t.length;r++){if(n=t[r],s(n)){for(d=0;d<N.length;d++)if(h=N[d],i(n)===h){n=P[h];break}}else for(d=0;d<N.length;d++)if(n===(h=N[d])){n=P[h];break}a+=n}return a}var Y={"'s":"is","'S":"Is","aren't":"are not",arent:"are not","can't":"can not",cant:"can not","can't've":"can not have","'cause":"because",cannot:"can not","could've":"could have",couldve:"could have","couldn't":"could not",couldnt:"could not","couldn't've":"could not have",couldntve:"could not have","didn't":"did not",didnt:"did not","doesn't":"does not",doesnt:"does not","don't":"do not",dont:"do not","hadn't":"had not",hadnt:"had not","hadn't've":"had not have","hasn't":"has not",hasnt:"has not","haven't":"have not",havent:"have not","he'd":"he would",hed:"he would","he'd've":"he would have",hedve:"he would have","he'll":"he will","he'll've":"he will have","he's":"he is",hes:"he is","how'd":"how did",howd:"how did","how'd'y":"how did you","how'll":"how will",howll:"how will","how's":"how is",hows:"how is","i'd":"i would","i'd've":"i would have","i'll":"i will","i'll've":"i will have","i'm":"i am",im:"i am","i'ma":"i am going to","i've":"i have","isn't":"is not",isnt:"is not","it'd":"it would","it'd've":"it would have","it'll've":"it will have","it'll":"it will",itll:"it will","it's":"it is","let's":"let us",lets:"let us","ma'am":"madam","mayn't":"may not","mightn't":"it might not","mightn't've":"might not have","might've":"might have","mustn't":"must not","mustn't've":"must not have","must've":"must have","needn't":"need not","needn't've":"need not have","not've":"not have","oughtn't":"ought not","oughtn't've":"ought not to have","so've":"so have","so's":"so is","shan't":"shall not","sha'n't":"shall not","shan't've":"shall not have","she'd":"she would","she'd've":"she would have","she'll":"she will","she'll've":"she will have","she's":"she is","should've":"should have","shouldn't":"should not","shouldn't've":"should not have","that'd":"that would","that'd've":"that would have","that's":"that is",thats:"that is","there'd":"there would","there'd've":"there would have","there's":"there is","they'd":"they would","they'd've":"they would have","they'll":"they will","they'll've":"they will have","they're":"they are","they've":"they have","to've":"to have","wasn't":"was not","we'd":"we would","we'd've":"we would have","we'll":"we will","we'll've":"we will have","we're":"we are","we've":"we have","weren't":"were not","what'll":"what will","what'll've":"what will have","what're":"what are","what's":"what has/is","what've":"what have","when's":"when is","when've":"when have","where'd":"where would","where's":"where is","where've":"where have","who'd":"who would","who'll":"who will","who'll've":"who will have","who're":"who are","who's":"who is","who've":"who have","why've":"why have","why'll":"why will","why're":"why are","why's":"why is","will've":"will have","won't":"will not",wont:"will not","won't've":"will not have","would've":"would have","wouldn't":"would not","wouldn't've":"would not have","y'all":"you all","y'all'd":"you all would","y'all'd've":"you all would have","y'all're":"you all are","y'all've":"you all have","you'd":"you would","you'd've":"you would have","you'll":"you will","you'll've":"you will have","you're":"you are","you've":"you have"},K=t(Y);function _(e){var t,s,i,n,a,u;if(!o(e))throw new TypeError(l("invalid argument. Must provide a string. Value: `%s`.",e));for(i="",t=$(e,!0),a=0;a<t.length;a++){if(s=t[a],h(s)){for(u=0;u<K.length;u++)if(n=K[u],r(s)===n){s=d(Y[n]);break}}else for(u=0;u<K.length;u++)if(s===(n=K[u])){s=Y[n];break}i+=s}return i}function L(){var e,t,s,i,n,o,a;for(1===arguments.length?s=arguments[0]:2===arguments.length&&(s=arguments[0],e=arguments[1]),t=s.length,n=1,a=0;a<t;a++)n*=s[a];return i="int32"===e?new g(n):new p(n),(o={}).dtype=e,o.shape=s,o.strides=[s[1],1],o.offset=0,o.ndims=s.length,o.length=i.length,o.nbytes=i.byteLength,o.data=i,c(o,"get",l),c(o,"set",h),o;function l(e,t){var s=this.offset+e*this.strides[0]+t*this.strides[1];return this.data[s]}function h(e,t,s){return(e=this.offset+e*this.strides[0]+t*this.strides[1])>=0&&(this.data[e]=s),this}}function J(){var e,t,s,i;for(e=L([this.D,this.K]),s=0;s<this.D;s++)for(i=0;i<this.K;i++)t=(this.nd.get(s,i)+this.alpha)/(this.ndSum[s]+this.K*this.alpha),e.set(s,i,t);return e}function R(e,t){return f(t)?a(t,"alpha")&&(e.alpha=t.alpha,!y(e.alpha))?new TypeError(l("invalid option. `%s` option must be a positive number. Option: `%s`.","alpha",e.alpha)):a(t,"beta")&&(e.beta=t.beta,!y(e.beta))?new TypeError(l("invalid option. `%s` option must be a positive number. Option: `%s`.","beta",e.beta)):null:new TypeError(l("invalid argument. Options argument must be an object. Value: `%s`.",t))}function B(){var e,t,s,i;for(e=L([this.K,this.W]),s=0;s<this.K;s++)for(i=0;i<this.W;i++)t=(this.nw.get(i,s)+this.beta)/(this.nwSum[s]+this.W*this.beta),e.set(s,i,t);return e}function F(){var e,t,s,i,n,o;for(this.z=[],n=0;n<this.D;n++){for(this.z.push([]),s=this.w[n].length,o=0;o<s;o++)t=j(b()*this.K),this.z[n].push(t);for(this.ndSum[n]=s,o=0;o<s;o++)i=this.w[n][o],e=this.z[n][o],this.nw.set(i,e,this.nw.get(i,e)+1),this.nd.set(n,e,this.nd.get(n,e)+1),this.nwSum[e]=this.nwSum[e]+1}}function G(e,t,s){var i,n,o,a,l,h,r,d;for(h=L([o=e.shape[0],a=e.shape[1]]),i=(s-1)/s,n=1/s,r=0;r<o;r++)for(d=0;d<a;d++)l=i*e.get(r,d)+n*t.get(r,d),h.set(r,d,l);return h}function H(e,t,s){var i,n,o,a,h,r,d,u,w,m,g,p,c,y;if(!v(e))throw new TypeError(l("invalid argument. First argument must be a positive integer. Value: `%s`.",e));if(!v(t))throw new TypeError(l("invalid argument. Second argument must be a positive integer. Value: `%s`.",t));if(!v(s))throw new TypeError(l("invalid argument. Third argument must be a positive integer. Value: `%s`.",s));for(n=this.W*this.beta,i=this.K*this.alpha,g=0;g<e;g++){for(m=0;m<this.D;m++)for(y=0;y<this.ndSum[m];y++){for(r=this.w[m][y],o=this.z[m][y],this.nw.set(r,o,this.nw.get(r,o)-1),this.nd.set(m,o,this.nd.get(m,o)-1),this.ndSum[m]-=1,this.nwSum[o]-=1,h=[],p=0;p<this.K;p++)h.push((this.nw.get(r,p)+this.beta)/(this.nwSum[p]+n)*(this.nd.get(m,p)+this.alpha)/(this.ndSum[m]+i));for(p=1;p<this.K;p++)h[p]+=h[p-1];for(c=h[this.K-1]*b(),o=0,w=0;w<this.K;w++)if(h[w]>c){o=w;break}this.nw.set(r,o,this.nw.get(r,o)+1),this.nd.set(m,o,this.nd.get(m,o)+1),this.nwSum[o]+=1,this.ndSum[m]+=1,this.z[m][y]=o}g%s==0&&g>t&&(d=this.getPhis(),a=this.getThetas(),this.phiList.push(d),this.thetaList.push(a),u=this.phiList.length,this.avgPhi=1===u?d:G(this.avgPhi,d,u),u=this.thetaList.length,this.avgTheta=1===u?a:G(this.avgTheta,a,u))}}function q(e,t){var s;for(s=0;s<e.length;s++)if(e[s]===t)return s;return-1}function Z(t,s,i){var n,o,a,h,r,d,p,c,y,f,b,j,x,k,T,D,I;if(!w(t))throw new TypeError(l("invalid argument. First argument must be an array of strings. Value: `%s`.",t));if(!v(s))throw new TypeError(l("invalid argument. Number of topics must be a positive integer. Value: `%s`.",s));if(d={},arguments.length>2&&(p=R(d,i)))throw p;for(j=t.length,h=d.alpha||50/s,r=d.beta||.1,o=[],I=[],c=0,x=0;x<j;x++)for(I.push([]),y=(b=$(t[x])).length,k=0;k<y;k++)n=b[k],-1===(f=q(o,n))?(o.push(n),I[x].push(c),c+=1):I[x].push(f);return D=o.length,e(a={},"K",s),e(a,"D",j),e(a,"W",D),e(a,"alpha",h),e(a,"beta",r),e(a,"init",F),e(a,"fit",H),e(a,"getPhis",B),e(a,"getThetas",J),e(a,"getTerms",S),a.nwSum=new g(s),a.ndSum=new g(j),a.nw=L([D,s],"int32"),a.nd=L([j,s],"int32"),a.phiList=[],a.thetaList=[],a.w=I,a.init(),a;function S(e,t){var i,n,a,h,r,d;if(!u(e)||e>=s)throw new TypeError(l("invalid argument. First argument must be a nonnegative integer which is less than the total number of topics. Value: `%s`.",e));if(t){if(!v(t))throw new TypeError(l("invalid argument. Second argument must be a positive integer. Value: `%s`.",t))}else t=10;for(a=[],i=[],d=0;d<t;d++){for(h=0,T=0;T<this.W;T++)(n=this.avgPhi.get(e,T))>h&&!m(i,T)&&(h=n,r=T);i.push(r),a.push({word:o[r],prob:h})}return a}}var U=["en","es","fin","fr","de","it","pt","swe"],Q=["masculine","feminine"];function X(e,t){return f(t)?a(t,"lang")&&(e.lang=t.lang,-1===k(U,e.lang))?new TypeError(l('invalid option. `%s` option must be one of the following: "%s". Value: `%s`.',"lang",U.join('", "'),e.lang)):a(t,"suffixOnly")&&(e.suffixOnly=t.suffixOnly,!n(e.suffixOnly))?new TypeError(l("invalid option. `%s` option must be a boolean. Option: `%s`.","suffixOnly",e.suffixOnly)):a(t,"gender")&&(e.gender=t.gender,-1===k(Q,e.gender))?new TypeError(l('invalid option. `%s` option must be one of the following: "%s". Value: `%s`.',"gender",Q.join('", "'),e.gender)):null:new TypeError(l("invalid argument. Options argument must be an object. Value: `%s`.",t))}function ee(e,t){var s,i,n,a,h;if(!o(e)&&!x(e))throw new TypeError(l("invalid argument. First argument must be a string or integer. Value: `%s`.",e));if(a={},arguments.length>1&&(h=X(a,t)))throw h;switch(n=(e=String(e))[e.length-1],i=e.slice(-2),a.lang){case"fr":s="1"===e?"feminine"===a.gender?"re":"er":"e";break;case"de":case"fin":s=".";break;case"it":case"pt":case"es":s="feminine"===a.gender?"ª":"º";break;case"swe":s="11"!==i&&"1"===n||"12"!==i&&"2"===n?":a":":e";break;default:s="11"!==i&&"1"===n?"st":"12"!==i&&"2"===n?"nd":"13"!==i&&"3"===n?"rd":"th"}return a.suffixOnly?s:e+s}var te={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},se={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},ie="[aeiouy]",ne="[^aeiou][^aeiouy]*",oe=new RegExp("^"+ne+ie+"[^aeiouwxy]$"),ae=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),le=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$"),he=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),re=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy]"),de=/^(.+?)(ss|i)es$/,ue=/^(.+?)([^s])s$/,ve=/^(.+?)eed$/,we=/^(.+?)(ed|ing)$/,me=/^(.+?)y$/,ge=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,pe=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,ce=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,ye=/^(.+?)(s|t)(ion)$/,fe=/^(.+?)e$/,be=/.$/,je=/(at|bl|iz)$/,xe=new RegExp("([^aeiouylsz])\\1$");function ke(e){var t,s,i,n;if(!o(e))throw new TypeError(l("invalid argument. First argument must be a string. Value: `%s`.",e));return e.length<3||("y"===(t=(e=D(e))[0])&&(e=t.toUpperCase()+e.substr(1)),de.test(e)?e=I(e,de,"$1$2"):ue.test(e)&&(e=I(e,ue,"$1$2")),ve.test(e)?(n=ve.exec(e),ae.test(n[1])&&(e=I(e,be,""))):we.test(e)&&(i=(n=we.exec(e))[1],re.test(i)&&(e=i,je.test(e)?e+="e":xe.test(e)?e=I(e,be,""):oe.test(e)&&(e+="e"))),me.test(e)&&(i=(n=me.exec(e))[1],re.test(i)&&(e=i+"i")),ge.test(e)&&(i=(n=ge.exec(e))[1],s=n[2],ae.test(i)&&(e=i+te[s])),pe.test(e)&&(i=(n=pe.exec(e))[1],s=n[2],ae.test(i)&&(e=i+se[s])),ce.test(e)?(i=(n=ce.exec(e))[1],he.test(i)&&(e=i)):ye.test(e)&&(i=(n=ye.exec(e))[1]+n[2],he.test(i)&&(e=i)),fe.test(e)&&(i=(n=fe.exec(e))[1],(he.test(i)||le.test(i)&&!oe.test(i))&&(e=i)),T(e,"ll",e.length)&&he.test(e)&&(e=I(e,be,"")),"y"===t&&(e=t.toLowerCase()+e.substr(1))),e}var Te=/^[A-Z][a-z]{0,4}$/,De=/^([A-Z]\.)*[A-Z]$/,Ie=/^[0-9]$/,Se=/^[{[(<:;"'”`]/,Ee=/[})\]>:;"'”`]$/;function Me(e,t){var s,i=t-1,n=t+1;return!("."!==(s=e[t])||Te.test(e[i])||De.test(e[i])||Ie.test(e[i])||Se.test(e[i])||Ee.test(e[n]))||(!("!"!==s&&"?"!==s||Se.test(e[i])||Ee.test(e[n]))||!(!Ee.test(s)||"."!==e[i]&&"!"!==e[i]&&"?"!==e[i]))}function Ce(e){var t,s,i,n;if(!o(e))throw new TypeError("invalid argument. Must provide a string. Value: `"+e+"`.");for(s=$(e,!0),t="",i=[],n=0;n<s.length;n++)t+=s[n],Me(s,n)&&(i.push(S(t)),t="");return""!==t&&i.push(S(t)),i}var ze={};e(ze,"expandAcronyms",W),e(ze,"expandContractions",_),e(ze,"lda",Z),e(ze,"ordinalize",ee),e(ze,"porterStemmer",ke),e(ze,"sentencize",Ce),e(ze,"tokenize",$);export{ze as default,W as expandAcronyms,_ as expandContractions,Z as lda,ee as ordinalize,ke as porterStemmer,Ce as sentencize,$ as tokenize};
//# sourceMappingURL=index.mjs.map
