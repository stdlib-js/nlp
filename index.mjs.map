{"version":3,"file":"index.mjs","sources":["../tokenize/lib/main.js","../expand-acronyms/lib/main.js","../expand-contractions/lib/main.js","../lda/lib/matrix.js","../lda/lib/get_thetas.js","../lda/lib/get_phis.js","../lda/lib/init.js","../lda/lib/avg_matrix.js","../lda/lib/fit.js","../lda/lib/main.js","../lda/lib/validate.js","../ordinalize/lib/validate.js","../ordinalize/lib/main.js","../porter-stemmer/lib/main.js","../sentencize/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\nimport ABBRS from './abbreviations.json';\nimport EMOJIS from './emojis.json';\nimport CONTRACT from './contractions.json';\n\n\n// VARIABLES //\n\nvar REGEXP_PREFIXES = /^([,([{*<\"“'`‘]|\\.{1,3})/gi;\nvar REGEXP_SUFFIXES = /([,.!?%*>:;\"'”`)\\]}]|\\.\\.\\.)$/gi;\n\n\n// FUNCTIONS //\n\n/**\n* Extends an array by the elements of another array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} ext - array to extend `arr` with\n* @returns {Array} mutated input array\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* var out = extend( arr, [ 4, 5 ] );\n* // returns [ 1, 2, 3, 4, 5 ]\n*/\nfunction extend( arr, ext ) {\n\tvar i;\n\tfor ( i = 0; i < ext.length; i++ ) {\n\t\tarr.push( ext[ i ] );\n\t}\n\treturn arr;\n}\n\n/**\n* Tokenizes a substring.\n*\n* @private\n* @param {string} substr - input string\n* @returns {Array} token array\n*\n* @example\n* var str = '(never)';\n* var out = tokenizeSubstring( str );\n* // returns [ '(', 'never', ')' ]\n*/\nfunction tokenizeSubstring( substr ) {\n\tvar prefixes = [];\n\tvar suffixes = [];\n\tvar match;\n\tvar done;\n\tvar res;\n\n\tdo {\n\t\tif (\n\t\t\t!EMOJIS[ substr ] &&\n\t\t\t!ABBRS[ substr ] &&\n\t\t\t!CONTRACT[ substr ]\n\t\t) {\n\t\t\tmatch = substr.split( REGEXP_PREFIXES );\n\t\t\tif ( match.length > 1 ) {\n\t\t\t\tprefixes.push( match[ 1 ] );\n\t\t\t\tsubstr = match[ 2 ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmatch = substr.split( REGEXP_SUFFIXES );\n\t\t\t\tif ( match.length > 1 ) {\n\t\t\t\t\tsubstr = match[ 0 ];\n\t\t\t\t\tsuffixes.unshift( match[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone = true;\n\t\t}\n\t} while ( !done );\n\n\tres = prefixes;\n\tif ( substr ) {\n\t\tres.push( substr );\n\t}\n\n\t// If the last suffix is an ellipsis, move it to the front of the suffix array:\n\tif ( suffixes[ suffixes.length-1 ] === '...' ) {\n\t\tsuffixes.pop();\n\t\tsuffixes.unshift( '...' );\n\t}\n\textend( res, suffixes );\n\treturn res;\n}\n\n\n// MAIN //\n\n/**\n* Tokenize a string.\n*\n* @param {string} str - input string\n* @param {boolean} [keepWhitespace=false] - boolean indicating whether whitespace characters should be returned as part of the token array\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a boolean\n* @returns {Array} array of tokens\n*\n* @example\n* var str = 'Hello World!';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*\n* @example\n* var str = '';\n* var out = tokenize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*/\nfunction tokenize( str, keepWhitespace ) {\n\tvar subtkns;\n\tvar substrs;\n\tvar tokens;\n\tvar substr;\n\tvar cache;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isBoolean( keepWhitespace ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', keepWhitespace ) );\n\t\t}\n\t}\n\tif ( !str ) {\n\t\treturn [];\n\t}\n\n\t// Split on whitespace:\n\tif ( keepWhitespace ) {\n\t\tsubstrs = str.split( /(\\s+)/ );\n\t} else {\n\t\tsubstrs = str.split( /\\s+/ );\n\t}\n\n\t// Set up cache to hold tokens for substring matches:\n\tcache = {};\n\n\t// Initialize token array:\n\ttokens = [];\n\n\tfor ( i = 0; i < substrs.length; i++ ) {\n\t\tsubstr = substrs[ i ];\n\t\tif ( hasOwnProp( cache, substr ) ) {\n\t\t\textend( tokens, cache[ substr ] );\n\t\t}\n\t\telse {\n\t\t\tsubtkns = tokenizeSubstring( substr );\n\t\t\textend( tokens, subtkns );\n\t\t\tcache[ substr ] = subtkns;\n\t\t}\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default tokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport isUppercase from '@stdlib/assert/is-uppercase';\nimport lowercase from '@stdlib/string/lowercase';\nimport tokenize from './../../tokenize';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\nimport ACRONYMS from './acronyms.json';\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( ACRONYMS );\n\n\n// MAIN //\n\n/**\n* Expands acronyms in a string.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} string with expanded acronyms\n*\n* @example\n* var str = 'LOL, this is fun. I am ROFL.';\n* var out = expandAcronyms( str );\n* // returns 'laughing out loud, this is fun. I am rolling on the floor laughing.'\n*\n* @example\n* var str = 'brb, I need to check my mail. thx!';\n* var out = expandAcronyms( str );\n* // returns 'be right back, I need to check my mail. thanks!'\n*/\nfunction expandAcronyms( str ) {\n\tvar tokens;\n\tvar token;\n\tvar out;\n\tvar key;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tout = '';\n\ttokens = tokenize( str, true );\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isUppercase( token ) ) {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( lowercase( token ) === key ) {\n\t\t\t\t\ttoken = ACRONYMS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( token === key ) {\n\t\t\t\t\ttoken = ACRONYMS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout += token;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default expandAcronyms;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport isCapitalized from '@stdlib/assert/is-capitalized';\nimport uncapitalize from '@stdlib/string/uncapitalize';\nimport capitalize from '@stdlib/string/capitalize';\nimport tokenize from './../../tokenize';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\nimport CONTRACTIONS from './contractions.json';\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( CONTRACTIONS );\n\n\n// MAIN //\n\n/**\n* Expands all contractions to their formal equivalents.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} string with expanded contractions\n*\n* @example\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* @example\n* var str = 'It oughtn\\'t to be my fault, because, you know, I didn\\'t know';\n* var out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\nfunction expandContractions( str ) {\n\tvar tokens;\n\tvar token;\n\tvar out;\n\tvar key;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tout = '';\n\ttokens = tokenize( str, true );\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isCapitalized( token ) ) {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( uncapitalize( token ) === key ) {\n\t\t\t\t\ttoken = capitalize( CONTRACTIONS[ key ] );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( token === key ) {\n\t\t\t\t\ttoken = CONTRACTIONS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout += token;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default expandContractions;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int32Array from '@stdlib/array/int32';\nimport Float64Array from '@stdlib/array/float64';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\n\n\n// MAIN //\n\n/**\n* Returns a Matrix instance.\n*\n* @private\n* @constructor\n* @param {NumberArray} shape - matrix dimensions/shape\n* @param {string} [dtype=\"float64\"] - matrix data type\n* @returns {Matrix} Matrix instance\n*/\nfunction matrix() {\n\tvar dtype;\n\tvar ndims;\n\tvar shape;\n\tvar data;\n\tvar len;\n\tvar mat;\n\tvar i;\n\n\tif ( arguments.length === 1 ) {\n\t\tshape = arguments[ 0 ];\n\t}\n\telse if ( arguments.length === 2 ) {\n\t\tshape = arguments[ 0 ];\n\t\tdtype = arguments[ 1 ];\n\t}\n\tndims = shape.length;\n\tlen = 1;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tlen *= shape[ i ];\n\t}\n\t// Initialize a zero-filled typed array...\n\tif ( dtype === 'int32' ) {\n\t\tdata = new Int32Array( len );\n\t}\n\telse {\n\t\tdata = new Float64Array( len );\n\t}\n\n\t// Return a new Matrix instance:\n\tmat = {};\n\tmat.dtype = dtype;\n\tmat.shape = shape;\n\tmat.strides = [ shape[1], 1 ];\n\tmat.offset = 0;\n\tmat.ndims = shape.length;\n\tmat.length = data.length;\n\tmat.nbytes = data.byteLength;\n\tmat.data = data;\n\n\tsetReadOnly( mat, 'get', get );\n\tsetReadOnly( mat, 'set', set );\n\treturn mat;\n\n\t/**\n\t* Returns a matrix element based on the provided row and column indices.\n\t*\n\t* @private\n\t* @param {integer} i - row index\n\t* @param {integer} j - column index\n\t* @returns {(number|undefined)} matrix element\n\t*/\n\tfunction get( i, j ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tvar idx = this.offset + ( i*this.strides[0] ) + ( j*this.strides[1] );\n\t\treturn this.data[ idx ];\n\t}\n\n\t/**\n\t* Sets a matrix element based on the provided row and column indices.\n\t*\n\t* @private\n\t* @param {integer} i - row index\n\t* @param {integer} j - column index\n\t* @param {number} v - value to set\n\t* @returns {Matrix} Matrix instance\n\t*/\n\tfunction set( i, j, v ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\ti = this.offset + ( i*this.strides[0] ) + ( j*this.strides[1] );\n\t\tif ( i >= 0 ) {\n\t\t\tthis.data[ i ] = v;\n\t\t}\n\t\treturn this;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default matrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport matrix from './matrix.js';\n\n\n// MAIN //\n\n/**\n* Get theta matrix. Its rows correspond to document distributions over topics.\n*\n* @private\n* @returns {Matrix} theta parameter matrix\n*/\nfunction getThetas() {\n\t/* eslint-disable no-invalid-this */\n\tvar Theta;\n\tvar val;\n\tvar d;\n\tvar k;\n\n\tTheta = matrix( [ this.D, this.K ] );\n\tfor ( d = 0; d < this.D; d++ ) {\n\t\tfor ( k = 0; k < this.K; k++ ) {\n\t\t\tval = ( this.nd.get( d, k ) + this.alpha ) /\n\t\t\t\t( this.ndSum[ d ] + ( this.K*this.alpha ) );\n\t\t\tTheta.set( d, k, val );\n\t\t}\n\t}\n\treturn Theta;\n}\n\n\n// EXPORTS //\n\nexport default getThetas;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport matrix from './matrix.js';\n\n\n// MAIN //\n\n/**\n* Get the phi matrix. Each row is a topic distribution over words.\n*\n* @private\n* @returns {Matrix} phi parameter matrix\n*/\nfunction getPhis() {\n\t/* eslint-disable no-invalid-this */\n\tvar Phi;\n\tvar val;\n\tvar k;\n\tvar w;\n\n\tPhi = matrix( [ this.K, this.W ] );\n\tfor ( k = 0; k < this.K; k++ ) {\n\t\tfor ( w = 0; w < this.W; w++ ) {\n\t\t\tval = ( this.nw.get( w, k ) + this.beta ) /\n\t\t\t\t( this.nwSum[ k ] + ( this.W*this.beta ) );\n\t\t\tPhi.set( k, w, val );\n\t\t}\n\t}\n\treturn Phi;\n}\n\n\n// EXPORTS //\n\nexport default getPhis;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport randu from '@stdlib/random/base/randu';\nimport floor from '@stdlib/math/base/special/floor';\n\n\n// MAIN //\n\n/**\n* Randomly assign topics to words and keep track of the counts.\n*\n* @private\n*/\nfunction init() {\n\t/* eslint-disable no-invalid-this */\n\tvar topic;\n\tvar newz;\n\tvar len;\n\tvar wt;\n\tvar d;\n\tvar i;\n\n\tthis.z = [];\n\tfor ( d = 0; d < this.D; d++ ) {\n\t\tthis.z.push( [] );\n\t\tlen = this.w[ d ].length;\n\n\t\t// Initialize random topics...\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tnewz = floor( randu() * this.K );\n\t\t\tthis.z[ d ].push( newz );\n\t\t}\n\t\tthis.ndSum[ d ] = len;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\twt = this.w[ d ][ i ];\n\t\t\ttopic = this.z[ d ][ i ];\n\n\t\t\t// Number of instances of word i assigned to topic j:\n\t\t\tthis.nw.set( wt, topic, this.nw.get( wt, topic ) + 1 );\n\n\t\t\t// Number of words in document i assigned to topic j:\n\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) + 1 );\n\n\t\t\t// Total number of words assigned to topic j:\n\t\t\tthis.nwSum[ topic ] = this.nwSum[ topic ] + 1;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default init;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport matrix from './matrix.js';\n\n\n// MAIN //\n\n/**\n* Calculate weighted average of two matrices.\n*\n* @private\n* @param {Matrix} A - first matrix\n* @param {Matrix} B - second matrix\n* @param {PositiveInteger} weight - relative weight of matrix A\n* @returns {Matrix} averaged matrix\n*/\nfunction avgMatrix( A, B, weight ) {\n\tvar propA;\n\tvar propB;\n\tvar nrow;\n\tvar ncol;\n\tvar val;\n\tvar C;\n\tvar i;\n\tvar j;\n\n\tnrow = A.shape[ 0 ];\n\tncol = A.shape[ 1 ];\n\tC = matrix( [ nrow, ncol ] );\n\tpropA = ( weight - 1.0 ) / weight;\n\tpropB = 1.0 / weight;\n\n\tfor ( i = 0; i < nrow; i++ ) {\n\t\tfor ( j = 0; j < ncol; j++ ) {\n\t\t\tval = (propA * A.get(i, j)) + (propB * B.get(i, j));\n\t\t\tC.set( i, j, val );\n\t\t}\n\t}\n\treturn C;\n}\n\n\n// EXPORTS //\n\nexport default avgMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveInteger from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\nimport randu from '@stdlib/random/base/randu';\nimport avgMatrix from './avg_matrix.js';\n\n\n// MAIN //\n\n/**\n* Fit model using collapsed Gibbs sampling.\n*\n* @private\n* @param {PositiveInteger} iter - number of sampling iterations\n* @param {PositiveInteger} burnin - number of estimates to be thrown away at beginning\n* @param {PositiveInteger} thin - number of discarded in-between iterations\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a positive integer\n*/\nfunction fit( iter, burnin, thin ) {\n\t/* eslint-disable no-invalid-this */\n\tvar kalpha;\n\tvar wbeta;\n\tvar topic;\n\tvar theta;\n\tvar prob;\n\tvar word;\n\tvar phi;\n\tvar len;\n\tvar nt;\n\tvar d;\n\tvar i;\n\tvar j;\n\tvar u;\n\tvar w;\n\n\tif ( !isPositiveInteger( iter ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', iter ) );\n\t}\n\tif ( !isPositiveInteger( burnin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', burnin ) );\n\t}\n\tif ( !isPositiveInteger( thin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a positive integer. Value: `%s`.', thin ) );\n\t}\n\n\twbeta = this.W * this.beta;\n\tkalpha = this.K * this.alpha;\n\n\tfor ( i = 0; i < iter; i++ ) {\n\t\tfor ( d = 0; d < this.D; d++ ) {\n\t\t\tfor ( w = 0; w < this.ndSum[ d ]; w++ ) {\n\t\t\t\tword = this.w[ d ][ w ];\n\t\t\t\ttopic = this.z[ d ][ w ];\n\n\t\t\t\tthis.nw.set( word, topic, this.nw.get( word, topic ) - 1 );\n\t\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) - 1 );\n\t\t\t\tthis.ndSum[ d ] -= 1;\n\t\t\t\tthis.nwSum[ topic ] -= 1;\n\n\t\t\t\tprob = [];\n\t\t\t\tfor ( j = 0; j < this.K; j++ ) {\n\t\t\t\t\tprob.push( ( this.nw.get( word, j ) + this.beta ) /\n\t\t\t\t\t\t( this.nwSum[ j ] + wbeta ) *\n\t\t\t\t\t\t( this.nd.get( d, j ) + this.alpha ) /\n\t\t\t\t\t\t( this.ndSum[ d ] + kalpha ) );\n\t\t\t\t}\n\t\t\t\tfor ( j = 1; j < this.K; j++ ) {\n\t\t\t\t\tprob[ j ] += prob[ j - 1 ];\n\t\t\t\t}\n\t\t\t\tu = prob[ this.K - 1 ] * randu();\n\t\t\t\ttopic = 0;\n\t\t\t\tfor ( nt = 0; nt < this.K; nt++ ) {\n\t\t\t\t\tif ( prob[ nt ] > u ) {\n\t\t\t\t\t\ttopic = nt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Assign new z_i to counts...\n\t\t\t\tthis.nw.set( word, topic, this.nw.get( word, topic ) + 1 );\n\t\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) + 1 );\n\t\t\t\tthis.nwSum[ topic ] += 1;\n\t\t\t\tthis.ndSum[ d ] += 1;\n\n\t\t\t\tthis.z[ d ][ w ] = topic;\n\t\t\t}\n\t\t}\n\n\t\tif ( i % thin === 0 && i > burnin ) {\n\t\t\tphi = this.getPhis();\n\t\t\ttheta = this.getThetas();\n\n\t\t\tthis.phiList.push( phi );\n\t\t\tthis.thetaList.push( theta );\n\n\t\t\tlen = this.phiList.length;\n\t\t\tif ( len === 1 ) {\n\t\t\t\tthis.avgPhi = phi;\n\t\t\t} else {\n\t\t\t\tthis.avgPhi = avgMatrix( this.avgPhi, phi, len );\n\t\t\t}\n\t\t\tlen = this.thetaList.length;\n\t\t\tif ( len === 1 ) {\n\t\t\t\tthis.avgTheta = theta;\n\t\t\t} else {\n\t\t\t\tthis.avgTheta = avgMatrix( this.avgTheta, theta, len );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default fit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNonNegativeInteger from '@stdlib/assert/is-nonnegative-integer';\nimport isPositiveInteger from '@stdlib/assert/is-positive-integer';\nimport isStringArray from '@stdlib/assert/is-string-array';\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\nimport contains from '@stdlib/assert/contains';\nimport tokenize from './../../tokenize';\nimport Int32Array from '@stdlib/array/int32';\nimport format from '@stdlib/string/format';\nimport matrix from './matrix.js';\nimport getThetas from './get_thetas.js';\nimport validate from './validate.js';\nimport getPhis from './get_phis.js';\nimport init from './init.js';\nimport fit from './fit.js';\n\n\n// FUNCTIONS //\n\n/**\n* Find index of the value in vocabulary equal to the supplied search value.\n*\n* @private\n* @param {Array} vocab - vocabulary\n* @param {string} searchVal - search value\n* @returns {integer} index in vocab if search value is found, -1 otherwise\n*/\nfunction findIndex( vocab, searchVal ) {\n\tvar i;\n\tfor ( i = 0; i < vocab.length; i++ ) {\n\t\tif ( vocab[ i ] === searchVal ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// MAIN //\n\n/**\n* Latent Dirichlet Allocation via collapsed Gibbs sampling.\n*\n* @param {StringArray} documents - document corpus\n* @param {PositiveInteger} K - number of topics\n* @param {Options} [options] - options object\n* @param {PositiveNumber} [options.alpha=50/K] - Dirichlet hyper-parameter of topic vector theta:\n* @param {PositiveNumber} [options.beta=0.1] - Dirichlet hyper-parameter for word vector phi\n* @throws {TypeError} first argument must be an array of strings\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} must provide valid options\n* @returns {Object} model object\n*/\nfunction lda( documents, K, options ) {\n\tvar target;\n\tvar vocab;\n\tvar model;\n\tvar alpha;\n\tvar beta;\n\tvar opts;\n\tvar err;\n\tvar pos;\n\tvar nd;\n\tvar it;\n\tvar wd;\n\tvar D;\n\tvar d;\n\tvar i;\n\tvar j;\n\tvar W;\n\tvar w;\n\n\tif ( !isStringArray( documents ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of strings. Value: `%s`.', documents ) );\n\t}\n\tif ( !isPositiveInteger( K ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Number of topics must be a positive integer. Value: `%s`.', K ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t// Number of documents:\n\tD = documents.length;\n\n\t// Hyper-parameter for Dirichlet distribution of topic vector theta:\n\talpha = opts.alpha || 50 / K;\n\n\t// Hyper-parameter of Dirichlet distribution of phi:\n\tbeta = opts.beta || 0.1;\n\n\t// Extract words & construct vocabulary:\n\tvocab = [];\n\tw = [];\n\tpos = 0;\n\tfor ( d = 0; d < D; d++ ) {\n\t\tw.push( [] );\n\t\twd = tokenize( documents[ d ] );\n\t\tnd = wd.length;\n\t\tfor ( i = 0; i < nd; i++ ) {\n\t\t\ttarget = wd[ i ];\n\t\t\tit = findIndex( vocab, target );\n\t\t\tif ( it === -1 ) {\n\t\t\t\tvocab.push( target );\n\t\t\t\tw[ d ].push( pos );\n\t\t\t\tpos += 1;\n\t\t\t} else {\n\t\t\t\tw[ d ].push( it );\n\t\t\t}\n\t\t}\n\t}\n\t// Size of vocabulary:\n\tW = vocab.length;\n\n\tmodel = {};\n\n\t// Attach read-only properties:\n\tsetReadOnly( model, 'K', K );\n\tsetReadOnly( model, 'D', D );\n\tsetReadOnly( model, 'W', W );\n\tsetReadOnly( model, 'alpha', alpha );\n\tsetReadOnly( model, 'beta', beta );\n\n\t// Attach methods:\n\tsetReadOnly( model, 'init', init );\n\tsetReadOnly( model, 'fit', fit );\n\tsetReadOnly( model, 'getPhis', getPhis );\n\tsetReadOnly( model, 'getThetas', getThetas );\n\tsetReadOnly( model, 'getTerms', getTerms );\n\n\tmodel.nwSum = new Int32Array( K );\n\tmodel.ndSum = new Int32Array( D );\n\tmodel.nw = matrix( [ W, K ], 'int32' );\n\tmodel.nd = matrix( [ D, K ], 'int32' );\n\n\tmodel.phiList = [];\n\tmodel.thetaList = [];\n\n\tmodel.w = w;\n\tmodel.init();\n\n\treturn model;\n\n\t/**\n\t* Get top terms for the specified topic.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} k - topic\n\t* @param {PositiveInteger} [no=10] - number of terms\n\t* @throws {TypeError} first argument must be a nonnegative integer smaller than the total number of topics\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @returns {Array} word probability array\n\t*/\n\tfunction getTerms( k, no ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tvar skip;\n\t\tvar phi;\n\t\tvar ret;\n\t\tvar max;\n\t\tvar mid;\n\t\tvar i;\n\n\t\tif ( !isNonNegativeInteger( k ) || k >= K ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer which is less than the total number of topics. Value: `%s`.', k ) );\n\t\t}\n\t\tif ( no ) {\n\t\t\tif ( !isPositiveInteger( no ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', no ) );\n\t\t\t}\n\t\t} else {\n\t\t\tno = 10;\n\t\t}\n\n\t\tret = [];\n\t\tskip = [];\n\t\tfor ( i = 0; i < no; i++ ) {\n\t\t\tmax = 0;\n\t\t\tfor ( j = 0; j < this.W; j++ ) {\n\t\t\t\tphi = this.avgPhi.get( k, j );\n\t\t\t\tif ( phi > max && !contains( skip, j ) ) {\n\t\t\t\t\tmax = phi;\n\t\t\t\t\tmid = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskip.push( mid );\n\t\t\tret.push({\n\t\t\t\t'word': vocab[ mid ],\n\t\t\t\t'prob': max\n\t\t\t});\n\t\t}\n\t\treturn ret;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default lda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isPositive } from '@stdlib/assert/is-positive-number';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveNumber} [options.alpha] - Dirichlet hyper-parameter of topic vector theta:\n* @param {PositiveNumber} [options.beta] - Dirichlet hyper-parameter for word vector phi\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isPositive( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'beta' ) ) {\n\t\topts.beta = options.beta;\n\t\tif ( !isPositive( opts.beta ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'beta', opts.beta ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPlainObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport indexOf from '@stdlib/utils/index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar LANGUAGE_CODES = [ 'en', 'es', 'fin', 'fr', 'de', 'it', 'pt', 'swe' ];\nvar GRAMMATICAL_GENDERS = [ 'masculine', 'feminine' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.lang] - language code\n* @param {boolean} [options.suffixOnly] - boolean indicating whether to only return the suffix\n* @param {string} [options.gender] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'lang': 'es'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'lang' ) ) {\n\t\topts.lang = options.lang;\n\t\tif ( indexOf( LANGUAGE_CODES, opts.lang ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'lang', LANGUAGE_CODES.join( '\", \"' ), opts.lang ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'suffixOnly' ) ) {\n\t\topts.suffixOnly = options.suffixOnly;\n\t\tif ( !isBoolean( opts.suffixOnly ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'suffixOnly', opts.suffixOnly ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'gender' ) ) {\n\t\topts.gender = options.gender;\n\t\tif ( indexOf( GRAMMATICAL_GENDERS, opts.gender ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Value: `%s`.', 'gender', GRAMMATICAL_GENDERS.join( '\", \"' ), opts.gender ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Converts an integer to an ordinal string (e.g., `1st`, `2nd`, etc.).\n*\n* @param {(string|integer)} value - string or number to convert\n* @param {Object} [options] - options\n* @param {boolean} [options.suffixOnly=false] - boolean indicating whether to return only the suffix\n* @param {string} [options.lang='en'] - language code\n* @param {string} [options.gender='masculine'] - grammatical gender (used if applicable; either 'masculine' or 'feminine')\n* @throws {TypeError} must provide a string or integer\n* @returns {string} ordinal string or suffix\n*\n* @example\n* var out = ordinalize( '1' );\n* // returns '1st'\n*\n* @example\n* var out = ordinalize( '2' );\n* // returns '2nd'\n*\n* @example\n* var out = ordinalize( '21' );\n* // returns '21st'\n*\n* @example\n* var out = ordinalize( '1', { 'lang': 'de' } );\n* // returns '1.'\n*\n* @example\n* var out = ordinalize( '7', { 'lang': 'es' } );\n* // returns '7º'\n*/\nfunction ordinalize( value, options ) {\n\tvar suffix;\n\tvar last2;\n\tvar last;\n\tvar opts;\n\tvar err;\n\n\tif ( !isString( value ) && !isInteger( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or integer. Value: `%s`.', value ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tvalue = String( value );\n\tlast = value[ value.length-1 ];\n\tlast2 = value.slice( -2 );\n\n\tswitch ( opts.lang ) {\n\tcase 'fr':\n\t\tif ( value === '1' ) {\n\t\t\tsuffix = ( opts.gender === 'feminine' ) ? 're' : 'er';\n\t\t} else {\n\t\t\tsuffix = 'e';\n\t\t}\n\t\tbreak;\n\tcase 'de':\n\tcase 'fin':\n\t\tsuffix = '.';\n\t\tbreak;\n\tcase 'it':\n\tcase 'pt':\n\tcase 'es':\n\t\tif ( opts.gender === 'feminine' ) {\n\t\t\tsuffix = 'ª';\n\t\t} else {\n\t\t\tsuffix = 'º';\n\t\t}\n\t\tbreak;\n\tcase 'swe':\n\t\tif ( ( last2 !== '11' && last === '1' ) || ( last2 !== '12' && last === '2' ) ) {\n\t\t\tsuffix = ':a';\n\t\t} else {\n\t\t\tsuffix = ':e';\n\t\t}\n\t\tbreak;\n\tcase 'en':\n\tdefault:\n\t\tif ( last2 !== '11' && last === '1' ) {\n\t\t\tsuffix = 'st';\n\t\t} else if ( last2 !== '12' && last === '2' ) {\n\t\t\tsuffix = 'nd';\n\t\t} else if ( last2 !== '13' && last === '3' ) {\n\t\t\tsuffix = 'rd';\n\t\t} else {\n\t\t\tsuffix = 'th';\n\t\t}\n\t}\n\tif ( opts.suffixOnly ) {\n\t\treturn suffix;\n\t}\n\treturn value + suffix;\n}\n\n\n// EXPORTS //\n\nexport default ordinalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* This code is a modification of an existing JavaScript implementation of their [Porter stemming algorithm]{@link https://tartarus.org/martin/PorterStemmer/}.\n*\n* ```text\n* Release 1 be 'andargor', Jul 2004\n* Release 2 (substantially revised) by Christopher McKenzie, Aug 2009\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport endsWith from '@stdlib/string/base/ends-with';\nimport lowercase from '@stdlib/string/base/lowercase';\nimport replace from '@stdlib/string/base/replace';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar step2list = {\n\t'ational': 'ate',\n\t'tional': 'tion',\n\t'enci': 'ence',\n\t'anci': 'ance',\n\t'izer': 'ize',\n\t'bli': 'ble',\n\t'alli': 'al',\n\t'entli': 'ent',\n\t'eli': 'e',\n\t'ousli': 'ous',\n\t'ization': 'ize',\n\t'ation': 'ate',\n\t'ator': 'ate',\n\t'alism': 'al',\n\t'iveness': 'ive',\n\t'fulness': 'ful',\n\t'ousness': 'ous',\n\t'aliti': 'al',\n\t'iviti': 'ive',\n\t'biliti': 'ble',\n\t'logi': 'log'\n};\nvar step3list = {\n\t'icate': 'ic',\n\t'ative': '',\n\t'alize': 'al',\n\t'iciti': 'ic',\n\t'ical': 'ic',\n\t'ful': '',\n\t'ness': ''\n};\nvar c = '[^aeiou]'; // consonant\nvar v = '[aeiouy]'; // vowel\nvar C = c + '[^aeiouy]*'; // consonant sequence\nvar V = v + '[aeiou]*'; // vowel sequence\nvar RE_CV = new RegExp( '^' + C + v + '[^aeiouwxy]$' );\nvar mgr0 = '^(' + C + ')?' + V + C; // [C]VC... is m>0\nvar RE_MGR0 = new RegExp( mgr0 );\nvar meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$'; // [C]VC[V] is m=1\nvar RE_MEQ1 = new RegExp( meq1 );\nvar mgr1 = '^(' + C + ')?' + V + C + V + C; // [C]VCVC... is m>1\nvar RE_MGR1 = new RegExp( mgr1 );\nvar sV = '^(' + C + ')?' + v; // vowel in stem\nvar RE_SV = new RegExp( sV );\nvar RE_STEP1A = /^(.+?)(ss|i)es$/;\nvar RE2_STEP1A = /^(.+?)([^s])s$/;\nvar RE_STEP1B = /^(.+?)eed$/;\nvar RE2_STEP1B = /^(.+?)(ed|ing)$/;\nvar RE_STEP1C = /^(.+?)y$/;\nvar RE_STEP2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\nvar RE_STEP3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\nvar RE_STEP4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\nvar RE2_STEP4 = /^(.+?)(s|t)(ion)$/;\nvar RE_STEP5 = /^(.+?)e$/;\nvar RE_LAST = /.$/;\nvar RE_ATBLIZ = /(at|bl|iz)$/;\nvar RE_DOUBLE = new RegExp( '([^aeiouylsz])\\\\1$' ); // eslint-disable-line prefer-regex-literals\n\n\n// MAIN //\n\n/**\n* Extracts the stem of a given word using the Porter stemming algorithm.\n*\n* ## References\n*\n* -   Porter, Michael F. 1980. \"An algorithm for suffix stripping.\" _Program_ 13 (3): 130–37. doi:[10.1108/eb046814][@porter:1980].\n*\n* [@porter:1980]: https://doi.org/10.1108/eb046814\n*\n* @param {string} word - input word\n* @throws {TypeError} first argument must be a string\n* @returns {string} word stem\n*\n* @example\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walks' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'worldwide' );\n* // returns 'worldwid'\n*\n* @example\n* var out = porterStemmer( '' );\n* // returns ''\n*/\nfunction porterStemmer( word ) {\n\tvar firstch;\n\tvar suffix;\n\tvar stem;\n\tvar fp;\n\n\tif ( !isString( word ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', word ) );\n\t}\n\tif ( word.length < 3 ) {\n\t\treturn word;\n\t}\n\tword = lowercase( word );\n\tfirstch = word[ 0 ];\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toUpperCase() + word.substr( 1 );\n\t}\n\n\t// Step 1a:\n\tif ( RE_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE_STEP1A, '$1$2' );\n\t} else if ( RE2_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE2_STEP1A, '$1$2' );\n\t}\n\n\t// Step 1b:\n\tif ( RE_STEP1B.test( word ) ) {\n\t\tfp = RE_STEP1B.exec( word );\n\t\tif ( RE_MGR0.test( fp[ 1 ] ) ) {\n\t\t\tword = replace( word, RE_LAST, '' );\n\t\t}\n\t} else if ( RE2_STEP1B.test( word ) ) {\n\t\tfp = RE2_STEP1B.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem;\n\t\t\tif ( RE_ATBLIZ.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t} else if ( RE_DOUBLE.test( word ) ) {\n\t\t\t\tword = replace( word, RE_LAST, '' );\n\t\t\t} else if ( RE_CV.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t}\n\t\t}\n\t}\n\n\t// Step 1c:\n\tif ( RE_STEP1C.test( word ) ) {\n\t\tfp = RE_STEP1C.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem + 'i';\n\t\t}\n\t}\n\n\t// Step 2:\n\tif ( RE_STEP2.test( word ) ) {\n\t\tfp = RE_STEP2.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step2list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 3:\n\tif ( RE_STEP3.test( word ) ) {\n\t\tfp = RE_STEP3.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step3list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 4:\n\tif ( RE_STEP4.test( word ) ) {\n\t\tfp = RE_STEP4.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t} else if ( RE2_STEP4.test( word ) ) {\n\t\tfp = RE2_STEP4.exec( word );\n\t\tstem = fp[ 1 ] + fp[ 2 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\n\t// Step 5:\n\tif ( RE_STEP5.test( word ) ) {\n\t\tfp = RE_STEP5.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif (\n\t\t\tRE_MGR1.test( stem ) ||\n\t\t\t( RE_MEQ1.test( stem ) && !( RE_CV.test( stem ) ) )\n\t\t) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\tif ( endsWith( word, 'll', word.length ) && RE_MGR1.test( word ) ) {\n\t\tword = replace( word, RE_LAST, '' );\n\t}\n\n\t// Turn initial Y back to y:\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toLowerCase() + word.substr( 1 );\n\t}\n\treturn word;\n}\n\n\n// EXPORTS //\n\nexport default porterStemmer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport tokenize from './../../tokenize';\nimport trim from '@stdlib/string/base/trim';\n\n\n// VARIABLES //\n\nvar RE_LOWERCASE = /^[a-z]+$/;\nvar RE_CAPITALIZED = /^[A-Z][a-z]{0,4}$/;\nvar RE_CAPITALIZED_PERIOD = /^([A-Z]\\.)*[A-Z]$/;\nvar RE_NUMBER = /^[0-9]$/;\nvar RE_PREFIXES = /^[{[(<:;\"'”`]/;\nvar RE_SUFFIXES = /[})\\]>:;\"'”`]$/;\nvar RE_QUOTES = /^[\"'`]$/;\n\n\n// FUNCTIONS //\n\n/**\n* Checks whether the token at a specified index is an end-of-sentence token.\n*\n* ## Notes\n*\n* -   The function uses a set of heuristics to determine whether a token is an end-of-sentence token.\n* -   Periods (`.`), exclamation points (`!`), and question marks (`?`). are treated as possible end-of-sentence tokens.\n* -   The function expects that the input array of tokens has been tokenized using the `@stdlib/nlp/tokenize` function, which tokenizes a string into an array of tokens and handles titles (`Dr.`, etc.), abbreviations such as `e.g.`, and the like, keeping them as single tokens. For example, the string `Dr. Smith is a professor at MIT.` is tokenized as `['Dr.', 'Smith', 'is', 'a', 'professor', 'at', 'MIT', '.']`. This function henceforth only considers standalone characters as possible end-of-sentence tokens, and does not consider them as end-of-sentence tokens if they are part of a larger token.\n*\n* @private\n* @param {StringArray} tokens - array of tokens\n* @param {NonNegativeInteger} i - index\n* @returns {boolean} boolean indicating whether the token at a specified index is an end-of-sentence token\n*/\nfunction isEndOfSentence( tokens, i ) {\n\tvar nextToken;\n\tvar token;\n\tvar im1 = i - 1;\n\tvar ip1 = i + 1;\n\n\ttoken = tokens[ i ];\n\n\t// Handle quoted text with punctuation...\n\tif (\n\t\tRE_QUOTES.test( token ) &&\n\t\ti > 0 &&\n\t\t( tokens[ im1 ] === '.' || tokens[ im1 ] === '!' || tokens[ im1 ] === '?' )\n\t) {\n\t\t// Look ahead to see if sentence continues:\n\t\tip1 = i + 1;\n\t\tif ( ip1 < tokens.length ) {\n\t\t\t// Skip spaces...\n\t\t\twhile ( ip1 < tokens.length && tokens[ ip1 ] === ' ' ) {\n\t\t\t\tip1 += 1;\n\t\t\t}\n\t\t\t// If next non-space token is lowercase, we assume the sentence continues:\n\t\t\tif ( ip1 < tokens.length ) {\n\t\t\t\tnextToken = tokens[ ip1 ];\n\t\t\t\tif ( RE_LOWERCASE.test( nextToken ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Regular sentence ending punctuation...\n\tif (\n\t\ttoken === '.' &&\n\t\t!RE_CAPITALIZED.test( tokens[ im1 ] ) && // for other short abbreviations and bullet points\n\t\t!RE_CAPITALIZED_PERIOD.test( tokens[ im1 ] ) && // acronyms of the form A.B.C.\n\t\t!RE_NUMBER.test( tokens[ im1 ] ) && // numbered list items\n\t\t!RE_PREFIXES.test( tokens[ im1 ] ) &&\n\t\t!RE_SUFFIXES.test( tokens[ ip1 ] )\n\t) {\n\t\treturn true;\n\t}\n\tif (\n\t\t( token === '!' || token === '?' ) &&\n\t\t!RE_PREFIXES.test( tokens[ im1 ] ) &&\n\t\t!RE_SUFFIXES.test( tokens[ ip1 ] ) &&\n\t\t( tokens[ ip1 ] !== '!' && tokens[ ip1 ] !== '?' )\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Splits a string into an array of sentences.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {StringArray} array of sentences\n*\n* @example\n* var str = 'Hello World! How are you?';\n* var out = sentencize( str );\n* // returns [ 'Hello World!', 'How are you?' ]\n*\n* @example\n* var str = '';\n* var out = sentencize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = sentencize( str );\n* // returns [ 'Hello Mrs. Maple, could you call me back?' ]\n*/\nfunction sentencize( str ) {\n\tvar current;\n\tvar tokens;\n\tvar out;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a string. Value: `' + str + '`.' );\n\t}\n\ttokens = tokenize( str, true );\n\tcurrent = '';\n\tout = [];\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\tcurrent += tokens[ i ];\n\t\tif ( isEndOfSentence( tokens, i ) ) {\n\t\t\tout.push( trim( current ) );\n\t\t\tcurrent = '';\n\t\t}\n\t}\n\tif ( current !== '' ) {\n\t\tout.push( trim( current ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default sentencize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace nlp\n*/\nvar nlp = {};\n\n/**\n* @name expandAcronyms\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/expand-acronyms}\n*/\nimport expandAcronyms from './../expand-acronyms';\nsetReadOnly( nlp, 'expandAcronyms', expandAcronyms );\n\n/**\n* @name expandContractions\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/expand-contractions}\n*/\nimport expandContractions from './../expand-contractions';\nsetReadOnly( nlp, 'expandContractions', expandContractions );\n\n/**\n* @name lda\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/lda}\n*/\nimport lda from './../lda';\nsetReadOnly( nlp, 'lda', lda );\n\n/**\n* @name ordinalize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/ordinalize}\n*/\nimport ordinalize from './../ordinalize';\nsetReadOnly( nlp, 'ordinalize', ordinalize );\n\n/**\n* @name porterStemmer\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/porter-stemmer}\n*/\nimport porterStemmer from './../porter-stemmer';\nsetReadOnly( nlp, 'porterStemmer', porterStemmer );\n\n/**\n* @name sentencize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/sentencize}\n*/\nimport sentencize from './../sentencize';\nsetReadOnly( nlp, 'sentencize', sentencize );\n\n/**\n* @name tokenize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/tokenize}\n*/\nimport tokenize from './../tokenize';\nsetReadOnly( nlp, 'tokenize', tokenize );\n\n\n// EXPORTS //\n\nexport default nlp;\n"],"names":["REGEXP_PREFIXES","REGEXP_SUFFIXES","extend","arr","ext","i","length","push","tokenizeSubstring","substr","match","done","res","prefixes","suffixes","EMOJIS","ABBRS","CONTRACT","split","unshift","pop","tokenize","str","keepWhitespace","subtkns","substrs","tokens","cache","isString","TypeError","format","arguments","isBoolean","hasOwnProp","KEYS","objectKeys","ACRONYMS","expandAcronyms","token","out","key","j","isUppercase","lowercase","CONTRACTIONS","expandContractions","isCapitalized","uncapitalize","capitalize","matrix","dtype","ndims","shape","data","len","mat","Int32Array","Float64Array","strides","offset","nbytes","byteLength","setReadOnly","idx","this","v","getThetas","Theta","val","d","k","D","K","nd","get","alpha","ndSum","set","getPhis","Phi","w","W","nw","beta","nwSum","init","topic","newz","wt","z","floor","randu","avgMatrix","A","B","weight","propA","propB","nrow","ncol","C","fit","iter","burnin","thin","kalpha","wbeta","theta","prob","word","phi","nt","u","isPositiveInteger","phiList","thetaList","avgPhi","avgTheta","findIndex","vocab","searchVal","lda","documents","options","target","model","opts","err","pos","it","wd","isStringArray","isObject","isPositive","validate","no","skip","ret","max","mid","isNonNegativeInteger","contains","LANGUAGE_CODES","GRAMMATICAL_GENDERS","ordinalize","value","suffix","last2","last","isInteger","isPlainObject","lang","indexOf","join","suffixOnly","gender","String","slice","step2list","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","step3list","icate","ative","alize","iciti","ical","ful","ness","c","V","RE_CV","RegExp","RE_MGR0","RE_MEQ1","RE_MGR1","RE_SV","RE_STEP1A","RE2_STEP1A","RE_STEP1B","RE2_STEP1B","RE_STEP1C","RE_STEP2","RE_STEP3","RE_STEP4","RE2_STEP4","RE_STEP5","RE_LAST","RE_ATBLIZ","RE_DOUBLE","porterStemmer","firstch","stem","fp","toUpperCase","test","replace","exec","endsWith","toLowerCase","RE_LOWERCASE","RE_CAPITALIZED","RE_CAPITALIZED_PERIOD","RE_NUMBER","RE_PREFIXES","RE_SUFFIXES","RE_QUOTES","isEndOfSentence","nextToken","im1","ip1","sentencize","current","trim","nlp"],"mappings":"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"}