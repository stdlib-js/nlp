{"version":3,"file":"index.mjs","sources":["../tokenize/lib/tokenize.js","../tokenize/lib/index.js","../expand-contractions/lib/expand_contractions.js","../expand-contractions/lib/index.js","../lda/lib/matrix.js","../lda/lib/get_thetas.js","../lda/lib/validate.js","../lda/lib/get_phis.js","../lda/lib/init.js","../lda/lib/avg_matrix.js","../lda/lib/fit.js","../lda/lib/lda.js","../lda/lib/index.js","../porter-stemmer/lib/main.js","../porter-stemmer/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar ABBRS = require( './abbreviations.json' );\nvar EMOJIS = require( './emojis.json' );\nvar CONTRACT = require( './contractions.json' );\n\n\n// VARIABLES //\n\nvar REGEXP_PREFIXES = /^([,([{*<\"“'`‘.])/gi;\nvar REGEXP_SUFFIXES = /([,.!?%*>:;\"'”`)\\]}])$/gi;\n\n\n// FUNCTIONS //\n\n/**\n* Extends an array by the elements of another array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} ext - array to extend `arr` with\n* @returns {Array} mutated input array\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* var out = extend( arr, [ 4, 5 ] );\n* // returns [ 1, 2, 3, 4, 5 ]\n*/\nfunction extend( arr, ext ) {\n\tvar i;\n\tfor ( i = 0; i < ext.length; i++ ) {\n\t\tarr.push( ext[ i ] );\n\t}\n\treturn arr;\n}\n\n/**\n* Tokenizes a substring.\n*\n* @private\n* @param {string} substr - input string\n* @returns {Array} token array\n*\n* @example\n* var str = '(never)';\n* var out = tokenizeSubstring( str );\n* // returns [ '(', 'never', ')' ]\n*/\nfunction tokenizeSubstring( substr ) {\n\tvar prefixes = [];\n\tvar suffixes = [];\n\tvar match;\n\tvar done;\n\tvar res;\n\n\tdo {\n\t\tif (\n\t\t\t!EMOJIS[ substr ] &&\n\t\t\t!ABBRS[ substr ] &&\n\t\t\t!CONTRACT[ substr ]\n\t\t) {\n\t\t\tmatch = substr.split( REGEXP_PREFIXES );\n\t\t\tif ( match.length > 1 ) {\n\t\t\t\tprefixes.push( match[ 1 ] );\n\t\t\t\tsubstr = match[ 2 ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmatch = substr.split( REGEXP_SUFFIXES );\n\t\t\t\tif ( match.length > 1 ) {\n\t\t\t\t\tsubstr = match[ 0 ];\n\t\t\t\t\tsuffixes.push( match[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone = true;\n\t\t}\n\t} while ( !done );\n\n\tres = prefixes;\n\tres.push( substr );\n\textend( res, suffixes );\n\treturn res;\n}\n\n\n// MAIN //\n\n/**\n* Tokenize a string.\n*\n* @param {string} str - input string\n* @param {boolean} [keepWhitespace=false] - boolean indicating whether whitespace characters should be returned as part of the token array\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a boolean\n* @returns {Array} array of tokens\n*\n* @example\n* var str = 'Hello World!';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*\n* @example\n* var str = '';\n* var out = tokenize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*/\nfunction tokenize( str, keepWhitespace ) {\n\tvar subtkns;\n\tvar substrs;\n\tvar tokens;\n\tvar substr;\n\tvar cache;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isBoolean( keepWhitespace ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', keepWhitespace ) );\n\t\t}\n\t}\n\tif ( !str ) {\n\t\treturn [];\n\t}\n\n\t// Split on whitespace:\n\tif ( keepWhitespace ) {\n\t\tsubstrs = str.split( /(\\s+)/ );\n\t} else {\n\t\tsubstrs = str.split( /\\s+/ );\n\t}\n\n\t// Set up cache to hold tokens for substring matches:\n\tcache = {};\n\n\t// Initialize token array:\n\ttokens = [];\n\n\tfor ( i = 0; i < substrs.length; i++ ) {\n\t\tsubstr = substrs[ i ];\n\t\tif ( hasOwnProp( cache, substr ) ) {\n\t\t\textend( tokens, cache[ substr ] );\n\t\t}\n\t\telse {\n\t\t\tsubtkns = tokenizeSubstring( substr );\n\t\t\textend( tokens, subtkns );\n\t\t\tcache[ substr ] = subtkns;\n\t\t}\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tokenize a string.\n*\n* @module @stdlib/nlp/tokenize\n*\n* @example\n* var tokenize = require( '@stdlib/nlp/tokenize' );\n*\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*\n* str = 'Hello World!';\n* out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*/\n\n// MODULES //\n\nvar tokenize = require( './tokenize.js' );\n\n\n// EXPORTS //\n\nmodule.exports = tokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar isCapitalized = require( '@stdlib/assert/is-capitalized' );\nvar uncapitalize = require( '@stdlib/string/uncapitalize' );\nvar capitalize = require( '@stdlib/string/capitalize' );\nvar tokenize = require( './../../tokenize' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar CONTRACTIONS = require( './contractions.json' );\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( CONTRACTIONS );\n\n\n// MAIN //\n\n/**\n* Expands all contractions to their formal equivalents.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a primitive string\n* @returns {string} string with expanded contractions\n*\n* @example\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* @example\n* var str = 'It oughtn\\'t to be my fault, because, you know, I didn\\'t know';\n* var out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\nfunction expandContractions( str ) {\n\tvar tokens;\n\tvar token;\n\tvar out;\n\tvar key;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a primitive string. Value: `%s`.', str ) );\n\t}\n\tout = '';\n\ttokens = tokenize( str, true );\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isCapitalized( token ) ) {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( uncapitalize( token ) === key ) {\n\t\t\t\t\ttoken = capitalize( CONTRACTIONS[ key ] );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( token === key ) {\n\t\t\t\t\ttoken = CONTRACTIONS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout += token;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = expandContractions;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Expand contractions.\n*\n* @module @stdlib/nlp/expand-contractions\n*\n* @example\n* var expandContractions = require( '@stdlib/nlp/expand-contractions' );\n*\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* str = 'It oughtn't to be my fault, because, you know, I didn't know';\n* out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\n\n// MODULES //\n\nvar expandContractions = require( './expand_contractions.js' );\n\n\n// EXPORTS //\n\nmodule.exports = expandContractions;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Returns a Matrix instance.\n*\n* @private\n* @constructor\n* @param {NumberArray} shape - matrix dimensions/shape\n* @param {string} [dtype=\"float64\"] - matrix data type\n* @returns {Matrix} Matrix instance\n*/\nfunction matrix() {\n\tvar dtype;\n\tvar ndims;\n\tvar shape;\n\tvar data;\n\tvar len;\n\tvar mat;\n\tvar i;\n\n\tif ( arguments.length === 1 ) {\n\t\tshape = arguments[ 0 ];\n\t}\n\telse if ( arguments.length === 2 ) {\n\t\tshape = arguments[ 0 ];\n\t\tdtype = arguments[ 1 ];\n\t}\n\tndims = shape.length;\n\tlen = 1;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tlen *= shape[ i ];\n\t}\n\t// Initialize a zero-filled typed array...\n\tif ( dtype === 'int32' ) {\n\t\tdata = new Int32Array( len );\n\t}\n\telse {\n\t\tdata = new Float64Array( len );\n\t}\n\n\t// Return a new Matrix instance:\n\tmat = {};\n\tmat.dtype = dtype;\n\tmat.shape = shape;\n\tmat.strides = [ shape[1], 1 ];\n\tmat.offset = 0;\n\tmat.ndims = shape.length;\n\tmat.length = data.length;\n\tmat.nbytes = data.byteLength;\n\tmat.data = data;\n\n\tsetReadOnly( mat, 'get', get );\n\tsetReadOnly( mat, 'set', set );\n\treturn mat;\n\n\t/**\n\t* Returns a matrix element based on the provided row and column indices.\n\t*\n\t* @private\n\t* @param {integer} i - row index\n\t* @param {integer} j - column index\n\t* @returns {(number|undefined)} matrix element\n\t*/\n\tfunction get( i, j ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tvar idx = this.offset + ( i*this.strides[0] ) + ( j*this.strides[1] );\n\t\treturn this.data[ idx ];\n\t}\n\n\t/**\n\t* Sets a matrix element based on the provided row and column indices.\n\t*\n\t* @private\n\t* @param {integer} i - row index\n\t* @param {integer} j - column index\n\t* @param {number} v - value to set\n\t* @returns {Matrix} Matrix instance\n\t*/\n\tfunction set( i, j, v ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\ti = this.offset + ( i*this.strides[0] ) + ( j*this.strides[1] );\n\t\tif ( i >= 0 ) {\n\t\t\tthis.data[ i ] = v;\n\t\t}\n\t\treturn this;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = matrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar matrix = require( './matrix.js' );\n\n\n// MAIN //\n\n/**\n* Get theta matrix. Its rows correspond to document distributions over topics.\n*\n* @private\n* @returns {Matrix} theta parameter matrix\n*/\nfunction getThetas() {\n\t/* eslint-disable no-invalid-this */\n\tvar Theta;\n\tvar val;\n\tvar d;\n\tvar k;\n\n\tTheta = matrix( [ this.D, this.K ] );\n\tfor ( d = 0; d < this.D; d++ ) {\n\t\tfor ( k = 0; k < this.K; k++ ) {\n\t\t\tval = ( this.nd.get( d, k ) + this.alpha ) /\n\t\t\t\t( this.ndSum[ d ] + ( this.K*this.alpha ) );\n\t\t\tTheta.set( d, k, val );\n\t\t}\n\t}\n\treturn Theta;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getThetas;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositive = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveNumber} [options.alpha] - Dirichlet hyper-parameter of topic vector theta:\n* @param {PositiveNumber} [options.beta] - Dirichlet hyper-parameter for word vector phi\n* @returns {(Error|null)} null or an error object\n*\n*\n* @example\n* var opts = {};\n* var options = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isPositive( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'beta' ) ) {\n\t\topts.beta = options.beta;\n\t\tif ( !isPositive( opts.beta ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'beta', opts.beta ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar matrix = require( './matrix.js' );\n\n\n// MAIN //\n\n/**\n* Get the phi matrix. Each row is a topic distribution over words.\n*\n* @private\n* @returns {Matrix} phi parameter matrix\n*/\nfunction getPhis() {\n\t/* eslint-disable no-invalid-this */\n\tvar Phi;\n\tvar val;\n\tvar k;\n\tvar w;\n\n\tPhi = matrix( [ this.K, this.W ] );\n\tfor ( k = 0; k < this.K; k++ ) {\n\t\tfor ( w = 0; w < this.W; w++ ) {\n\t\t\tval = ( this.nw.get( w, k ) + this.beta ) /\n\t\t\t\t( this.nwSum[ k ] + ( this.W*this.beta ) );\n\t\t\tPhi.set( k, w, val );\n\t\t}\n\t}\n\treturn Phi;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPhis;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar randu = require( '@stdlib/random/base/randu' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Randomly assign topics to words and keep track of the counts.\n*\n* @private\n*/\nfunction init() {\n\t/* eslint-disable no-invalid-this */\n\tvar topic;\n\tvar newz;\n\tvar len;\n\tvar wt;\n\tvar d;\n\tvar i;\n\n\tthis.z = [];\n\tfor ( d = 0; d < this.D; d++ ) {\n\t\tthis.z.push( [] );\n\t\tlen = this.w[ d ].length;\n\n\t\t// Initialize random topics...\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tnewz = floor( randu() * this.K );\n\t\t\tthis.z[ d ].push( newz );\n\t\t}\n\t\tthis.ndSum[ d ] = len;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\twt = this.w[ d ][ i ];\n\t\t\ttopic = this.z[ d ][ i ];\n\n\t\t\t// Number of instances of word i assigned to topic j:\n\t\t\tthis.nw.set( wt, topic, this.nw.get( wt, topic ) + 1 );\n\n\t\t\t// Number of words in document i assigned to topic j:\n\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) + 1 );\n\n\t\t\t// Total number of words assigned to topic j:\n\t\t\tthis.nwSum[ topic ] = this.nwSum[ topic ] + 1;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = init;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar matrix = require( './matrix.js' );\n\n\n// MAIN //\n\n/**\n* Calculate weighted average of two matrices.\n*\n* @private\n* @param {Matrix} A - first matrix\n* @param {Matrix} B - second matrix\n* @param {PositiveInteger} weight - relative weight of matrix A\n* @returns {Matrix} averaged matrix\n*/\nfunction avgMatrix( A, B, weight ) {\n\tvar propA;\n\tvar propB;\n\tvar nrow;\n\tvar ncol;\n\tvar val;\n\tvar C;\n\tvar i;\n\tvar j;\n\n\tnrow = A.shape[ 0 ];\n\tncol = A.shape[ 1 ];\n\tC = matrix( [ nrow, ncol ] );\n\tpropA = ( weight - 1.0 ) / weight;\n\tpropB = 1.0 / weight;\n\n\tfor ( i = 0; i < nrow; i++ ) {\n\t\tfor ( j = 0; j < ncol; j++ ) {\n\t\t\tval = (propA * A.get(i, j)) + (propB * B.get(i, j));\n\t\t\tC.set( i, j, val );\n\t\t}\n\t}\n\treturn C;\n}\n\n\n// EXPORTS //\n\nmodule.exports = avgMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar format = require( '@stdlib/string/format' );\nvar randu = require( '@stdlib/random/base/randu' );\nvar avgMatrix = require( './avg_matrix.js' );\n\n\n// MAIN //\n\n/**\n* Fit model using collapsed Gibbs sampling.\n*\n* @private\n* @param {PositiveInteger} iter - number of sampling iterations\n* @param {PositiveInteger} burnin - number of estimates to be thrown away at beginning\n* @param {PositiveInteger} thin - number of discarded in-between iterations\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a positive integer\n*/\nfunction fit( iter, burnin, thin ) {\n\t/* eslint-disable no-invalid-this */\n\tvar kalpha;\n\tvar wbeta;\n\tvar topic;\n\tvar theta;\n\tvar prob;\n\tvar word;\n\tvar phi;\n\tvar len;\n\tvar nt;\n\tvar d;\n\tvar i;\n\tvar j;\n\tvar u;\n\tvar w;\n\n\tif ( !isPositiveInteger( iter ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', iter ) );\n\t}\n\tif ( !isPositiveInteger( burnin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', burnin ) );\n\t}\n\tif ( !isPositiveInteger( thin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a positive integer. Value: `%s`.', thin ) );\n\t}\n\n\twbeta = this.W * this.beta;\n\tkalpha = this.K * this.alpha;\n\n\tfor ( i = 0; i < iter; i++ ) {\n\t\tfor ( d = 0; d < this.D; d++ ) {\n\t\t\tfor ( w = 0; w < this.ndSum[ d ]; w++ ) {\n\t\t\t\tword = this.w[ d ][ w ];\n\t\t\t\ttopic = this.z[ d ][ w ];\n\n\t\t\t\tthis.nw.set( word, topic, this.nw.get( word, topic ) - 1 );\n\t\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) - 1 );\n\t\t\t\tthis.ndSum[ d ] -= 1;\n\t\t\t\tthis.nwSum[ topic ] -= 1;\n\n\t\t\t\tprob = [];\n\t\t\t\tfor ( j = 0; j < this.K; j++ ) {\n\t\t\t\t\tprob.push( ( this.nw.get( word, j ) + this.beta ) /\n\t\t\t\t\t\t( this.nwSum[ j ] + wbeta ) *\n\t\t\t\t\t\t( this.nd.get( d, j ) + this.alpha ) /\n\t\t\t\t\t\t( this.ndSum[ d ] + kalpha ) );\n\t\t\t\t}\n\t\t\t\tfor ( j = 1; j < this.K; j++ ) {\n\t\t\t\t\tprob[ j ] += prob[ j - 1 ];\n\t\t\t\t}\n\t\t\t\tu = prob[ this.K - 1 ] * randu();\n\t\t\t\ttopic = 0;\n\t\t\t\tfor ( nt = 0; nt < this.K; nt++ ) {\n\t\t\t\t\tif ( prob[ nt ] > u ) {\n\t\t\t\t\t\ttopic = nt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Assign new z_i to counts...\n\t\t\t\tthis.nw.set( word, topic, this.nw.get( word, topic ) + 1 );\n\t\t\t\tthis.nd.set( d, topic, this.nd.get( d, topic ) + 1 );\n\t\t\t\tthis.nwSum[ topic ] += 1;\n\t\t\t\tthis.ndSum[ d ] += 1;\n\n\t\t\t\tthis.z[ d ][ w ] = topic;\n\t\t\t}\n\t\t}\n\n\t\tif ( i % thin === 0 && i > burnin ) {\n\t\t\tphi = this.getPhis();\n\t\t\ttheta = this.getThetas();\n\n\t\t\tthis.phiList.push( phi );\n\t\t\tthis.thetaList.push( theta );\n\n\t\t\tlen = this.phiList.length;\n\t\t\tif ( len === 1 ) {\n\t\t\t\tthis.avgPhi = phi;\n\t\t\t} else {\n\t\t\t\tthis.avgPhi = avgMatrix( this.avgPhi, phi, len );\n\t\t\t}\n\t\t\tlen = this.thetaList.length;\n\t\t\tif ( len === 1 ) {\n\t\t\t\tthis.avgTheta = theta;\n\t\t\t} else {\n\t\t\t\tthis.avgTheta = avgMatrix( this.avgTheta, theta, len );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = fit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isStringArray = require( '@stdlib/assert/is-string-array' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar contains = require( '@stdlib/assert/contains' );\nvar tokenize = require( './../../tokenize' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar format = require( '@stdlib/string/format' );\nvar matrix = require( './matrix.js' );\nvar getThetas = require( './get_thetas.js' );\nvar validate = require( './validate.js' );\nvar getPhis = require( './get_phis.js' );\nvar init = require( './init.js' );\nvar fit = require( './fit.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Find index of the value in vocabulary equal to the supplied search value.\n*\n* @private\n* @param {Array} vocab - vocabulary\n* @param {string} searchVal - search value\n* @returns {integer} index in vocab if search value is found, -1 otherwise\n*/\nfunction findIndex( vocab, searchVal ) {\n\tvar i;\n\tfor ( i = 0; i < vocab.length; i++ ) {\n\t\tif ( vocab[ i ] === searchVal ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// MAIN //\n\n/**\n* Latent Dirichlet Allocation via collapsed Gibbs sampling.\n*\n* @param {StringArray} documents - document corpus\n* @param {PositiveInteger} K - number of topics\n* @param {Options} [options] - options object\n* @param {PositiveNumber} [options.alpha=50/K] - Dirichlet hyper-parameter of topic vector theta:\n* @param {PositiveNumber} [options.beta=0.1] - Dirichlet hyper-parameter for word vector phi\n* @throws {TypeError} first argument must be an array of strings\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} must provide valid options\n* @returns {Object} model object\n*/\nfunction lda( documents, K, options ) {\n\tvar target;\n\tvar vocab;\n\tvar model;\n\tvar alpha;\n\tvar beta;\n\tvar opts;\n\tvar err;\n\tvar pos;\n\tvar nd;\n\tvar it;\n\tvar wd;\n\tvar D;\n\tvar d;\n\tvar i;\n\tvar j;\n\tvar W;\n\tvar w;\n\n\tif ( !isStringArray( documents ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string array. Value: `%s`.', documents ) );\n\t}\n\tif ( !isPositiveInteger( K ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Number of topics `K` must be a positive integer. Value: `%s`.', K ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t// Number of documents:\n\tD = documents.length;\n\n\t// Hyper-parameter for Dirichlet distribution of topic vector theta:\n\talpha = opts.alpha || 50 / K;\n\n\t// Hyper-parameter of Dirichlet distribution of phi:\n\tbeta = opts.beta || 0.1;\n\n\t// Extract words & construct vocabulary:s\n\tvocab = [];\n\tw = [];\n\tpos = 0;\n\tfor ( d = 0; d < D; d++ ) {\n\t\tw.push( [] );\n\t\twd = tokenize( documents[ d ] );\n\t\tnd = wd.length;\n\t\tfor ( i = 0; i < nd; i++ ) {\n\t\t\ttarget = wd[ i ];\n\t\t\tit = findIndex( vocab, target );\n\t\t\tif ( it === -1 ) {\n\t\t\t\tvocab.push( target );\n\t\t\t\tw[ d ].push( pos );\n\t\t\t\tpos += 1;\n\t\t\t} else {\n\t\t\t\tw[ d ].push( it );\n\t\t\t}\n\t\t}\n\t}\n\t// Size of vocabulary:\n\tW = vocab.length;\n\n\tmodel = {};\n\n\t// Attach read-only properties:\n\tsetReadOnly( model, 'K', K );\n\tsetReadOnly( model, 'D', D );\n\tsetReadOnly( model, 'W', W );\n\tsetReadOnly( model, 'alpha', alpha );\n\tsetReadOnly( model, 'beta', beta );\n\n\t// Attach methods:\n\tsetReadOnly( model, 'init', init );\n\tsetReadOnly( model, 'fit', fit );\n\tsetReadOnly( model, 'getPhis', getPhis );\n\tsetReadOnly( model, 'getThetas', getThetas );\n\tsetReadOnly( model, 'getTerms', getTerms );\n\n\tmodel.nwSum = new Int32Array( K );\n\tmodel.ndSum = new Int32Array( D );\n\tmodel.nw = matrix( [ W, K ], 'int32' );\n\tmodel.nd = matrix( [ D, K ], 'int32' );\n\n\tmodel.phiList = [];\n\tmodel.thetaList = [];\n\n\tmodel.w = w;\n\tmodel.init();\n\n\treturn model;\n\n\t/**\n\t* Get top terms for the specified topic.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} k - topic\n\t* @param {PositiveInteger} [no=10] - number of terms\n\t* @throws {TypeError} first argument must be a nonnegative integer smaller than the total number of topics\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @returns {Array} word probability array\n\t*/\n\tfunction getTerms( k, no ) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tvar skip;\n\t\tvar phi;\n\t\tvar ret;\n\t\tvar max;\n\t\tvar mid;\n\t\tvar i;\n\n\t\tif ( !isNonNegativeInteger( k ) || k >= K ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer smaller than the total number of topics. Value: `%s`.', k ) );\n\t\t}\n\t\tif ( no ) {\n\t\t\tif ( !isPositiveInteger( no ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', no ) );\n\t\t\t}\n\t\t} else {\n\t\t\tno = 10;\n\t\t}\n\n\t\tret = [];\n\t\tskip = [];\n\t\tfor ( i = 0; i < no; i++ ) {\n\t\t\tmax = 0;\n\t\t\tfor ( j = 0; j < this.W; j++ ) {\n\t\t\t\tphi = this.avgPhi.get( k, j );\n\t\t\t\tif ( phi > max && !contains( skip, j ) ) {\n\t\t\t\t\tmax = phi;\n\t\t\t\t\tmid = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tskip.push( mid );\n\t\t\tret.push({\n\t\t\t\t'word': vocab[ mid ],\n\t\t\t\t'prob': max\n\t\t\t});\n\t\t}\n\t\treturn ret;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = lda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Latent Dirichlet Allocation via collapsed Gibbs sampling.\n*\n* @module @stdlib/nlp/lda\n*\n* @example\n* var lda = require( '@stdlib/nlp/lda' );\n*\n* var words;\n* var model;\n* var docs;\n*\n* docs = [\n*     'I loved you first',\n*     'For one is both and both are one in love',\n*     'You never see my pain',\n*     'My love is such that rivers cannot quench',\n*     'See a lot of pain, a lot of tears'\n* ];\n*\n* model = lda( docs, 2 );\n* // returns {}\n*\n* model.fit( 1000, 100, 10 );\n*\n* words = getTerms( 0, 3 );\n* // e.g., returns [ { word: 'both', prob: ~0.0632 }, { word: 'pain', prob: ~0.0552 }, ... ]\n*/\n\n// MODULES //\n\nvar lda = require( './lda.js' );\n\n\n// EXPORTS //\n\nmodule.exports = lda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* This code is a modification of an existing JavaScript implementation of their [Porter stemming algorithm]{@link https://tartarus.org/martin/PorterStemmer/}.\n*\n* ```text\n* Release 1 be 'andargor', Jul 2004\n* Release 2 (substantially revised) by Christopher McKenzie, Aug 2009\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar endsWith = require( '@stdlib/string/ends-with' );\nvar lowercase = require( '@stdlib/string/lowercase' );\nvar replace = require( '@stdlib/string/replace' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar step2list = {\n\t'ational': 'ate',\n\t'tional': 'tion',\n\t'enci': 'ence',\n\t'anci': 'ance',\n\t'izer': 'ize',\n\t'bli': 'ble',\n\t'alli': 'al',\n\t'entli': 'ent',\n\t'eli': 'e',\n\t'ousli': 'ous',\n\t'ization': 'ize',\n\t'ation': 'ate',\n\t'ator': 'ate',\n\t'alism': 'al',\n\t'iveness': 'ive',\n\t'fulness': 'ful',\n\t'ousness': 'ous',\n\t'aliti': 'al',\n\t'iviti': 'ive',\n\t'biliti': 'ble',\n\t'logi': 'log'\n};\nvar step3list = {\n\t'icate': 'ic',\n\t'ative': '',\n\t'alize': 'al',\n\t'iciti': 'ic',\n\t'ical': 'ic',\n\t'ful': '',\n\t'ness': ''\n};\nvar c = '[^aeiou]'; // consonant\nvar v = '[aeiouy]'; // vowel\nvar C = c + '[^aeiouy]*'; // consonant sequence\nvar V = v + '[aeiou]*'; // vowel sequence\nvar RE_CV = new RegExp( '^' + C + v + '[^aeiouwxy]$' );\nvar mgr0 = '^(' + C + ')?' + V + C; // [C]VC... is m>0\nvar RE_MGR0 = new RegExp( mgr0 );\nvar meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$'; // [C]VC[V] is m=1\nvar RE_MEQ1 = new RegExp( meq1 );\nvar mgr1 = '^(' + C + ')?' + V + C + V + C; // [C]VCVC... is m>1\nvar RE_MGR1 = new RegExp( mgr1 );\nvar sV = '^(' + C + ')?' + v; // vowel in stem\nvar RE_SV = new RegExp( sV );\nvar RE_STEP1A = /^(.+?)(ss|i)es$/;\nvar RE2_STEP1A = /^(.+?)([^s])s$/;\nvar RE_STEP1B = /^(.+?)eed$/;\nvar RE2_STEP1B = /^(.+?)(ed|ing)$/;\nvar RE_STEP1C = /^(.+?)y$/;\nvar RE_STEP2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\nvar RE_STEP3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\nvar RE_STEP4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\nvar RE2_STEP4 = /^(.+?)(s|t)(ion)$/;\nvar RE_STEP5 = /^(.+?)e$/;\nvar RE_LAST = /.$/;\nvar RE_ATBLIZ = /(at|bl|iz)$/;\nvar RE_DOUBLE = new RegExp( '([^aeiouylsz])\\\\1$' );\n\n\n// MAIN //\n\n/**\n* Extracts the stem of a given word using the Porter stemming algorithm.\n*\n* ## References\n*\n* -   Porter, Michael F. 1980. \"An algorithm for suffix stripping.\" _Program_ 13 (3): 130–37. doi:[10.1108/eb046814][@porter:1980].\n*\n* [@porter:1980]: https://doi.org/10.1108/eb046814\n*\n* @param {string} word - input word\n* @throws {TypeError} first argument must be a string\n* @returns {string} word stem\n*\n* @example\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'walks' );\n* // returns 'walk'\n*\n* @example\n* var out = porterStemmer( 'worldwide' );\n* // returns 'worldwid'\n*\n* @example\n* var out = porterStemmer( '' );\n* // returns ''\n*/\nfunction porterStemmer( word ) {\n\tvar firstch;\n\tvar suffix;\n\tvar stem;\n\tvar fp;\n\n\tif ( !isString( word ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', word ) );\n\t}\n\tif ( word.length < 3 ) {\n\t\treturn word;\n\t}\n\tword = lowercase( word );\n\tfirstch = word[ 0 ];\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toUpperCase() + word.substr( 1 );\n\t}\n\n\t// Step 1a:\n\tif ( RE_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE_STEP1A, '$1$2' );\n\t} else if ( RE2_STEP1A.test( word ) ) {\n\t\tword = replace( word, RE2_STEP1A, '$1$2' );\n\t}\n\n\t// Step 1b:\n\tif ( RE_STEP1B.test( word ) ) {\n\t\tfp = RE_STEP1B.exec( word );\n\t\tif ( RE_MGR0.test( fp[ 1 ] ) ) {\n\t\t\tword = replace( word, RE_LAST, '' );\n\t\t}\n\t} else if ( RE2_STEP1B.test( word ) ) {\n\t\tfp = RE2_STEP1B.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem;\n\t\t\tif ( RE_ATBLIZ.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t} else if ( RE_DOUBLE.test( word ) ) {\n\t\t\t\tword = replace( word, RE_LAST, '' );\n\t\t\t} else if ( RE_CV.test( word ) ) {\n\t\t\t\tword += 'e';\n\t\t\t}\n\t\t}\n\t}\n\n\t// Step 1c:\n\tif ( RE_STEP1C.test( word ) ) {\n\t\tfp = RE_STEP1C.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_SV.test( stem ) ) {\n\t\t\tword = stem + 'i';\n\t\t}\n\t}\n\n\t// Step 2:\n\tif ( RE_STEP2.test( word ) ) {\n\t\tfp = RE_STEP2.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step2list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 3:\n\tif ( RE_STEP3.test( word ) ) {\n\t\tfp = RE_STEP3.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tsuffix = fp[ 2 ];\n\t\tif ( RE_MGR0.test( stem ) ) {\n\t\t\tword = stem + step3list[ suffix ];\n\t\t}\n\t}\n\n\t// Step 4:\n\tif ( RE_STEP4.test( word ) ) {\n\t\tfp = RE_STEP4.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t} else if ( RE2_STEP4.test( word ) ) {\n\t\tfp = RE2_STEP4.exec( word );\n\t\tstem = fp[ 1 ] + fp[ 2 ];\n\t\tif ( RE_MGR1.test( stem ) ) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\n\t// Step 5:\n\tif ( RE_STEP5.test( word ) ) {\n\t\tfp = RE_STEP5.exec( word );\n\t\tstem = fp[ 1 ];\n\t\tif (\n\t\t\tRE_MGR1.test( stem ) ||\n\t\t\t( RE_MEQ1.test( stem ) && !( RE_CV.test( stem ) ) )\n\t\t) {\n\t\t\tword = stem;\n\t\t}\n\t}\n\tif ( endsWith( word, 'll' ) && RE_MGR1.test( word ) ) {\n\t\tword = replace( word, RE_LAST, '' );\n\t}\n\n\t// Turn initial Y back to y:\n\tif ( firstch === 'y' ) {\n\t\tword = firstch.toLowerCase() + word.substr( 1 );\n\t}\n\treturn word;\n}\n\n\n// EXPORTS //\n\nmodule.exports = porterStemmer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Extract the stem of a given word.\n*\n* @module @stdlib/nlp/porter-stemmer\n*\n* @example\n* var porterStemmer = require( '@stdlib/nlp/porter-stemmer' );\n*\n* var out = porterStemmer( 'walking' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walked' );\n* // returns 'walk'\n*\n* out = porterStemmer( 'walks' );\n* // returns 'walk'\n*/\n\n// MODULES //\n\nvar porterStemmer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = porterStemmer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace nlp\n*/\nvar nlp = {};\n\n/**\n* @name expandContractions\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/expand-contractions}\n*/\nsetReadOnly( nlp, 'expandContractions', require( './../expand-contractions' ) );\n\n/**\n* @name lda\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/lda}\n*/\nsetReadOnly( nlp, 'lda', require( './../lda' ) );\n\n/**\n* @name porterStemmer\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/porter-stemmer}\n*/\nsetReadOnly( nlp, 'porterStemmer', require( './../porter-stemmer' ) );\n\n/**\n* @name tokenize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/tokenize}\n*/\nsetReadOnly( nlp, 'tokenize', require( './../tokenize' ) );\n\n\n// EXPORTS //\n\nmodule.exports = nlp;\n"],"names":["isBoolean","require$$0","isPrimitive","isString","require$$1","hasOwnProp","require$$2","format","require$$3","ABBRS","EMOJIS","require$$5","CONTRACT","require$$6","REGEXP_PREFIXES","REGEXP_SUFFIXES","extend","arr","ext","i","length","push","tokenizeSubstring","substr","match","done","res","prefixes","suffixes","split","lib","str","keepWhitespace","subtkns","substrs","tokens","cache","TypeError","arguments","objectKeys","isCapitalized","uncapitalize","capitalize","tokenize","require$$4","CONTRACTIONS","require$$7","KEYS","token","out","key","j","Int32Array","Float64Array","setReadOnly","matrix_1","dtype","ndims","shape","data","len","mat","strides","offset","nbytes","byteLength","get","set","idx","this","v","matrix","get_thetas","Theta","val","d","k","D","K","nd","alpha","ndSum","isPositive","isObject","randu","floor","avg_matrix","A","B","weight","propA","propB","nrow","ncol","C","isPositiveInteger","avgMatrix","isNonNegativeInteger","isStringArray","contains","require$$8","getThetas","require$$9","validate","opts","options","beta","getPhis","Phi","w","W","nw","nwSum","init","topic","newz","wt","z","fit","iter","burnin","thin","kalpha","wbeta","theta","prob","word","phi","nt","u","phiList","thetaList","avgPhi","avgTheta","findIndex","vocab","searchVal","documents","target","model","err","pos","it","wd","getTerms","no","skip","ret","max","mid","endsWith","lowercase","replace","step2list","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","step3list","icate","ative","alize","iciti","ical","ful","ness","c","RE_CV","RegExp","RE_MGR0","RE_MEQ1","RE_MGR1","RE_SV","RE_STEP1A","RE2_STEP1A","RE_STEP1B","RE2_STEP1B","RE_STEP1C","RE_STEP2","RE_STEP3","RE_STEP4","RE2_STEP4","RE_STEP5","RE_LAST","RE_ATBLIZ","RE_DOUBLE","firstch","suffix","stem","fp","toUpperCase","test","exec","toLowerCase","nlp"],"mappings":"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"}